//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApplication
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class CMART0Entities : DbContext
    {
        public CMART0Entities()
            : base("name=CMART0Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Account> Accounts { get; set; }
        public DbSet<Authority> Authorities { get; set; }
        public DbSet<AuthorityName> AuthorityNames { get; set; }
        public DbSet<Bill> Bills { get; set; }
        public DbSet<BillDetail> BillDetails { get; set; }
        public DbSet<BranchOfficeReceipt> BranchOfficeReceipts { get; set; }
        public DbSet<BranchOfficeReceiptDetail> BranchOfficeReceiptDetails { get; set; }
        public DbSet<Category> Categories { get; set; }
        public DbSet<HeadquaterReceipt> HeadquaterReceipts { get; set; }
        public DbSet<HeadquaterReceiptDetail> HeadquaterReceiptDetails { get; set; }
        public DbSet<Price> Prices { get; set; }
        public DbSet<Product> Products { get; set; }
        public DbSet<Promotion> Promotions { get; set; }
        public DbSet<ProposeReceipt> ProposeReceipts { get; set; }
        public DbSet<ProposeReceiptDetail> ProposeReceiptDetails { get; set; }
        public DbSet<Supplier> Suppliers { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual ObjectResult<string> Headquarter_SelectProduct(string proposedID)
        {
            var proposedIDParameter = proposedID != null ?
                new ObjectParameter("ProposedID", proposedID) :
                new ObjectParameter("ProposedID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Headquarter_SelectProduct", proposedIDParameter);
        }
    
        public virtual int PROMOTION_ID_AUTO(ObjectParameter mAKM)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROMOTION_ID_AUTO", mAKM);
        }
    
        public virtual ObjectResult<PROMOTION_SEARCH_Result> PROMOTION_SEARCH(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROMOTION_SEARCH_Result>("PROMOTION_SEARCH", tEXTSEARCHParameter);
        }
    
        public virtual ObjectResult<PROMOTION_SELECT_Result> PROMOTION_SELECT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROMOTION_SELECT_Result>("PROMOTION_SELECT");
        }
    
        public virtual int SP_ACCOUNT_ID_AUTO(ObjectParameter maacc)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACCOUNT_ID_AUTO", maacc);
        }
    
        public virtual int sp_ACCOUNT_insert(string fullName, string address, string phoneNumber, string cMND, string userName, string password)
        {
            var fullNameParameter = fullName != null ?
                new ObjectParameter("fullName", fullName) :
                new ObjectParameter("fullName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("phoneNumber", phoneNumber) :
                new ObjectParameter("phoneNumber", typeof(string));
    
            var cMNDParameter = cMND != null ?
                new ObjectParameter("CMND", cMND) :
                new ObjectParameter("CMND", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ACCOUNT_insert", fullNameParameter, addressParameter, phoneNumberParameter, cMNDParameter, userNameParameter, passwordParameter);
        }
    
        public virtual int SP_ADD(string nAME, string sUPPLIERID, string cATEGORYID, string iMAGE)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var sUPPLIERIDParameter = sUPPLIERID != null ?
                new ObjectParameter("SUPPLIERID", sUPPLIERID) :
                new ObjectParameter("SUPPLIERID", typeof(string));
    
            var cATEGORYIDParameter = cATEGORYID != null ?
                new ObjectParameter("CATEGORYID", cATEGORYID) :
                new ObjectParameter("CATEGORYID", typeof(string));
    
            var iMAGEParameter = iMAGE != null ?
                new ObjectParameter("IMAGE", iMAGE) :
                new ObjectParameter("IMAGE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ADD", nAMEParameter, sUPPLIERIDParameter, cATEGORYIDParameter, iMAGEParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_Authority_Insert(string accountID, string nameOfAuthority, Nullable<bool> view, Nullable<bool> create, Nullable<bool> update, Nullable<bool> delete)
        {
            var accountIDParameter = accountID != null ?
                new ObjectParameter("accountID", accountID) :
                new ObjectParameter("accountID", typeof(string));
    
            var nameOfAuthorityParameter = nameOfAuthority != null ?
                new ObjectParameter("nameOfAuthority", nameOfAuthority) :
                new ObjectParameter("nameOfAuthority", typeof(string));
    
            var viewParameter = view.HasValue ?
                new ObjectParameter("view", view) :
                new ObjectParameter("view", typeof(bool));
    
            var createParameter = create.HasValue ?
                new ObjectParameter("create", create) :
                new ObjectParameter("create", typeof(bool));
    
            var updateParameter = update.HasValue ?
                new ObjectParameter("update", update) :
                new ObjectParameter("update", typeof(bool));
    
            var deleteParameter = delete.HasValue ?
                new ObjectParameter("delete", delete) :
                new ObjectParameter("delete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Authority_Insert", accountIDParameter, nameOfAuthorityParameter, viewParameter, createParameter, updateParameter, deleteParameter);
        }
    
        public virtual int SP_BILL_ID_AUTO(string branch, string pOS, ObjectParameter iD)
        {
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var pOSParameter = pOS != null ?
                new ObjectParameter("POS", pOS) :
                new ObjectParameter("POS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BILL_ID_AUTO", branchParameter, pOSParameter, iD);
        }
    
        public virtual int SP_BILL_insert(Nullable<double> totalAmount, Nullable<int> totalQuantity, Nullable<double> iM, Nullable<double> oM, string branch, Nullable<int> pos, string acc, ObjectParameter mahd)
        {
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(double));
    
            var totalQuantityParameter = totalQuantity.HasValue ?
                new ObjectParameter("TotalQuantity", totalQuantity) :
                new ObjectParameter("TotalQuantity", typeof(int));
    
            var iMParameter = iM.HasValue ?
                new ObjectParameter("iM", iM) :
                new ObjectParameter("iM", typeof(double));
    
            var oMParameter = oM.HasValue ?
                new ObjectParameter("oM", oM) :
                new ObjectParameter("oM", typeof(double));
    
            var branchParameter = branch != null ?
                new ObjectParameter("branch", branch) :
                new ObjectParameter("branch", typeof(string));
    
            var posParameter = pos.HasValue ?
                new ObjectParameter("pos", pos) :
                new ObjectParameter("pos", typeof(int));
    
            var accParameter = acc != null ?
                new ObjectParameter("acc", acc) :
                new ObjectParameter("acc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BILL_insert", totalAmountParameter, totalQuantityParameter, iMParameter, oMParameter, branchParameter, posParameter, accParameter, mahd);
        }
    
        public virtual int SP_BranchOfficeID_AUTO(string branch, ObjectParameter branchOfficeID)
        {
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BranchOfficeID_AUTO", branchParameter, branchOfficeID);
        }
    
        public virtual ObjectResult<sp_BranchOfficeSearch_Result> sp_BranchOfficeSearch(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BranchOfficeSearch_Result>("sp_BranchOfficeSearch", tEXTSEARCHParameter);
        }
    
        public virtual int SP_CATEGORY_ID_AUTO(ObjectParameter madm)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATEGORY_ID_AUTO", madm);
        }
    
        public virtual int sp_CATEGORY_insert(string name, Nullable<int> quantity)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CATEGORY_insert", nameParameter, quantityParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_HEADQUATER_ID_AUTO(ObjectParameter mahd)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HEADQUATER_ID_AUTO", mahd);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_INSERT_ACCOUNTID(string fULLNAME, string aDDRESS, string pHONENUMBER, string cMND, string uSERNAME, string pASSOWRD)
        {
            var fULLNAMEParameter = fULLNAME != null ?
                new ObjectParameter("FULLNAME", fULLNAME) :
                new ObjectParameter("FULLNAME", typeof(string));
    
            var aDDRESSParameter = aDDRESS != null ?
                new ObjectParameter("ADDRESS", aDDRESS) :
                new ObjectParameter("ADDRESS", typeof(string));
    
            var pHONENUMBERParameter = pHONENUMBER != null ?
                new ObjectParameter("PHONENUMBER", pHONENUMBER) :
                new ObjectParameter("PHONENUMBER", typeof(string));
    
            var cMNDParameter = cMND != null ?
                new ObjectParameter("CMND", cMND) :
                new ObjectParameter("CMND", typeof(string));
    
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            var pASSOWRDParameter = pASSOWRD != null ?
                new ObjectParameter("PASSOWRD", pASSOWRD) :
                new ObjectParameter("PASSOWRD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_ACCOUNTID", fULLNAMEParameter, aDDRESSParameter, pHONENUMBERParameter, cMNDParameter, uSERNAMEParameter, pASSOWRDParameter);
        }
    
        public virtual int SP_INSERT_BILL(Nullable<int> pOS, Nullable<double> tOTALA, Nullable<int> tOTALQ, Nullable<double> iNPUTMONEY, Nullable<double> oUTPUT, Nullable<int> aCCOUNTID)
        {
            var pOSParameter = pOS.HasValue ?
                new ObjectParameter("POS", pOS) :
                new ObjectParameter("POS", typeof(int));
    
            var tOTALAParameter = tOTALA.HasValue ?
                new ObjectParameter("TOTALA", tOTALA) :
                new ObjectParameter("TOTALA", typeof(double));
    
            var tOTALQParameter = tOTALQ.HasValue ?
                new ObjectParameter("TOTALQ", tOTALQ) :
                new ObjectParameter("TOTALQ", typeof(int));
    
            var iNPUTMONEYParameter = iNPUTMONEY.HasValue ?
                new ObjectParameter("INPUTMONEY", iNPUTMONEY) :
                new ObjectParameter("INPUTMONEY", typeof(double));
    
            var oUTPUTParameter = oUTPUT.HasValue ?
                new ObjectParameter("OUTPUT", oUTPUT) :
                new ObjectParameter("OUTPUT", typeof(double));
    
            var aCCOUNTIDParameter = aCCOUNTID.HasValue ?
                new ObjectParameter("ACCOUNTID", aCCOUNTID) :
                new ObjectParameter("ACCOUNTID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_BILL", pOSParameter, tOTALAParameter, tOTALQParameter, iNPUTMONEYParameter, oUTPUTParameter, aCCOUNTIDParameter);
        }
    
        public virtual int SP_INSERT_BRANCHRECEIPT(string hEADQUATERID, string bRANCH, string aCOUNTID)
        {
            var hEADQUATERIDParameter = hEADQUATERID != null ?
                new ObjectParameter("HEADQUATERID", hEADQUATERID) :
                new ObjectParameter("HEADQUATERID", typeof(string));
    
            var bRANCHParameter = bRANCH != null ?
                new ObjectParameter("BRANCH", bRANCH) :
                new ObjectParameter("BRANCH", typeof(string));
    
            var aCOUNTIDParameter = aCOUNTID != null ?
                new ObjectParameter("ACOUNTID", aCOUNTID) :
                new ObjectParameter("ACOUNTID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_BRANCHRECEIPT", hEADQUATERIDParameter, bRANCHParameter, aCOUNTIDParameter);
        }
    
        public virtual int SP_INSERT_HEADQUATER(string pROPOSEID, Nullable<double> tOTAL, string aCCOUNTID)
        {
            var pROPOSEIDParameter = pROPOSEID != null ?
                new ObjectParameter("PROPOSEID", pROPOSEID) :
                new ObjectParameter("PROPOSEID", typeof(string));
    
            var tOTALParameter = tOTAL.HasValue ?
                new ObjectParameter("TOTAL", tOTAL) :
                new ObjectParameter("TOTAL", typeof(double));
    
            var aCCOUNTIDParameter = aCCOUNTID != null ?
                new ObjectParameter("ACCOUNTID", aCCOUNTID) :
                new ObjectParameter("ACCOUNTID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_HEADQUATER", pROPOSEIDParameter, tOTALParameter, aCCOUNTIDParameter);
        }
    
        public virtual int SP_INSERT_HEADQUATERRECEIPT(string proposeID, string accountID)
        {
            var proposeIDParameter = proposeID != null ?
                new ObjectParameter("ProposeID", proposeID) :
                new ObjectParameter("ProposeID", typeof(string));
    
            var accountIDParameter = accountID != null ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_HEADQUATERRECEIPT", proposeIDParameter, accountIDParameter);
        }
    
        public virtual int SP_INSERT_HEADQUATERRECEIPTDETAIL(string headquarterID, string productID, Nullable<int> quantity, Nullable<double> price, string status)
        {
            var headquarterIDParameter = headquarterID != null ?
                new ObjectParameter("HeadquarterID", headquarterID) :
                new ObjectParameter("HeadquarterID", typeof(string));
    
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_HEADQUATERRECEIPTDETAIL", headquarterIDParameter, productIDParameter, quantityParameter, priceParameter, statusParameter);
        }
    
        public virtual int SP_INSERT_PRODUCT(string nAME, string sUPPLIERID, string cATEGORYID, string iMAGE)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var sUPPLIERIDParameter = sUPPLIERID != null ?
                new ObjectParameter("SUPPLIERID", sUPPLIERID) :
                new ObjectParameter("SUPPLIERID", typeof(string));
    
            var cATEGORYIDParameter = cATEGORYID != null ?
                new ObjectParameter("CATEGORYID", cATEGORYID) :
                new ObjectParameter("CATEGORYID", typeof(string));
    
            var iMAGEParameter = iMAGE != null ?
                new ObjectParameter("IMAGE", iMAGE) :
                new ObjectParameter("IMAGE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_PRODUCT", nAMEParameter, sUPPLIERIDParameter, cATEGORYIDParameter, iMAGEParameter);
        }
    
        public virtual int SP_INSERT_PROPOSE(string sUPPLIERID, string aCCOUNTID)
        {
            var sUPPLIERIDParameter = sUPPLIERID != null ?
                new ObjectParameter("SUPPLIERID", sUPPLIERID) :
                new ObjectParameter("SUPPLIERID", typeof(string));
    
            var aCCOUNTIDParameter = aCCOUNTID != null ?
                new ObjectParameter("ACCOUNTID", aCCOUNTID) :
                new ObjectParameter("ACCOUNTID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_PROPOSE", sUPPLIERIDParameter, aCCOUNTIDParameter);
        }
    
        public virtual int SP_INSERT_SUPPLIER(string nAME, string aDDRESS, string pHONENUMBER)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var aDDRESSParameter = aDDRESS != null ?
                new ObjectParameter("ADDRESS", aDDRESS) :
                new ObjectParameter("ADDRESS", typeof(string));
    
            var pHONENUMBERParameter = pHONENUMBER != null ?
                new ObjectParameter("PHONENUMBER", pHONENUMBER) :
                new ObjectParameter("PHONENUMBER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_SUPPLIER", nAMEParameter, aDDRESSParameter, pHONENUMBERParameter);
        }
    
        public virtual ObjectResult<SP_INVOICE_PRINT_Result> SP_INVOICE_PRINT(string bILLID)
        {
            var bILLIDParameter = bILLID != null ?
                new ObjectParameter("BILLID", bILLID) :
                new ObjectParameter("BILLID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_INVOICE_PRINT_Result>("SP_INVOICE_PRINT", bILLIDParameter);
        }
    
        public virtual ObjectResult<SP_LOAD_BRANCHRECEIPTDETAIL_Result> SP_LOAD_BRANCHRECEIPTDETAIL(string branchOfficeID)
        {
            var branchOfficeIDParameter = branchOfficeID != null ?
                new ObjectParameter("BranchOfficeID", branchOfficeID) :
                new ObjectParameter("BranchOfficeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LOAD_BRANCHRECEIPTDETAIL_Result>("SP_LOAD_BRANCHRECEIPTDETAIL", branchOfficeIDParameter);
        }
    
        public virtual ObjectResult<SP_PRINT_BRANCHRECEIPTDETAIL_Result> SP_PRINT_BRANCHRECEIPTDETAIL(string branchOfficeID)
        {
            var branchOfficeIDParameter = branchOfficeID != null ?
                new ObjectParameter("BranchOfficeID", branchOfficeID) :
                new ObjectParameter("BranchOfficeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PRINT_BRANCHRECEIPTDETAIL_Result>("SP_PRINT_BRANCHRECEIPTDETAIL", branchOfficeIDParameter);
        }
    
        public virtual ObjectResult<SP_PRINT_Headquarter_Result> SP_PRINT_Headquarter(string headquarterID)
        {
            var headquarterIDParameter = headquarterID != null ?
                new ObjectParameter("HeadquarterID", headquarterID) :
                new ObjectParameter("HeadquarterID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PRINT_Headquarter_Result>("SP_PRINT_Headquarter", headquarterIDParameter);
        }
    
        public virtual ObjectResult<SP_PRINT_Proposed_Result> SP_PRINT_Proposed(string proposedID)
        {
            var proposedIDParameter = proposedID != null ?
                new ObjectParameter("ProposedID", proposedID) :
                new ObjectParameter("ProposedID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PRINT_Proposed_Result>("SP_PRINT_Proposed", proposedIDParameter);
        }
    
        public virtual int SP_PRODUCT_ID_AUTO(ObjectParameter iD)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PRODUCT_ID_AUTO", iD);
        }
    
        public virtual int SP_PROMOTION_INSERT(Nullable<float> promotionPrice, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string content, string image, string productId)
        {
            var promotionPriceParameter = promotionPrice.HasValue ?
                new ObjectParameter("PromotionPrice", promotionPrice) :
                new ObjectParameter("PromotionPrice", typeof(float));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var productIdParameter = productId != null ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PROMOTION_INSERT", promotionPriceParameter, startDateParameter, endDateParameter, contentParameter, imageParameter, productIdParameter);
        }
    
        public virtual int SP_PROPOSE_ID_AUTO(ObjectParameter mahd)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PROPOSE_ID_AUTO", mahd);
        }
    
        public virtual int sp_ProposedDetail_Insert(string productID, string proposedID, Nullable<int> quantity)
        {
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            var proposedIDParameter = proposedID != null ?
                new ObjectParameter("ProposedID", proposedID) :
                new ObjectParameter("ProposedID", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProposedDetail_Insert", productIDParameter, proposedIDParameter, quantityParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<SP_SEARCH_PRODUCT_Result> SP_SEARCH_PRODUCT(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SEARCH_PRODUCT_Result>("SP_SEARCH_PRODUCT", tEXTSEARCHParameter);
        }
    
        public virtual ObjectResult<SP_SELECTALL_PRODUCT_Result> SP_SELECTALL_PRODUCT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SELECTALL_PRODUCT_Result>("SP_SELECTALL_PRODUCT");
        }
    
        public virtual ObjectResult<SP_SUMREPORT_Result> SP_SUMREPORT(Nullable<int> nGAY, Nullable<int> tHANG, Nullable<int> nAM, Nullable<System.DateTime> fROM, Nullable<System.DateTime> tO, Nullable<int> pICK, Nullable<int> fILL)
        {
            var nGAYParameter = nGAY.HasValue ?
                new ObjectParameter("NGAY", nGAY) :
                new ObjectParameter("NGAY", typeof(int));
    
            var tHANGParameter = tHANG.HasValue ?
                new ObjectParameter("THANG", tHANG) :
                new ObjectParameter("THANG", typeof(int));
    
            var nAMParameter = nAM.HasValue ?
                new ObjectParameter("NAM", nAM) :
                new ObjectParameter("NAM", typeof(int));
    
            var fROMParameter = fROM.HasValue ?
                new ObjectParameter("FROM", fROM) :
                new ObjectParameter("FROM", typeof(System.DateTime));
    
            var tOParameter = tO.HasValue ?
                new ObjectParameter("TO", tO) :
                new ObjectParameter("TO", typeof(System.DateTime));
    
            var pICKParameter = pICK.HasValue ?
                new ObjectParameter("PICK", pICK) :
                new ObjectParameter("PICK", typeof(int));
    
            var fILLParameter = fILL.HasValue ?
                new ObjectParameter("FILL", fILL) :
                new ObjectParameter("FILL", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SUMREPORT_Result>("SP_SUMREPORT", nGAYParameter, tHANGParameter, nAMParameter, fROMParameter, tOParameter, pICKParameter, fILLParameter);
        }
    
        public virtual int SP_SUPPLIER_ID_AUTO(ObjectParameter maacc)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SUPPLIER_ID_AUTO", maacc);
        }
    
        public virtual ObjectResult<SP_THONGKEDOANHTHU_Result> SP_THONGKEDOANHTHU(Nullable<int> nGAY, Nullable<int> tHANG, Nullable<int> nAM)
        {
            var nGAYParameter = nGAY.HasValue ?
                new ObjectParameter("NGAY", nGAY) :
                new ObjectParameter("NGAY", typeof(int));
    
            var tHANGParameter = tHANG.HasValue ?
                new ObjectParameter("THANG", tHANG) :
                new ObjectParameter("THANG", typeof(int));
    
            var nAMParameter = nAM.HasValue ?
                new ObjectParameter("NAM", nAM) :
                new ObjectParameter("NAM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_THONGKEDOANHTHU_Result>("SP_THONGKEDOANHTHU", nGAYParameter, tHANGParameter, nAMParameter);
        }
    
        public virtual ObjectResult<SP_THONGKEDOANHTHU_KTG_Result> SP_THONGKEDOANHTHU_KTG(Nullable<System.DateTime> fROM, Nullable<System.DateTime> tO)
        {
            var fROMParameter = fROM.HasValue ?
                new ObjectParameter("FROM", fROM) :
                new ObjectParameter("FROM", typeof(System.DateTime));
    
            var tOParameter = tO.HasValue ?
                new ObjectParameter("TO", tO) :
                new ObjectParameter("TO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_THONGKEDOANHTHU_KTG_Result>("SP_THONGKEDOANHTHU_KTG", fROMParameter, tOParameter);
        }
    
        public virtual ObjectResult<SP_THONGKEDOANHTHU_KTG_TOP10_Result> SP_THONGKEDOANHTHU_KTG_TOP10(Nullable<System.DateTime> fROM, Nullable<System.DateTime> tO, Nullable<int> top)
        {
            var fROMParameter = fROM.HasValue ?
                new ObjectParameter("FROM", fROM) :
                new ObjectParameter("FROM", typeof(System.DateTime));
    
            var tOParameter = tO.HasValue ?
                new ObjectParameter("TO", tO) :
                new ObjectParameter("TO", typeof(System.DateTime));
    
            var topParameter = top.HasValue ?
                new ObjectParameter("top", top) :
                new ObjectParameter("top", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_THONGKEDOANHTHU_KTG_TOP10_Result>("SP_THONGKEDOANHTHU_KTG_TOP10", fROMParameter, tOParameter, topParameter);
        }
    
        public virtual ObjectResult<SP_THONGKEDOANHTHU_KTG_TOP20_Result> SP_THONGKEDOANHTHU_KTG_TOP20(Nullable<System.DateTime> fROM, Nullable<System.DateTime> tO, Nullable<int> top)
        {
            var fROMParameter = fROM.HasValue ?
                new ObjectParameter("FROM", fROM) :
                new ObjectParameter("FROM", typeof(System.DateTime));
    
            var tOParameter = tO.HasValue ?
                new ObjectParameter("TO", tO) :
                new ObjectParameter("TO", typeof(System.DateTime));
    
            var topParameter = top.HasValue ?
                new ObjectParameter("top", top) :
                new ObjectParameter("top", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_THONGKEDOANHTHU_KTG_TOP20_Result>("SP_THONGKEDOANHTHU_KTG_TOP20", fROMParameter, tOParameter, topParameter);
        }
    
        public virtual ObjectResult<SP_THONGKEDOANHTHU_KTG_TOP5_Result> SP_THONGKEDOANHTHU_KTG_TOP5(Nullable<System.DateTime> fROM, Nullable<System.DateTime> tO, Nullable<int> top)
        {
            var fROMParameter = fROM.HasValue ?
                new ObjectParameter("FROM", fROM) :
                new ObjectParameter("FROM", typeof(System.DateTime));
    
            var tOParameter = tO.HasValue ?
                new ObjectParameter("TO", tO) :
                new ObjectParameter("TO", typeof(System.DateTime));
    
            var topParameter = top.HasValue ?
                new ObjectParameter("top", top) :
                new ObjectParameter("top", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_THONGKEDOANHTHU_KTG_TOP5_Result>("SP_THONGKEDOANHTHU_KTG_TOP5", fROMParameter, tOParameter, topParameter);
        }
    
        public virtual ObjectResult<SP_THONGKEDOANHTHU_TOP10_Result> SP_THONGKEDOANHTHU_TOP10(Nullable<int> nGAY, Nullable<int> tHANG, Nullable<int> nAM)
        {
            var nGAYParameter = nGAY.HasValue ?
                new ObjectParameter("NGAY", nGAY) :
                new ObjectParameter("NGAY", typeof(int));
    
            var tHANGParameter = tHANG.HasValue ?
                new ObjectParameter("THANG", tHANG) :
                new ObjectParameter("THANG", typeof(int));
    
            var nAMParameter = nAM.HasValue ?
                new ObjectParameter("NAM", nAM) :
                new ObjectParameter("NAM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_THONGKEDOANHTHU_TOP10_Result>("SP_THONGKEDOANHTHU_TOP10", nGAYParameter, tHANGParameter, nAMParameter);
        }
    
        public virtual ObjectResult<SP_THONGKEDOANHTHU_TOP20_Result> SP_THONGKEDOANHTHU_TOP20(Nullable<int> nGAY, Nullable<int> tHANG, Nullable<int> nAM)
        {
            var nGAYParameter = nGAY.HasValue ?
                new ObjectParameter("NGAY", nGAY) :
                new ObjectParameter("NGAY", typeof(int));
    
            var tHANGParameter = tHANG.HasValue ?
                new ObjectParameter("THANG", tHANG) :
                new ObjectParameter("THANG", typeof(int));
    
            var nAMParameter = nAM.HasValue ?
                new ObjectParameter("NAM", nAM) :
                new ObjectParameter("NAM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_THONGKEDOANHTHU_TOP20_Result>("SP_THONGKEDOANHTHU_TOP20", nGAYParameter, tHANGParameter, nAMParameter);
        }
    
        public virtual ObjectResult<SP_THONGKEDOANHTHU_TOP5_Result> SP_THONGKEDOANHTHU_TOP5(Nullable<int> nGAY, Nullable<int> tHANG, Nullable<int> nAM)
        {
            var nGAYParameter = nGAY.HasValue ?
                new ObjectParameter("NGAY", nGAY) :
                new ObjectParameter("NGAY", typeof(int));
    
            var tHANGParameter = tHANG.HasValue ?
                new ObjectParameter("THANG", tHANG) :
                new ObjectParameter("THANG", typeof(int));
    
            var nAMParameter = nAM.HasValue ?
                new ObjectParameter("NAM", nAM) :
                new ObjectParameter("NAM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_THONGKEDOANHTHU_TOP5_Result>("SP_THONGKEDOANHTHU_TOP5", nGAYParameter, tHANGParameter, nAMParameter);
        }
    
        public virtual int SP_UPDATE_ACCOUNT(string accountID, string fULLNAME, string aDDRESS, string pHONENUMBER, string cMND, string uSERNAME, string pASSOWRD)
        {
            var accountIDParameter = accountID != null ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(string));
    
            var fULLNAMEParameter = fULLNAME != null ?
                new ObjectParameter("FULLNAME", fULLNAME) :
                new ObjectParameter("FULLNAME", typeof(string));
    
            var aDDRESSParameter = aDDRESS != null ?
                new ObjectParameter("ADDRESS", aDDRESS) :
                new ObjectParameter("ADDRESS", typeof(string));
    
            var pHONENUMBERParameter = pHONENUMBER != null ?
                new ObjectParameter("PHONENUMBER", pHONENUMBER) :
                new ObjectParameter("PHONENUMBER", typeof(string));
    
            var cMNDParameter = cMND != null ?
                new ObjectParameter("CMND", cMND) :
                new ObjectParameter("CMND", typeof(string));
    
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            var pASSOWRDParameter = pASSOWRD != null ?
                new ObjectParameter("PASSOWRD", pASSOWRD) :
                new ObjectParameter("PASSOWRD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_ACCOUNT", accountIDParameter, fULLNAMEParameter, aDDRESSParameter, pHONENUMBERParameter, cMNDParameter, uSERNAMEParameter, pASSOWRDParameter);
        }
    
        public virtual int SP_UPDATE_BRANCHRECEIPT(string branchOfficeID, string hEADQUATERID, string aCOUNTID)
        {
            var branchOfficeIDParameter = branchOfficeID != null ?
                new ObjectParameter("BranchOfficeID", branchOfficeID) :
                new ObjectParameter("BranchOfficeID", typeof(string));
    
            var hEADQUATERIDParameter = hEADQUATERID != null ?
                new ObjectParameter("HEADQUATERID", hEADQUATERID) :
                new ObjectParameter("HEADQUATERID", typeof(string));
    
            var aCOUNTIDParameter = aCOUNTID != null ?
                new ObjectParameter("ACOUNTID", aCOUNTID) :
                new ObjectParameter("ACOUNTID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_BRANCHRECEIPT", branchOfficeIDParameter, hEADQUATERIDParameter, aCOUNTIDParameter);
        }
    
        public virtual int SP_UPDATE_BRANCHRECEIPTDETAIL(string branchOfficeID, string productID, Nullable<int> quantity, string status)
        {
            var branchOfficeIDParameter = branchOfficeID != null ?
                new ObjectParameter("BranchOfficeID", branchOfficeID) :
                new ObjectParameter("BranchOfficeID", typeof(string));
    
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_BRANCHRECEIPTDETAIL", branchOfficeIDParameter, productIDParameter, quantityParameter, statusParameter);
        }
    
        public virtual int SP_UPDATE_HEADQUATERRECEIPT(string hEADQUATERID, string proposeID, Nullable<double> totalAmount, string accountID)
        {
            var hEADQUATERIDParameter = hEADQUATERID != null ?
                new ObjectParameter("HEADQUATERID", hEADQUATERID) :
                new ObjectParameter("HEADQUATERID", typeof(string));
    
            var proposeIDParameter = proposeID != null ?
                new ObjectParameter("ProposeID", proposeID) :
                new ObjectParameter("ProposeID", typeof(string));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(double));
    
            var accountIDParameter = accountID != null ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_HEADQUATERRECEIPT", hEADQUATERIDParameter, proposeIDParameter, totalAmountParameter, accountIDParameter);
        }
    
        public virtual int SP_UPDATE_HEADQUATERRECEIPTDETAIL(string hEADQUATERID, string productID, Nullable<int> quantity, Nullable<double> price, string status)
        {
            var hEADQUATERIDParameter = hEADQUATERID != null ?
                new ObjectParameter("HEADQUATERID", hEADQUATERID) :
                new ObjectParameter("HEADQUATERID", typeof(string));
    
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_HEADQUATERRECEIPTDETAIL", hEADQUATERIDParameter, productIDParameter, quantityParameter, priceParameter, statusParameter);
        }
    
        public virtual int SP_UPDATE_PRODUCT(string iD, string nAME, string sUPPLIERID, string cATEGORYID, string iMAGE)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var sUPPLIERIDParameter = sUPPLIERID != null ?
                new ObjectParameter("SUPPLIERID", sUPPLIERID) :
                new ObjectParameter("SUPPLIERID", typeof(string));
    
            var cATEGORYIDParameter = cATEGORYID != null ?
                new ObjectParameter("CATEGORYID", cATEGORYID) :
                new ObjectParameter("CATEGORYID", typeof(string));
    
            var iMAGEParameter = iMAGE != null ?
                new ObjectParameter("IMAGE", iMAGE) :
                new ObjectParameter("IMAGE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_PRODUCT", iDParameter, nAMEParameter, sUPPLIERIDParameter, cATEGORYIDParameter, iMAGEParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int usp_Account_Delete(string accountID)
        {
            var accountIDParameter = accountID != null ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Account_Delete", accountIDParameter);
        }
    
        public virtual ObjectResult<usp_AccountSearch_Result> usp_AccountSearch(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AccountSearch_Result>("usp_AccountSearch", tEXTSEARCHParameter);
        }
    
        public virtual int usp_AccountUpdate(string accountID, string fullName, string address, string phoneNumber, string cMND, string userName, string password)
        {
            var accountIDParameter = accountID != null ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var cMNDParameter = cMND != null ?
                new ObjectParameter("CMND", cMND) :
                new ObjectParameter("CMND", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AccountUpdate", accountIDParameter, fullNameParameter, addressParameter, phoneNumberParameter, cMNDParameter, userNameParameter, passwordParameter);
        }
    
        public virtual int usp_AuthorityUpdate(string accountID, string nameOfAuthority, Nullable<bool> create, Nullable<bool> update, Nullable<bool> delete, Nullable<bool> view)
        {
            var accountIDParameter = accountID != null ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(string));
    
            var nameOfAuthorityParameter = nameOfAuthority != null ?
                new ObjectParameter("NameOfAuthority", nameOfAuthority) :
                new ObjectParameter("NameOfAuthority", typeof(string));
    
            var createParameter = create.HasValue ?
                new ObjectParameter("Create", create) :
                new ObjectParameter("Create", typeof(bool));
    
            var updateParameter = update.HasValue ?
                new ObjectParameter("Update", update) :
                new ObjectParameter("Update", typeof(bool));
    
            var deleteParameter = delete.HasValue ?
                new ObjectParameter("Delete", delete) :
                new ObjectParameter("Delete", typeof(bool));
    
            var viewParameter = view.HasValue ?
                new ObjectParameter("View", view) :
                new ObjectParameter("View", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AuthorityUpdate", accountIDParameter, nameOfAuthorityParameter, createParameter, updateParameter, deleteParameter, viewParameter);
        }
    
        public virtual int usp_Bill_Delete(string productID)
        {
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Bill_Delete", productIDParameter);
        }
    
        public virtual ObjectResult<usp_Bill_Insert_returnid_Result> usp_Bill_Insert_returnid(Nullable<double> totalAmount, Nullable<int> totalQuantity, Nullable<double> iM, Nullable<double> oM, string branch, Nullable<int> pos, string acc)
        {
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(double));
    
            var totalQuantityParameter = totalQuantity.HasValue ?
                new ObjectParameter("TotalQuantity", totalQuantity) :
                new ObjectParameter("TotalQuantity", typeof(int));
    
            var iMParameter = iM.HasValue ?
                new ObjectParameter("iM", iM) :
                new ObjectParameter("iM", typeof(double));
    
            var oMParameter = oM.HasValue ?
                new ObjectParameter("oM", oM) :
                new ObjectParameter("oM", typeof(double));
    
            var branchParameter = branch != null ?
                new ObjectParameter("branch", branch) :
                new ObjectParameter("branch", typeof(string));
    
            var posParameter = pos.HasValue ?
                new ObjectParameter("pos", pos) :
                new ObjectParameter("pos", typeof(int));
    
            var accParameter = acc != null ?
                new ObjectParameter("acc", acc) :
                new ObjectParameter("acc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Bill_Insert_returnid_Result>("usp_Bill_Insert_returnid", totalAmountParameter, totalQuantityParameter, iMParameter, oMParameter, branchParameter, posParameter, accParameter);
        }
    
        public virtual ObjectResult<usp_Bill_Search_Result> usp_Bill_Search(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Bill_Search_Result>("usp_Bill_Search", tEXTSEARCHParameter);
        }
    
        public virtual ObjectResult<usp_Bill_Search_BillId_Result> usp_Bill_Search_BillId(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Bill_Search_BillId_Result>("usp_Bill_Search_BillId", tEXTSEARCHParameter);
        }
    
        public virtual ObjectResult<usp_Bill_Search_FullName_Result> usp_Bill_Search_FullName(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Bill_Search_FullName_Result>("usp_Bill_Search_FullName", tEXTSEARCHParameter);
        }
    
        public virtual ObjectResult<usp_Bill_Search_Inputmoney_Result> usp_Bill_Search_Inputmoney(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Bill_Search_Inputmoney_Result>("usp_Bill_Search_Inputmoney", tEXTSEARCHParameter);
        }
    
        public virtual ObjectResult<usp_Bill_Search_POS_Result> usp_Bill_Search_POS(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Bill_Search_POS_Result>("usp_Bill_Search_POS", tEXTSEARCHParameter);
        }
    
        public virtual ObjectResult<usp_Bill_Search_SaleDate_Result> usp_Bill_Search_SaleDate(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Bill_Search_SaleDate_Result>("usp_Bill_Search_SaleDate", tEXTSEARCHParameter);
        }
    
        public virtual ObjectResult<usp_Bill_Search_TotalAmount_Result> usp_Bill_Search_TotalAmount(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Bill_Search_TotalAmount_Result>("usp_Bill_Search_TotalAmount", tEXTSEARCHParameter);
        }
    
        public virtual ObjectResult<usp_Bill_Search_TotalQuantity_Result> usp_Bill_Search_TotalQuantity(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Bill_Search_TotalQuantity_Result>("usp_Bill_Search_TotalQuantity", tEXTSEARCHParameter);
        }
    
        public virtual ObjectResult<usp_Bill_SelectAll_Result> usp_Bill_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Bill_SelectAll_Result>("usp_Bill_SelectAll");
        }
    
        public virtual int usp_Bill_Update(string billID, Nullable<System.DateTime> saleDate, Nullable<int> pOS, Nullable<double> totalAmount, Nullable<int> totalQuantity, Nullable<double> inputmoney, Nullable<double> outputmoney, string accountID)
        {
            var billIDParameter = billID != null ?
                new ObjectParameter("BillID", billID) :
                new ObjectParameter("BillID", typeof(string));
    
            var saleDateParameter = saleDate.HasValue ?
                new ObjectParameter("SaleDate", saleDate) :
                new ObjectParameter("SaleDate", typeof(System.DateTime));
    
            var pOSParameter = pOS.HasValue ?
                new ObjectParameter("POS", pOS) :
                new ObjectParameter("POS", typeof(int));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(double));
    
            var totalQuantityParameter = totalQuantity.HasValue ?
                new ObjectParameter("TotalQuantity", totalQuantity) :
                new ObjectParameter("TotalQuantity", typeof(int));
    
            var inputmoneyParameter = inputmoney.HasValue ?
                new ObjectParameter("Inputmoney", inputmoney) :
                new ObjectParameter("Inputmoney", typeof(double));
    
            var outputmoneyParameter = outputmoney.HasValue ?
                new ObjectParameter("Outputmoney", outputmoney) :
                new ObjectParameter("Outputmoney", typeof(double));
    
            var accountIDParameter = accountID != null ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Bill_Update", billIDParameter, saleDateParameter, pOSParameter, totalAmountParameter, totalQuantityParameter, inputmoneyParameter, outputmoneyParameter, accountIDParameter);
        }
    
        public virtual int usp_BillDetail_Add(string billID, string productID, Nullable<int> quantity, Nullable<double> price)
        {
            var billIDParameter = billID != null ?
                new ObjectParameter("BillID", billID) :
                new ObjectParameter("BillID", typeof(string));
    
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_BillDetail_Add", billIDParameter, productIDParameter, quantityParameter, priceParameter);
        }
    
        public virtual int usp_BillDetail_Delete(string billID, string productID)
        {
            var billIDParameter = billID != null ?
                new ObjectParameter("BillID", billID) :
                new ObjectParameter("BillID", typeof(string));
    
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_BillDetail_Delete", billIDParameter, productIDParameter);
        }
    
        public virtual ObjectResult<usp_BranchOfficeDetailSearch_Result> usp_BranchOfficeDetailSearch(string branchOfficeID, string tEXTSEARCH)
        {
            var branchOfficeIDParameter = branchOfficeID != null ?
                new ObjectParameter("BranchOfficeID", branchOfficeID) :
                new ObjectParameter("BranchOfficeID", typeof(string));
    
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BranchOfficeDetailSearch_Result>("usp_BranchOfficeDetailSearch", branchOfficeIDParameter, tEXTSEARCHParameter);
        }
    
        public virtual ObjectResult<usp_BranchOfficeSearch_Result> usp_BranchOfficeSearch(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BranchOfficeSearch_Result>("usp_BranchOfficeSearch", tEXTSEARCHParameter);
        }
    
        public virtual ObjectResult<usp_CategorySearch_Result> usp_CategorySearch(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CategorySearch_Result>("usp_CategorySearch", tEXTSEARCHParameter);
        }
    
        public virtual int usp_CategoryUpdate(string categoryID, string name, Nullable<int> quantity)
        {
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CategoryUpdate", categoryIDParameter, nameParameter, quantityParameter);
        }
    
        public virtual int usp_CategoryUpdate2(string categoryID, Nullable<int> quantity)
        {
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CategoryUpdate2", categoryIDParameter, quantityParameter);
        }
    
        public virtual int usp_HeadquarterDetailDeleteAll(string headquarterID)
        {
            var headquarterIDParameter = headquarterID != null ?
                new ObjectParameter("HeadquarterID", headquarterID) :
                new ObjectParameter("HeadquarterID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HeadquarterDetailDeleteAll", headquarterIDParameter);
        }
    
        public virtual ObjectResult<usp_HeadquarterReceiptDetailSearch_Result> usp_HeadquarterReceiptDetailSearch(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HeadquarterReceiptDetailSearch_Result>("usp_HeadquarterReceiptDetailSearch", tEXTSEARCHParameter);
        }
    
        public virtual ObjectResult<usp_HEADQUATERRECEIPTSearch_Result> usp_HEADQUATERRECEIPTSearch(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HEADQUATERRECEIPTSearch_Result>("usp_HEADQUATERRECEIPTSearch", tEXTSEARCHParameter);
        }
    
        public virtual int usp_PriceDelete(string productID, Nullable<double> price, Nullable<System.DateTime> effectiveDay)
        {
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var effectiveDayParameter = effectiveDay.HasValue ?
                new ObjectParameter("EffectiveDay", effectiveDay) :
                new ObjectParameter("EffectiveDay", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PriceDelete", productIDParameter, priceParameter, effectiveDayParameter);
        }
    
        public virtual int usp_PriceInsert(string productID, Nullable<double> price, Nullable<System.DateTime> effectiveDay)
        {
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var effectiveDayParameter = effectiveDay.HasValue ?
                new ObjectParameter("EffectiveDay", effectiveDay) :
                new ObjectParameter("EffectiveDay", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PriceInsert", productIDParameter, priceParameter, effectiveDayParameter);
        }
    
        public virtual ObjectResult<usp_PriceSearch_Result> usp_PriceSearch(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PriceSearch_Result>("usp_PriceSearch", tEXTSEARCHParameter);
        }
    
        public virtual int usp_PriceUpdate(string productID, Nullable<double> price, Nullable<System.DateTime> effectiveDay)
        {
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var effectiveDayParameter = effectiveDay.HasValue ?
                new ObjectParameter("EffectiveDay", effectiveDay) :
                new ObjectParameter("EffectiveDay", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PriceUpdate", productIDParameter, priceParameter, effectiveDayParameter);
        }
    
        public virtual int usp_PromotionUpdate(string iD, Nullable<double> pPrice, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string cont, string img, string proID)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var pPriceParameter = pPrice.HasValue ?
                new ObjectParameter("PPrice", pPrice) :
                new ObjectParameter("PPrice", typeof(double));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var contParameter = cont != null ?
                new ObjectParameter("Cont", cont) :
                new ObjectParameter("Cont", typeof(string));
    
            var imgParameter = img != null ?
                new ObjectParameter("Img", img) :
                new ObjectParameter("Img", typeof(string));
    
            var proIDParameter = proID != null ?
                new ObjectParameter("ProID", proID) :
                new ObjectParameter("ProID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PromotionUpdate", iDParameter, pPriceParameter, startDateParameter, endDateParameter, contParameter, imgParameter, proIDParameter);
        }
    
        public virtual int usp_PromotionUpdateTest(string iD, Nullable<double> pPrice, string cont, string img, string proID)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var pPriceParameter = pPrice.HasValue ?
                new ObjectParameter("PPrice", pPrice) :
                new ObjectParameter("PPrice", typeof(double));
    
            var contParameter = cont != null ?
                new ObjectParameter("Cont", cont) :
                new ObjectParameter("Cont", typeof(string));
    
            var imgParameter = img != null ?
                new ObjectParameter("Img", img) :
                new ObjectParameter("Img", typeof(string));
    
            var proIDParameter = proID != null ?
                new ObjectParameter("ProID", proID) :
                new ObjectParameter("ProID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PromotionUpdateTest", iDParameter, pPriceParameter, contParameter, imgParameter, proIDParameter);
        }
    
        public virtual int usp_ProposedDetailDeleteAll(string proposedID)
        {
            var proposedIDParameter = proposedID != null ?
                new ObjectParameter("ProposedID", proposedID) :
                new ObjectParameter("ProposedID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProposedDetailDeleteAll", proposedIDParameter);
        }
    
        public virtual ObjectResult<usp_ProposedDetailSearch_Result> usp_ProposedDetailSearch(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProposedDetailSearch_Result>("usp_ProposedDetailSearch", tEXTSEARCHParameter);
        }
    
        public virtual int usp_ProposedDetailUpdate(string productID, string proposeID, Nullable<int> quantity)
        {
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            var proposeIDParameter = proposeID != null ?
                new ObjectParameter("ProposeID", proposeID) :
                new ObjectParameter("ProposeID", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProposedDetailUpdate", productIDParameter, proposeIDParameter, quantityParameter);
        }
    
        public virtual ObjectResult<usp_ProposedSearch_Result> usp_ProposedSearch(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProposedSearch_Result>("usp_ProposedSearch", tEXTSEARCHParameter);
        }
    
        public virtual int usp_ProposedUpdate(string iD, string suppID, string accID)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var suppIDParameter = suppID != null ?
                new ObjectParameter("SuppID", suppID) :
                new ObjectParameter("SuppID", typeof(string));
    
            var accIDParameter = accID != null ?
                new ObjectParameter("AccID", accID) :
                new ObjectParameter("AccID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProposedUpdate", iDParameter, suppIDParameter, accIDParameter);
        }
    
        public virtual ObjectResult<usp_SupplierSearch_Result> usp_SupplierSearch(string tEXTSEARCH)
        {
            var tEXTSEARCHParameter = tEXTSEARCH != null ?
                new ObjectParameter("TEXTSEARCH", tEXTSEARCH) :
                new ObjectParameter("TEXTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SupplierSearch_Result>("usp_SupplierSearch", tEXTSEARCHParameter);
        }
    
        public virtual int usp_SupplierUpdate(string iD, string name, string address, string phoneNumber)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SupplierUpdate", iDParameter, nameParameter, addressParameter, phoneNumberParameter);
        }
    }
}
