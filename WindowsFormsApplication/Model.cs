//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CMART0Model", "FK_Authority_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication.Account), "Authority", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication.Authority), true)]
[assembly: EdmRelationshipAttribute("CMART0Model", "FK_BranchOfficeReceipt_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication.Account), "BranchOfficeReceipt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication.BranchOfficeReceipt), true)]
[assembly: EdmRelationshipAttribute("CMART0Model", "FK_HoaDon_TaiKhoan", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication.Account), "Bill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication.Bill), true)]
[assembly: EdmRelationshipAttribute("CMART0Model", "FK_PhieuDeXuatNhapHang_TaiKhoan", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication.Account), "ProposeReceipt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication.ProposeReceipt), true)]
[assembly: EdmRelationshipAttribute("CMART0Model", "FK_PhieuNhapHangTruSo_TaiKhoan", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication.Account), "HeadquaterReceipt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication.HeadquaterReceipt), true)]
[assembly: EdmRelationshipAttribute("CMART0Model", "FK_Authority_AuthorityName", "AuthorityName", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication.AuthorityName), "Authority", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication.Authority), true)]
[assembly: EdmRelationshipAttribute("CMART0Model", "FK_ChiTietHoaDon_HoaDon", "Bill", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication.Bill), "BillDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication.BillDetail), true)]
[assembly: EdmRelationshipAttribute("CMART0Model", "FK_ChiTietHoaDon_SanPham", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication.Product), "BillDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication.BillDetail), true)]
[assembly: EdmRelationshipAttribute("CMART0Model", "FK_BranchOfficeReceipt_HeadquaterReceipt", "HeadquaterReceipt", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication.HeadquaterReceipt), "BranchOfficeReceipt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication.BranchOfficeReceipt), true)]
[assembly: EdmRelationshipAttribute("CMART0Model", "FK_BranchOfficeReceiptDetail_BranchOfficeReceipt", "BranchOfficeReceipt", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication.BranchOfficeReceipt), "BranchOfficeReceiptDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication.BranchOfficeReceiptDetail), true)]
[assembly: EdmRelationshipAttribute("CMART0Model", "FK_BranchOfficeReceiptDetail_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication.Product), "BranchOfficeReceiptDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication.BranchOfficeReceiptDetail), true)]
[assembly: EdmRelationshipAttribute("CMART0Model", "FK_SanPham_LoaiSanPham", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication.Category), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication.Product), true)]
[assembly: EdmRelationshipAttribute("CMART0Model", "FK_ChiTietPhieuNhapHangTruSo_PhieuNhapHangTruSo", "HeadquaterReceipt", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication.HeadquaterReceipt), "HeadquaterReceiptDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication.HeadquaterReceiptDetail), true)]
[assembly: EdmRelationshipAttribute("CMART0Model", "FK_PhieuNhapHangTruSo_PhieuDeXuatNhapHang", "ProposeReceipt", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication.ProposeReceipt), "HeadquaterReceipt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication.HeadquaterReceipt), true)]
[assembly: EdmRelationshipAttribute("CMART0Model", "FK_Gia_SanPham", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication.Product), "Price", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication.Price), true)]
[assembly: EdmRelationshipAttribute("CMART0Model", "FK_ChiTietPhieuDeXuatNhapHang_SanPham", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication.Product), "ProposeReceiptDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication.ProposeReceiptDetail), true)]
[assembly: EdmRelationshipAttribute("CMART0Model", "FK_SanPham_NhaCungCap", "Supplier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication.Supplier), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication.Product), true)]
[assembly: EdmRelationshipAttribute("CMART0Model", "FK_ThongTinKhuyenMai_SanPham", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication.Product), "Promotion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication.Promotion), true)]
[assembly: EdmRelationshipAttribute("CMART0Model", "FK_ChiTietPhieuDeXuatNhapHang_PhieuDeXuatNhapHang", "ProposeReceipt", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication.ProposeReceipt), "ProposeReceiptDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication.ProposeReceiptDetail), true)]
[assembly: EdmRelationshipAttribute("CMART0Model", "FK_PhieuDeXuatNhapHang_NhaCungCap", "Supplier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication.Supplier), "ProposeReceipt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication.ProposeReceipt), true)]

#endregion


namespace WindowsFormsApplication
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CMART0Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CMART0Entities object using the connection string found in the 'CMART0Entities' section of the application configuration file.
        /// </summary>
        public CMART0Entities() : base("name=CMART0Entities", "CMART0Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CMART0Entities object.
        /// </summary>
        public CMART0Entities(string connectionString) : base(connectionString, "CMART0Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CMART0Entities object.
        /// </summary>
        public CMART0Entities(EntityConnection connection) : base(connection, "CMART0Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Account> Accounts
        {
            get
            {
                if ((_Accounts == null))
                {
                    _Accounts = base.CreateObjectSet<Account>("Accounts");
                }
                return _Accounts;
            }
        }
        private ObjectSet<Account> _Accounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Authority> Authorities
        {
            get
            {
                if ((_Authorities == null))
                {
                    _Authorities = base.CreateObjectSet<Authority>("Authorities");
                }
                return _Authorities;
            }
        }
        private ObjectSet<Authority> _Authorities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuthorityName> AuthorityNames
        {
            get
            {
                if ((_AuthorityNames == null))
                {
                    _AuthorityNames = base.CreateObjectSet<AuthorityName>("AuthorityNames");
                }
                return _AuthorityNames;
            }
        }
        private ObjectSet<AuthorityName> _AuthorityNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bill> Bills
        {
            get
            {
                if ((_Bills == null))
                {
                    _Bills = base.CreateObjectSet<Bill>("Bills");
                }
                return _Bills;
            }
        }
        private ObjectSet<Bill> _Bills;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BillDetail> BillDetails
        {
            get
            {
                if ((_BillDetails == null))
                {
                    _BillDetails = base.CreateObjectSet<BillDetail>("BillDetails");
                }
                return _BillDetails;
            }
        }
        private ObjectSet<BillDetail> _BillDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BranchOfficeReceipt> BranchOfficeReceipts
        {
            get
            {
                if ((_BranchOfficeReceipts == null))
                {
                    _BranchOfficeReceipts = base.CreateObjectSet<BranchOfficeReceipt>("BranchOfficeReceipts");
                }
                return _BranchOfficeReceipts;
            }
        }
        private ObjectSet<BranchOfficeReceipt> _BranchOfficeReceipts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BranchOfficeReceiptDetail> BranchOfficeReceiptDetails
        {
            get
            {
                if ((_BranchOfficeReceiptDetails == null))
                {
                    _BranchOfficeReceiptDetails = base.CreateObjectSet<BranchOfficeReceiptDetail>("BranchOfficeReceiptDetails");
                }
                return _BranchOfficeReceiptDetails;
            }
        }
        private ObjectSet<BranchOfficeReceiptDetail> _BranchOfficeReceiptDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HeadquaterReceipt> HeadquaterReceipts
        {
            get
            {
                if ((_HeadquaterReceipts == null))
                {
                    _HeadquaterReceipts = base.CreateObjectSet<HeadquaterReceipt>("HeadquaterReceipts");
                }
                return _HeadquaterReceipts;
            }
        }
        private ObjectSet<HeadquaterReceipt> _HeadquaterReceipts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HeadquaterReceiptDetail> HeadquaterReceiptDetails
        {
            get
            {
                if ((_HeadquaterReceiptDetails == null))
                {
                    _HeadquaterReceiptDetails = base.CreateObjectSet<HeadquaterReceiptDetail>("HeadquaterReceiptDetails");
                }
                return _HeadquaterReceiptDetails;
            }
        }
        private ObjectSet<HeadquaterReceiptDetail> _HeadquaterReceiptDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Price> Prices
        {
            get
            {
                if ((_Prices == null))
                {
                    _Prices = base.CreateObjectSet<Price>("Prices");
                }
                return _Prices;
            }
        }
        private ObjectSet<Price> _Prices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Promotion> Promotions
        {
            get
            {
                if ((_Promotions == null))
                {
                    _Promotions = base.CreateObjectSet<Promotion>("Promotions");
                }
                return _Promotions;
            }
        }
        private ObjectSet<Promotion> _Promotions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProposeReceipt> ProposeReceipts
        {
            get
            {
                if ((_ProposeReceipts == null))
                {
                    _ProposeReceipts = base.CreateObjectSet<ProposeReceipt>("ProposeReceipts");
                }
                return _ProposeReceipts;
            }
        }
        private ObjectSet<ProposeReceipt> _ProposeReceipts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProposeReceiptDetail> ProposeReceiptDetails
        {
            get
            {
                if ((_ProposeReceiptDetails == null))
                {
                    _ProposeReceiptDetails = base.CreateObjectSet<ProposeReceiptDetail>("ProposeReceiptDetails");
                }
                return _ProposeReceiptDetails;
            }
        }
        private ObjectSet<ProposeReceiptDetail> _ProposeReceiptDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Supplier> Suppliers
        {
            get
            {
                if ((_Suppliers == null))
                {
                    _Suppliers = base.CreateObjectSet<Supplier>("Suppliers");
                }
                return _Suppliers;
            }
        }
        private ObjectSet<Supplier> _Suppliers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Accounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccounts(Account account)
        {
            base.AddObject("Accounts", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Authorities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuthorities(Authority authority)
        {
            base.AddObject("Authorities", authority);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuthorityNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuthorityNames(AuthorityName authorityName)
        {
            base.AddObject("AuthorityNames", authorityName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Bills EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBills(Bill bill)
        {
            base.AddObject("Bills", bill);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BillDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBillDetails(BillDetail billDetail)
        {
            base.AddObject("BillDetails", billDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BranchOfficeReceipts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBranchOfficeReceipts(BranchOfficeReceipt branchOfficeReceipt)
        {
            base.AddObject("BranchOfficeReceipts", branchOfficeReceipt);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BranchOfficeReceiptDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBranchOfficeReceiptDetails(BranchOfficeReceiptDetail branchOfficeReceiptDetail)
        {
            base.AddObject("BranchOfficeReceiptDetails", branchOfficeReceiptDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HeadquaterReceipts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHeadquaterReceipts(HeadquaterReceipt headquaterReceipt)
        {
            base.AddObject("HeadquaterReceipts", headquaterReceipt);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HeadquaterReceiptDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHeadquaterReceiptDetails(HeadquaterReceiptDetail headquaterReceiptDetail)
        {
            base.AddObject("HeadquaterReceiptDetails", headquaterReceiptDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Prices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrices(Price price)
        {
            base.AddObject("Prices", price);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Promotions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPromotions(Promotion promotion)
        {
            base.AddObject("Promotions", promotion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProposeReceipts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProposeReceipts(ProposeReceipt proposeReceipt)
        {
            base.AddObject("ProposeReceipts", proposeReceipt);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProposeReceiptDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProposeReceiptDetails(ProposeReceiptDetail proposeReceiptDetail)
        {
            base.AddObject("ProposeReceiptDetails", proposeReceiptDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Suppliers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSuppliers(Supplier supplier)
        {
            base.AddObject("Suppliers", supplier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="accountID">No Metadata Documentation available.</param>
        /// <param name="fullName">No Metadata Documentation available.</param>
        /// <param name="address">No Metadata Documentation available.</param>
        /// <param name="phoneNumber">No Metadata Documentation available.</param>
        /// <param name="cMND">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="password">No Metadata Documentation available.</param>
        public int usp_AccountUpdate(global::System.String accountID, global::System.String fullName, global::System.String address, global::System.String phoneNumber, global::System.String cMND, global::System.String userName, global::System.String password)
        {
            ObjectParameter accountIDParameter;
            if (accountID != null)
            {
                accountIDParameter = new ObjectParameter("AccountID", accountID);
            }
            else
            {
                accountIDParameter = new ObjectParameter("AccountID", typeof(global::System.String));
            }
    
            ObjectParameter fullNameParameter;
            if (fullName != null)
            {
                fullNameParameter = new ObjectParameter("FullName", fullName);
            }
            else
            {
                fullNameParameter = new ObjectParameter("FullName", typeof(global::System.String));
            }
    
            ObjectParameter addressParameter;
            if (address != null)
            {
                addressParameter = new ObjectParameter("Address", address);
            }
            else
            {
                addressParameter = new ObjectParameter("Address", typeof(global::System.String));
            }
    
            ObjectParameter phoneNumberParameter;
            if (phoneNumber != null)
            {
                phoneNumberParameter = new ObjectParameter("PhoneNumber", phoneNumber);
            }
            else
            {
                phoneNumberParameter = new ObjectParameter("PhoneNumber", typeof(global::System.String));
            }
    
            ObjectParameter cMNDParameter;
            if (cMND != null)
            {
                cMNDParameter = new ObjectParameter("CMND", cMND);
            }
            else
            {
                cMNDParameter = new ObjectParameter("CMND", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter passwordParameter;
            if (password != null)
            {
                passwordParameter = new ObjectParameter("Password", password);
            }
            else
            {
                passwordParameter = new ObjectParameter("Password", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_AccountUpdate", accountIDParameter, fullNameParameter, addressParameter, phoneNumberParameter, cMNDParameter, userNameParameter, passwordParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tEXTSEARCH">No Metadata Documentation available.</param>
        public ObjectResult<usp_AccountSearch_Result> usp_AccountSearch(global::System.String tEXTSEARCH)
        {
            ObjectParameter tEXTSEARCHParameter;
            if (tEXTSEARCH != null)
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", tEXTSEARCH);
            }
            else
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_AccountSearch_Result>("usp_AccountSearch", tEXTSEARCHParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mAKM">No Metadata Documentation available.</param>
        public int PROMOTION_ID_AUTO(ObjectParameter mAKM)
        {
            return base.ExecuteFunction("PROMOTION_ID_AUTO", mAKM);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="maacc">No Metadata Documentation available.</param>
        public int SP_ACCOUNT_ID_AUTO(ObjectParameter maacc)
        {
            return base.ExecuteFunction("SP_ACCOUNT_ID_AUTO", maacc);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fullName">No Metadata Documentation available.</param>
        /// <param name="address">No Metadata Documentation available.</param>
        /// <param name="phoneNumber">No Metadata Documentation available.</param>
        /// <param name="cMND">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="password">No Metadata Documentation available.</param>
        public int sp_ACCOUNT_insert(global::System.String fullName, global::System.String address, global::System.String phoneNumber, global::System.String cMND, global::System.String userName, global::System.String password)
        {
            ObjectParameter fullNameParameter;
            if (fullName != null)
            {
                fullNameParameter = new ObjectParameter("fullName", fullName);
            }
            else
            {
                fullNameParameter = new ObjectParameter("fullName", typeof(global::System.String));
            }
    
            ObjectParameter addressParameter;
            if (address != null)
            {
                addressParameter = new ObjectParameter("address", address);
            }
            else
            {
                addressParameter = new ObjectParameter("address", typeof(global::System.String));
            }
    
            ObjectParameter phoneNumberParameter;
            if (phoneNumber != null)
            {
                phoneNumberParameter = new ObjectParameter("phoneNumber", phoneNumber);
            }
            else
            {
                phoneNumberParameter = new ObjectParameter("phoneNumber", typeof(global::System.String));
            }
    
            ObjectParameter cMNDParameter;
            if (cMND != null)
            {
                cMNDParameter = new ObjectParameter("CMND", cMND);
            }
            else
            {
                cMNDParameter = new ObjectParameter("CMND", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("userName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("userName", typeof(global::System.String));
            }
    
            ObjectParameter passwordParameter;
            if (password != null)
            {
                passwordParameter = new ObjectParameter("password", password);
            }
            else
            {
                passwordParameter = new ObjectParameter("password", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_ACCOUNT_insert", fullNameParameter, addressParameter, phoneNumberParameter, cMNDParameter, userNameParameter, passwordParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="nAME">No Metadata Documentation available.</param>
        /// <param name="sUPPLIERID">No Metadata Documentation available.</param>
        /// <param name="cATEGORYID">No Metadata Documentation available.</param>
        /// <param name="iMAGE">No Metadata Documentation available.</param>
        public int SP_ADD(global::System.String nAME, global::System.String sUPPLIERID, global::System.String cATEGORYID, global::System.String iMAGE)
        {
            ObjectParameter nAMEParameter;
            if (nAME != null)
            {
                nAMEParameter = new ObjectParameter("NAME", nAME);
            }
            else
            {
                nAMEParameter = new ObjectParameter("NAME", typeof(global::System.String));
            }
    
            ObjectParameter sUPPLIERIDParameter;
            if (sUPPLIERID != null)
            {
                sUPPLIERIDParameter = new ObjectParameter("SUPPLIERID", sUPPLIERID);
            }
            else
            {
                sUPPLIERIDParameter = new ObjectParameter("SUPPLIERID", typeof(global::System.String));
            }
    
            ObjectParameter cATEGORYIDParameter;
            if (cATEGORYID != null)
            {
                cATEGORYIDParameter = new ObjectParameter("CATEGORYID", cATEGORYID);
            }
            else
            {
                cATEGORYIDParameter = new ObjectParameter("CATEGORYID", typeof(global::System.String));
            }
    
            ObjectParameter iMAGEParameter;
            if (iMAGE != null)
            {
                iMAGEParameter = new ObjectParameter("IMAGE", iMAGE);
            }
            else
            {
                iMAGEParameter = new ObjectParameter("IMAGE", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SP_ADD", nAMEParameter, sUPPLIERIDParameter, cATEGORYIDParameter, iMAGEParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        /// <param name="definition">No Metadata Documentation available.</param>
        public int sp_alterdiagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch">No Metadata Documentation available.</param>
        /// <param name="pOS">No Metadata Documentation available.</param>
        /// <param name="iD">No Metadata Documentation available.</param>
        public int SP_BILL_ID_AUTO(global::System.String branch, global::System.String pOS, ObjectParameter iD)
        {
            ObjectParameter branchParameter;
            if (branch != null)
            {
                branchParameter = new ObjectParameter("Branch", branch);
            }
            else
            {
                branchParameter = new ObjectParameter("Branch", typeof(global::System.String));
            }
    
            ObjectParameter pOSParameter;
            if (pOS != null)
            {
                pOSParameter = new ObjectParameter("POS", pOS);
            }
            else
            {
                pOSParameter = new ObjectParameter("POS", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SP_BILL_ID_AUTO", branchParameter, pOSParameter, iD);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="totalAmount">No Metadata Documentation available.</param>
        /// <param name="totalQuantity">No Metadata Documentation available.</param>
        /// <param name="iM">No Metadata Documentation available.</param>
        /// <param name="oM">No Metadata Documentation available.</param>
        /// <param name="branch">No Metadata Documentation available.</param>
        /// <param name="pos">No Metadata Documentation available.</param>
        /// <param name="acc">No Metadata Documentation available.</param>
        /// <param name="mahd">No Metadata Documentation available.</param>
        public int SP_BILL_insert(Nullable<global::System.Double> totalAmount, Nullable<global::System.Int32> totalQuantity, Nullable<global::System.Double> iM, Nullable<global::System.Double> oM, global::System.String branch, Nullable<global::System.Int32> pos, global::System.String acc, ObjectParameter mahd)
        {
            ObjectParameter totalAmountParameter;
            if (totalAmount.HasValue)
            {
                totalAmountParameter = new ObjectParameter("TotalAmount", totalAmount);
            }
            else
            {
                totalAmountParameter = new ObjectParameter("TotalAmount", typeof(global::System.Double));
            }
    
            ObjectParameter totalQuantityParameter;
            if (totalQuantity.HasValue)
            {
                totalQuantityParameter = new ObjectParameter("TotalQuantity", totalQuantity);
            }
            else
            {
                totalQuantityParameter = new ObjectParameter("TotalQuantity", typeof(global::System.Int32));
            }
    
            ObjectParameter iMParameter;
            if (iM.HasValue)
            {
                iMParameter = new ObjectParameter("iM", iM);
            }
            else
            {
                iMParameter = new ObjectParameter("iM", typeof(global::System.Double));
            }
    
            ObjectParameter oMParameter;
            if (oM.HasValue)
            {
                oMParameter = new ObjectParameter("oM", oM);
            }
            else
            {
                oMParameter = new ObjectParameter("oM", typeof(global::System.Double));
            }
    
            ObjectParameter branchParameter;
            if (branch != null)
            {
                branchParameter = new ObjectParameter("branch", branch);
            }
            else
            {
                branchParameter = new ObjectParameter("branch", typeof(global::System.String));
            }
    
            ObjectParameter posParameter;
            if (pos.HasValue)
            {
                posParameter = new ObjectParameter("pos", pos);
            }
            else
            {
                posParameter = new ObjectParameter("pos", typeof(global::System.Int32));
            }
    
            ObjectParameter accParameter;
            if (acc != null)
            {
                accParameter = new ObjectParameter("acc", acc);
            }
            else
            {
                accParameter = new ObjectParameter("acc", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SP_BILL_insert", totalAmountParameter, totalQuantityParameter, iMParameter, oMParameter, branchParameter, posParameter, accParameter, mahd);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branch">No Metadata Documentation available.</param>
        /// <param name="branchOfficeID">No Metadata Documentation available.</param>
        public int SP_BranchOfficeID_AUTO(global::System.String branch, ObjectParameter branchOfficeID)
        {
            ObjectParameter branchParameter;
            if (branch != null)
            {
                branchParameter = new ObjectParameter("Branch", branch);
            }
            else
            {
                branchParameter = new ObjectParameter("Branch", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SP_BranchOfficeID_AUTO", branchParameter, branchOfficeID);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="madm">No Metadata Documentation available.</param>
        public int SP_CATEGORY_ID_AUTO(ObjectParameter madm)
        {
            return base.ExecuteFunction("SP_CATEGORY_ID_AUTO", madm);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="quantity">No Metadata Documentation available.</param>
        public int sp_CATEGORY_insert(global::System.String name, Nullable<global::System.Int32> quantity)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("quantity", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_CATEGORY_insert", nameParameter, quantityParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        /// <param name="definition">No Metadata Documentation available.</param>
        public int sp_creatediagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public int sp_dropdiagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mahd">No Metadata Documentation available.</param>
        public int SP_HEADQUATER_ID_AUTO(ObjectParameter mahd)
        {
            return base.ExecuteFunction("SP_HEADQUATER_ID_AUTO", mahd);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fULLNAME">No Metadata Documentation available.</param>
        /// <param name="aDDRESS">No Metadata Documentation available.</param>
        /// <param name="pHONENUMBER">No Metadata Documentation available.</param>
        /// <param name="cMND">No Metadata Documentation available.</param>
        /// <param name="uSERNAME">No Metadata Documentation available.</param>
        /// <param name="pASSOWRD">No Metadata Documentation available.</param>
        public int SP_INSERT_ACCOUNTID(global::System.String fULLNAME, global::System.String aDDRESS, global::System.String pHONENUMBER, global::System.String cMND, global::System.String uSERNAME, global::System.String pASSOWRD)
        {
            ObjectParameter fULLNAMEParameter;
            if (fULLNAME != null)
            {
                fULLNAMEParameter = new ObjectParameter("FULLNAME", fULLNAME);
            }
            else
            {
                fULLNAMEParameter = new ObjectParameter("FULLNAME", typeof(global::System.String));
            }
    
            ObjectParameter aDDRESSParameter;
            if (aDDRESS != null)
            {
                aDDRESSParameter = new ObjectParameter("ADDRESS", aDDRESS);
            }
            else
            {
                aDDRESSParameter = new ObjectParameter("ADDRESS", typeof(global::System.String));
            }
    
            ObjectParameter pHONENUMBERParameter;
            if (pHONENUMBER != null)
            {
                pHONENUMBERParameter = new ObjectParameter("PHONENUMBER", pHONENUMBER);
            }
            else
            {
                pHONENUMBERParameter = new ObjectParameter("PHONENUMBER", typeof(global::System.String));
            }
    
            ObjectParameter cMNDParameter;
            if (cMND != null)
            {
                cMNDParameter = new ObjectParameter("CMND", cMND);
            }
            else
            {
                cMNDParameter = new ObjectParameter("CMND", typeof(global::System.String));
            }
    
            ObjectParameter uSERNAMEParameter;
            if (uSERNAME != null)
            {
                uSERNAMEParameter = new ObjectParameter("USERNAME", uSERNAME);
            }
            else
            {
                uSERNAMEParameter = new ObjectParameter("USERNAME", typeof(global::System.String));
            }
    
            ObjectParameter pASSOWRDParameter;
            if (pASSOWRD != null)
            {
                pASSOWRDParameter = new ObjectParameter("PASSOWRD", pASSOWRD);
            }
            else
            {
                pASSOWRDParameter = new ObjectParameter("PASSOWRD", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SP_INSERT_ACCOUNTID", fULLNAMEParameter, aDDRESSParameter, pHONENUMBERParameter, cMNDParameter, uSERNAMEParameter, pASSOWRDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pOS">No Metadata Documentation available.</param>
        /// <param name="tOTALA">No Metadata Documentation available.</param>
        /// <param name="tOTALQ">No Metadata Documentation available.</param>
        /// <param name="iNPUTMONEY">No Metadata Documentation available.</param>
        /// <param name="oUTPUT">No Metadata Documentation available.</param>
        /// <param name="aCCOUNTID">No Metadata Documentation available.</param>
        public int SP_INSERT_BILL(Nullable<global::System.Int32> pOS, Nullable<global::System.Double> tOTALA, Nullable<global::System.Int32> tOTALQ, Nullable<global::System.Double> iNPUTMONEY, Nullable<global::System.Double> oUTPUT, Nullable<global::System.Int32> aCCOUNTID)
        {
            ObjectParameter pOSParameter;
            if (pOS.HasValue)
            {
                pOSParameter = new ObjectParameter("POS", pOS);
            }
            else
            {
                pOSParameter = new ObjectParameter("POS", typeof(global::System.Int32));
            }
    
            ObjectParameter tOTALAParameter;
            if (tOTALA.HasValue)
            {
                tOTALAParameter = new ObjectParameter("TOTALA", tOTALA);
            }
            else
            {
                tOTALAParameter = new ObjectParameter("TOTALA", typeof(global::System.Double));
            }
    
            ObjectParameter tOTALQParameter;
            if (tOTALQ.HasValue)
            {
                tOTALQParameter = new ObjectParameter("TOTALQ", tOTALQ);
            }
            else
            {
                tOTALQParameter = new ObjectParameter("TOTALQ", typeof(global::System.Int32));
            }
    
            ObjectParameter iNPUTMONEYParameter;
            if (iNPUTMONEY.HasValue)
            {
                iNPUTMONEYParameter = new ObjectParameter("INPUTMONEY", iNPUTMONEY);
            }
            else
            {
                iNPUTMONEYParameter = new ObjectParameter("INPUTMONEY", typeof(global::System.Double));
            }
    
            ObjectParameter oUTPUTParameter;
            if (oUTPUT.HasValue)
            {
                oUTPUTParameter = new ObjectParameter("OUTPUT", oUTPUT);
            }
            else
            {
                oUTPUTParameter = new ObjectParameter("OUTPUT", typeof(global::System.Double));
            }
    
            ObjectParameter aCCOUNTIDParameter;
            if (aCCOUNTID.HasValue)
            {
                aCCOUNTIDParameter = new ObjectParameter("ACCOUNTID", aCCOUNTID);
            }
            else
            {
                aCCOUNTIDParameter = new ObjectParameter("ACCOUNTID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("SP_INSERT_BILL", pOSParameter, tOTALAParameter, tOTALQParameter, iNPUTMONEYParameter, oUTPUTParameter, aCCOUNTIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="hEADQUATERID">No Metadata Documentation available.</param>
        /// <param name="bRANCH">No Metadata Documentation available.</param>
        /// <param name="aCOUNTID">No Metadata Documentation available.</param>
        public int SP_INSERT_BRANCHRECEIPT(global::System.String hEADQUATERID, global::System.String bRANCH, global::System.String aCOUNTID)
        {
            ObjectParameter hEADQUATERIDParameter;
            if (hEADQUATERID != null)
            {
                hEADQUATERIDParameter = new ObjectParameter("HEADQUATERID", hEADQUATERID);
            }
            else
            {
                hEADQUATERIDParameter = new ObjectParameter("HEADQUATERID", typeof(global::System.String));
            }
    
            ObjectParameter bRANCHParameter;
            if (bRANCH != null)
            {
                bRANCHParameter = new ObjectParameter("BRANCH", bRANCH);
            }
            else
            {
                bRANCHParameter = new ObjectParameter("BRANCH", typeof(global::System.String));
            }
    
            ObjectParameter aCOUNTIDParameter;
            if (aCOUNTID != null)
            {
                aCOUNTIDParameter = new ObjectParameter("ACOUNTID", aCOUNTID);
            }
            else
            {
                aCOUNTIDParameter = new ObjectParameter("ACOUNTID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SP_INSERT_BRANCHRECEIPT", hEADQUATERIDParameter, bRANCHParameter, aCOUNTIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pROPOSEID">No Metadata Documentation available.</param>
        /// <param name="tOTAL">No Metadata Documentation available.</param>
        /// <param name="aCCOUNTID">No Metadata Documentation available.</param>
        public int SP_INSERT_HEADQUATER(global::System.String pROPOSEID, Nullable<global::System.Double> tOTAL, global::System.String aCCOUNTID)
        {
            ObjectParameter pROPOSEIDParameter;
            if (pROPOSEID != null)
            {
                pROPOSEIDParameter = new ObjectParameter("PROPOSEID", pROPOSEID);
            }
            else
            {
                pROPOSEIDParameter = new ObjectParameter("PROPOSEID", typeof(global::System.String));
            }
    
            ObjectParameter tOTALParameter;
            if (tOTAL.HasValue)
            {
                tOTALParameter = new ObjectParameter("TOTAL", tOTAL);
            }
            else
            {
                tOTALParameter = new ObjectParameter("TOTAL", typeof(global::System.Double));
            }
    
            ObjectParameter aCCOUNTIDParameter;
            if (aCCOUNTID != null)
            {
                aCCOUNTIDParameter = new ObjectParameter("ACCOUNTID", aCCOUNTID);
            }
            else
            {
                aCCOUNTIDParameter = new ObjectParameter("ACCOUNTID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SP_INSERT_HEADQUATER", pROPOSEIDParameter, tOTALParameter, aCCOUNTIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="nAME">No Metadata Documentation available.</param>
        /// <param name="sUPPLIERID">No Metadata Documentation available.</param>
        /// <param name="cATEGORYID">No Metadata Documentation available.</param>
        /// <param name="iMAGE">No Metadata Documentation available.</param>
        public int SP_INSERT_PRODUCT(global::System.String nAME, global::System.String sUPPLIERID, global::System.String cATEGORYID, global::System.String iMAGE)
        {
            ObjectParameter nAMEParameter;
            if (nAME != null)
            {
                nAMEParameter = new ObjectParameter("NAME", nAME);
            }
            else
            {
                nAMEParameter = new ObjectParameter("NAME", typeof(global::System.String));
            }
    
            ObjectParameter sUPPLIERIDParameter;
            if (sUPPLIERID != null)
            {
                sUPPLIERIDParameter = new ObjectParameter("SUPPLIERID", sUPPLIERID);
            }
            else
            {
                sUPPLIERIDParameter = new ObjectParameter("SUPPLIERID", typeof(global::System.String));
            }
    
            ObjectParameter cATEGORYIDParameter;
            if (cATEGORYID != null)
            {
                cATEGORYIDParameter = new ObjectParameter("CATEGORYID", cATEGORYID);
            }
            else
            {
                cATEGORYIDParameter = new ObjectParameter("CATEGORYID", typeof(global::System.String));
            }
    
            ObjectParameter iMAGEParameter;
            if (iMAGE != null)
            {
                iMAGEParameter = new ObjectParameter("IMAGE", iMAGE);
            }
            else
            {
                iMAGEParameter = new ObjectParameter("IMAGE", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SP_INSERT_PRODUCT", nAMEParameter, sUPPLIERIDParameter, cATEGORYIDParameter, iMAGEParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sUPPLIERID">No Metadata Documentation available.</param>
        /// <param name="aCCOUNTID">No Metadata Documentation available.</param>
        public int SP_INSERT_PROPOSE(global::System.String sUPPLIERID, global::System.String aCCOUNTID)
        {
            ObjectParameter sUPPLIERIDParameter;
            if (sUPPLIERID != null)
            {
                sUPPLIERIDParameter = new ObjectParameter("SUPPLIERID", sUPPLIERID);
            }
            else
            {
                sUPPLIERIDParameter = new ObjectParameter("SUPPLIERID", typeof(global::System.String));
            }
    
            ObjectParameter aCCOUNTIDParameter;
            if (aCCOUNTID != null)
            {
                aCCOUNTIDParameter = new ObjectParameter("ACCOUNTID", aCCOUNTID);
            }
            else
            {
                aCCOUNTIDParameter = new ObjectParameter("ACCOUNTID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SP_INSERT_PROPOSE", sUPPLIERIDParameter, aCCOUNTIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="nAME">No Metadata Documentation available.</param>
        /// <param name="aDDRESS">No Metadata Documentation available.</param>
        /// <param name="pHONENUMBER">No Metadata Documentation available.</param>
        public int SP_INSERT_SUPPLIER(global::System.String nAME, global::System.String aDDRESS, global::System.String pHONENUMBER)
        {
            ObjectParameter nAMEParameter;
            if (nAME != null)
            {
                nAMEParameter = new ObjectParameter("NAME", nAME);
            }
            else
            {
                nAMEParameter = new ObjectParameter("NAME", typeof(global::System.String));
            }
    
            ObjectParameter aDDRESSParameter;
            if (aDDRESS != null)
            {
                aDDRESSParameter = new ObjectParameter("ADDRESS", aDDRESS);
            }
            else
            {
                aDDRESSParameter = new ObjectParameter("ADDRESS", typeof(global::System.String));
            }
    
            ObjectParameter pHONENUMBERParameter;
            if (pHONENUMBER != null)
            {
                pHONENUMBERParameter = new ObjectParameter("PHONENUMBER", pHONENUMBER);
            }
            else
            {
                pHONENUMBERParameter = new ObjectParameter("PHONENUMBER", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SP_INSERT_SUPPLIER", nAMEParameter, aDDRESSParameter, pHONENUMBERParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        public int SP_PRODUCT_ID_AUTO(ObjectParameter iD)
        {
            return base.ExecuteFunction("SP_PRODUCT_ID_AUTO", iD);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="promotionPrice">No Metadata Documentation available.</param>
        /// <param name="startDate">No Metadata Documentation available.</param>
        /// <param name="content">No Metadata Documentation available.</param>
        /// <param name="image">No Metadata Documentation available.</param>
        /// <param name="productId">No Metadata Documentation available.</param>
        public int SP_PROMOTION_INSERT(Nullable<global::System.Single> promotionPrice, Nullable<global::System.DateTime> startDate, global::System.String content, global::System.String image, global::System.String productId)
        {
            ObjectParameter promotionPriceParameter;
            if (promotionPrice.HasValue)
            {
                promotionPriceParameter = new ObjectParameter("PromotionPrice", promotionPrice);
            }
            else
            {
                promotionPriceParameter = new ObjectParameter("PromotionPrice", typeof(global::System.Single));
            }
    
            ObjectParameter startDateParameter;
            if (startDate.HasValue)
            {
                startDateParameter = new ObjectParameter("StartDate", startDate);
            }
            else
            {
                startDateParameter = new ObjectParameter("StartDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter contentParameter;
            if (content != null)
            {
                contentParameter = new ObjectParameter("Content", content);
            }
            else
            {
                contentParameter = new ObjectParameter("Content", typeof(global::System.String));
            }
    
            ObjectParameter imageParameter;
            if (image != null)
            {
                imageParameter = new ObjectParameter("Image", image);
            }
            else
            {
                imageParameter = new ObjectParameter("Image", typeof(global::System.String));
            }
    
            ObjectParameter productIdParameter;
            if (productId != null)
            {
                productIdParameter = new ObjectParameter("ProductId", productId);
            }
            else
            {
                productIdParameter = new ObjectParameter("ProductId", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SP_PROMOTION_INSERT", promotionPriceParameter, startDateParameter, contentParameter, imageParameter, productIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mahd">No Metadata Documentation available.</param>
        public int SP_PROPOSE_ID_AUTO(ObjectParameter mahd)
        {
            return base.ExecuteFunction("SP_PROPOSE_ID_AUTO", mahd);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="new_diagramname">No Metadata Documentation available.</param>
        public int sp_renamediagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, global::System.String new_diagramname)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter new_diagramnameParameter;
            if (new_diagramname != null)
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", new_diagramname);
            }
            else
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="maacc">No Metadata Documentation available.</param>
        public int SP_SUPPLIER_ID_AUTO(ObjectParameter maacc)
        {
            return base.ExecuteFunction("SP_SUPPLIER_ID_AUTO", maacc);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branchOfficeID">No Metadata Documentation available.</param>
        /// <param name="hEADQUATERID">No Metadata Documentation available.</param>
        /// <param name="aCOUNTID">No Metadata Documentation available.</param>
        public int SP_UPDATE_BRANCHRECEIPT(global::System.String branchOfficeID, global::System.String hEADQUATERID, global::System.String aCOUNTID)
        {
            ObjectParameter branchOfficeIDParameter;
            if (branchOfficeID != null)
            {
                branchOfficeIDParameter = new ObjectParameter("BranchOfficeID", branchOfficeID);
            }
            else
            {
                branchOfficeIDParameter = new ObjectParameter("BranchOfficeID", typeof(global::System.String));
            }
    
            ObjectParameter hEADQUATERIDParameter;
            if (hEADQUATERID != null)
            {
                hEADQUATERIDParameter = new ObjectParameter("HEADQUATERID", hEADQUATERID);
            }
            else
            {
                hEADQUATERIDParameter = new ObjectParameter("HEADQUATERID", typeof(global::System.String));
            }
    
            ObjectParameter aCOUNTIDParameter;
            if (aCOUNTID != null)
            {
                aCOUNTIDParameter = new ObjectParameter("ACOUNTID", aCOUNTID);
            }
            else
            {
                aCOUNTIDParameter = new ObjectParameter("ACOUNTID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SP_UPDATE_BRANCHRECEIPT", branchOfficeIDParameter, hEADQUATERIDParameter, aCOUNTIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        /// <param name="nAME">No Metadata Documentation available.</param>
        /// <param name="sUPPLIERID">No Metadata Documentation available.</param>
        /// <param name="cATEGORYID">No Metadata Documentation available.</param>
        /// <param name="iMAGE">No Metadata Documentation available.</param>
        public int SP_UPDATE_PRODUCT(global::System.String iD, global::System.String nAME, global::System.String sUPPLIERID, global::System.String cATEGORYID, global::System.String iMAGE)
        {
            ObjectParameter iDParameter;
            if (iD != null)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.String));
            }
    
            ObjectParameter nAMEParameter;
            if (nAME != null)
            {
                nAMEParameter = new ObjectParameter("NAME", nAME);
            }
            else
            {
                nAMEParameter = new ObjectParameter("NAME", typeof(global::System.String));
            }
    
            ObjectParameter sUPPLIERIDParameter;
            if (sUPPLIERID != null)
            {
                sUPPLIERIDParameter = new ObjectParameter("SUPPLIERID", sUPPLIERID);
            }
            else
            {
                sUPPLIERIDParameter = new ObjectParameter("SUPPLIERID", typeof(global::System.String));
            }
    
            ObjectParameter cATEGORYIDParameter;
            if (cATEGORYID != null)
            {
                cATEGORYIDParameter = new ObjectParameter("CATEGORYID", cATEGORYID);
            }
            else
            {
                cATEGORYIDParameter = new ObjectParameter("CATEGORYID", typeof(global::System.String));
            }
    
            ObjectParameter iMAGEParameter;
            if (iMAGE != null)
            {
                iMAGEParameter = new ObjectParameter("IMAGE", iMAGE);
            }
            else
            {
                iMAGEParameter = new ObjectParameter("IMAGE", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SP_UPDATE_PRODUCT", iDParameter, nAMEParameter, sUPPLIERIDParameter, cATEGORYIDParameter, iMAGEParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int sp_upgraddiagrams()
        {
            return base.ExecuteFunction("sp_upgraddiagrams");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="productID">No Metadata Documentation available.</param>
        public int usp_Bill_Delete(global::System.String productID)
        {
            ObjectParameter productIDParameter;
            if (productID != null)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_Bill_Delete", productIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tEXTSEARCH">No Metadata Documentation available.</param>
        public ObjectResult<usp_Bill_Search_Result> usp_Bill_Search(global::System.String tEXTSEARCH)
        {
            ObjectParameter tEXTSEARCHParameter;
            if (tEXTSEARCH != null)
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", tEXTSEARCH);
            }
            else
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_Bill_Search_Result>("usp_Bill_Search", tEXTSEARCHParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<usp_Bill_SelectAll_Result> usp_Bill_SelectAll()
        {
            return base.ExecuteFunction<usp_Bill_SelectAll_Result>("usp_Bill_SelectAll");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="billID">No Metadata Documentation available.</param>
        /// <param name="saleDate">No Metadata Documentation available.</param>
        /// <param name="pOS">No Metadata Documentation available.</param>
        /// <param name="totalAmount">No Metadata Documentation available.</param>
        /// <param name="totalQuantity">No Metadata Documentation available.</param>
        /// <param name="inputmoney">No Metadata Documentation available.</param>
        /// <param name="outputmoney">No Metadata Documentation available.</param>
        /// <param name="accountID">No Metadata Documentation available.</param>
        public int usp_Bill_Update(global::System.String billID, Nullable<global::System.DateTime> saleDate, Nullable<global::System.Int32> pOS, Nullable<global::System.Double> totalAmount, Nullable<global::System.Int32> totalQuantity, Nullable<global::System.Double> inputmoney, Nullable<global::System.Double> outputmoney, global::System.String accountID)
        {
            ObjectParameter billIDParameter;
            if (billID != null)
            {
                billIDParameter = new ObjectParameter("BillID", billID);
            }
            else
            {
                billIDParameter = new ObjectParameter("BillID", typeof(global::System.String));
            }
    
            ObjectParameter saleDateParameter;
            if (saleDate.HasValue)
            {
                saleDateParameter = new ObjectParameter("SaleDate", saleDate);
            }
            else
            {
                saleDateParameter = new ObjectParameter("SaleDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter pOSParameter;
            if (pOS.HasValue)
            {
                pOSParameter = new ObjectParameter("POS", pOS);
            }
            else
            {
                pOSParameter = new ObjectParameter("POS", typeof(global::System.Int32));
            }
    
            ObjectParameter totalAmountParameter;
            if (totalAmount.HasValue)
            {
                totalAmountParameter = new ObjectParameter("TotalAmount", totalAmount);
            }
            else
            {
                totalAmountParameter = new ObjectParameter("TotalAmount", typeof(global::System.Double));
            }
    
            ObjectParameter totalQuantityParameter;
            if (totalQuantity.HasValue)
            {
                totalQuantityParameter = new ObjectParameter("TotalQuantity", totalQuantity);
            }
            else
            {
                totalQuantityParameter = new ObjectParameter("TotalQuantity", typeof(global::System.Int32));
            }
    
            ObjectParameter inputmoneyParameter;
            if (inputmoney.HasValue)
            {
                inputmoneyParameter = new ObjectParameter("Inputmoney", inputmoney);
            }
            else
            {
                inputmoneyParameter = new ObjectParameter("Inputmoney", typeof(global::System.Double));
            }
    
            ObjectParameter outputmoneyParameter;
            if (outputmoney.HasValue)
            {
                outputmoneyParameter = new ObjectParameter("Outputmoney", outputmoney);
            }
            else
            {
                outputmoneyParameter = new ObjectParameter("Outputmoney", typeof(global::System.Double));
            }
    
            ObjectParameter accountIDParameter;
            if (accountID != null)
            {
                accountIDParameter = new ObjectParameter("AccountID", accountID);
            }
            else
            {
                accountIDParameter = new ObjectParameter("AccountID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_Bill_Update", billIDParameter, saleDateParameter, pOSParameter, totalAmountParameter, totalQuantityParameter, inputmoneyParameter, outputmoneyParameter, accountIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tEXTSEARCH">No Metadata Documentation available.</param>
        public ObjectResult<usp_BranchOfficeSearch_Result> usp_BranchOfficeSearch(global::System.String tEXTSEARCH)
        {
            ObjectParameter tEXTSEARCHParameter;
            if (tEXTSEARCH != null)
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", tEXTSEARCH);
            }
            else
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_BranchOfficeSearch_Result>("usp_BranchOfficeSearch", tEXTSEARCHParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="accountID">No Metadata Documentation available.</param>
        /// <param name="fULLNAME">No Metadata Documentation available.</param>
        /// <param name="aDDRESS">No Metadata Documentation available.</param>
        /// <param name="pHONENUMBER">No Metadata Documentation available.</param>
        /// <param name="cMND">No Metadata Documentation available.</param>
        /// <param name="uSERNAME">No Metadata Documentation available.</param>
        /// <param name="pASSOWRD">No Metadata Documentation available.</param>
        public int SP_UPDATE_ACCOUNT(global::System.String accountID, global::System.String fULLNAME, global::System.String aDDRESS, global::System.String pHONENUMBER, global::System.String cMND, global::System.String uSERNAME, global::System.String pASSOWRD)
        {
            ObjectParameter accountIDParameter;
            if (accountID != null)
            {
                accountIDParameter = new ObjectParameter("AccountID", accountID);
            }
            else
            {
                accountIDParameter = new ObjectParameter("AccountID", typeof(global::System.String));
            }
    
            ObjectParameter fULLNAMEParameter;
            if (fULLNAME != null)
            {
                fULLNAMEParameter = new ObjectParameter("FULLNAME", fULLNAME);
            }
            else
            {
                fULLNAMEParameter = new ObjectParameter("FULLNAME", typeof(global::System.String));
            }
    
            ObjectParameter aDDRESSParameter;
            if (aDDRESS != null)
            {
                aDDRESSParameter = new ObjectParameter("ADDRESS", aDDRESS);
            }
            else
            {
                aDDRESSParameter = new ObjectParameter("ADDRESS", typeof(global::System.String));
            }
    
            ObjectParameter pHONENUMBERParameter;
            if (pHONENUMBER != null)
            {
                pHONENUMBERParameter = new ObjectParameter("PHONENUMBER", pHONENUMBER);
            }
            else
            {
                pHONENUMBERParameter = new ObjectParameter("PHONENUMBER", typeof(global::System.String));
            }
    
            ObjectParameter cMNDParameter;
            if (cMND != null)
            {
                cMNDParameter = new ObjectParameter("CMND", cMND);
            }
            else
            {
                cMNDParameter = new ObjectParameter("CMND", typeof(global::System.String));
            }
    
            ObjectParameter uSERNAMEParameter;
            if (uSERNAME != null)
            {
                uSERNAMEParameter = new ObjectParameter("USERNAME", uSERNAME);
            }
            else
            {
                uSERNAMEParameter = new ObjectParameter("USERNAME", typeof(global::System.String));
            }
    
            ObjectParameter pASSOWRDParameter;
            if (pASSOWRD != null)
            {
                pASSOWRDParameter = new ObjectParameter("PASSOWRD", pASSOWRD);
            }
            else
            {
                pASSOWRDParameter = new ObjectParameter("PASSOWRD", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SP_UPDATE_ACCOUNT", accountIDParameter, fULLNAMEParameter, aDDRESSParameter, pHONENUMBERParameter, cMNDParameter, uSERNAMEParameter, pASSOWRDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="accountID">No Metadata Documentation available.</param>
        public int usp_Account_Delete(global::System.String accountID)
        {
            ObjectParameter accountIDParameter;
            if (accountID != null)
            {
                accountIDParameter = new ObjectParameter("AccountID", accountID);
            }
            else
            {
                accountIDParameter = new ObjectParameter("AccountID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_Account_Delete", accountIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="accountID">No Metadata Documentation available.</param>
        /// <param name="nameOfAuthority">No Metadata Documentation available.</param>
        /// <param name="view">No Metadata Documentation available.</param>
        /// <param name="create">No Metadata Documentation available.</param>
        /// <param name="update">No Metadata Documentation available.</param>
        /// <param name="delete">No Metadata Documentation available.</param>
        public int sp_Authority_Insert(global::System.String accountID, global::System.String nameOfAuthority, Nullable<global::System.Boolean> view, Nullable<global::System.Boolean> create, Nullable<global::System.Boolean> update, Nullable<global::System.Boolean> delete)
        {
            ObjectParameter accountIDParameter;
            if (accountID != null)
            {
                accountIDParameter = new ObjectParameter("accountID", accountID);
            }
            else
            {
                accountIDParameter = new ObjectParameter("accountID", typeof(global::System.String));
            }
    
            ObjectParameter nameOfAuthorityParameter;
            if (nameOfAuthority != null)
            {
                nameOfAuthorityParameter = new ObjectParameter("nameOfAuthority", nameOfAuthority);
            }
            else
            {
                nameOfAuthorityParameter = new ObjectParameter("nameOfAuthority", typeof(global::System.String));
            }
    
            ObjectParameter viewParameter;
            if (view.HasValue)
            {
                viewParameter = new ObjectParameter("view", view);
            }
            else
            {
                viewParameter = new ObjectParameter("view", typeof(global::System.Boolean));
            }
    
            ObjectParameter createParameter;
            if (create.HasValue)
            {
                createParameter = new ObjectParameter("create", create);
            }
            else
            {
                createParameter = new ObjectParameter("create", typeof(global::System.Boolean));
            }
    
            ObjectParameter updateParameter;
            if (update.HasValue)
            {
                updateParameter = new ObjectParameter("update", update);
            }
            else
            {
                updateParameter = new ObjectParameter("update", typeof(global::System.Boolean));
            }
    
            ObjectParameter deleteParameter;
            if (delete.HasValue)
            {
                deleteParameter = new ObjectParameter("delete", delete);
            }
            else
            {
                deleteParameter = new ObjectParameter("delete", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction("sp_Authority_Insert", accountIDParameter, nameOfAuthorityParameter, viewParameter, createParameter, updateParameter, deleteParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tEXTSEARCH">No Metadata Documentation available.</param>
        public ObjectResult<usp_Bill_Search_BillId_Result> usp_Bill_Search_BillId(global::System.String tEXTSEARCH)
        {
            ObjectParameter tEXTSEARCHParameter;
            if (tEXTSEARCH != null)
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", tEXTSEARCH);
            }
            else
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_Bill_Search_BillId_Result>("usp_Bill_Search_BillId", tEXTSEARCHParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tEXTSEARCH">No Metadata Documentation available.</param>
        public ObjectResult<usp_Bill_Search_FullName_Result> usp_Bill_Search_FullName(global::System.String tEXTSEARCH)
        {
            ObjectParameter tEXTSEARCHParameter;
            if (tEXTSEARCH != null)
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", tEXTSEARCH);
            }
            else
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_Bill_Search_FullName_Result>("usp_Bill_Search_FullName", tEXTSEARCHParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tEXTSEARCH">No Metadata Documentation available.</param>
        public ObjectResult<usp_Bill_Search_Inputmoney_Result> usp_Bill_Search_Inputmoney(global::System.String tEXTSEARCH)
        {
            ObjectParameter tEXTSEARCHParameter;
            if (tEXTSEARCH != null)
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", tEXTSEARCH);
            }
            else
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_Bill_Search_Inputmoney_Result>("usp_Bill_Search_Inputmoney", tEXTSEARCHParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tEXTSEARCH">No Metadata Documentation available.</param>
        public ObjectResult<usp_Bill_Search_POS_Result> usp_Bill_Search_POS(global::System.String tEXTSEARCH)
        {
            ObjectParameter tEXTSEARCHParameter;
            if (tEXTSEARCH != null)
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", tEXTSEARCH);
            }
            else
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_Bill_Search_POS_Result>("usp_Bill_Search_POS", tEXTSEARCHParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tEXTSEARCH">No Metadata Documentation available.</param>
        public ObjectResult<usp_Bill_Search_SaleDate_Result> usp_Bill_Search_SaleDate(global::System.String tEXTSEARCH)
        {
            ObjectParameter tEXTSEARCHParameter;
            if (tEXTSEARCH != null)
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", tEXTSEARCH);
            }
            else
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_Bill_Search_SaleDate_Result>("usp_Bill_Search_SaleDate", tEXTSEARCHParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tEXTSEARCH">No Metadata Documentation available.</param>
        public ObjectResult<usp_Bill_Search_TotalAmount_Result> usp_Bill_Search_TotalAmount(global::System.String tEXTSEARCH)
        {
            ObjectParameter tEXTSEARCHParameter;
            if (tEXTSEARCH != null)
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", tEXTSEARCH);
            }
            else
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_Bill_Search_TotalAmount_Result>("usp_Bill_Search_TotalAmount", tEXTSEARCHParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tEXTSEARCH">No Metadata Documentation available.</param>
        public ObjectResult<usp_Bill_Search_TotalQuantity_Result> usp_Bill_Search_TotalQuantity(global::System.String tEXTSEARCH)
        {
            ObjectParameter tEXTSEARCHParameter;
            if (tEXTSEARCH != null)
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", tEXTSEARCH);
            }
            else
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_Bill_Search_TotalQuantity_Result>("usp_Bill_Search_TotalQuantity", tEXTSEARCHParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="accountID">No Metadata Documentation available.</param>
        /// <param name="nameOfAuthority">No Metadata Documentation available.</param>
        /// <param name="create">No Metadata Documentation available.</param>
        /// <param name="update">No Metadata Documentation available.</param>
        /// <param name="delete">No Metadata Documentation available.</param>
        /// <param name="view">No Metadata Documentation available.</param>
        public int usp_AuthorityUpdate(global::System.String accountID, global::System.String nameOfAuthority, Nullable<global::System.Boolean> create, Nullable<global::System.Boolean> update, Nullable<global::System.Boolean> delete, Nullable<global::System.Boolean> view)
        {
            ObjectParameter accountIDParameter;
            if (accountID != null)
            {
                accountIDParameter = new ObjectParameter("AccountID", accountID);
            }
            else
            {
                accountIDParameter = new ObjectParameter("AccountID", typeof(global::System.String));
            }
    
            ObjectParameter nameOfAuthorityParameter;
            if (nameOfAuthority != null)
            {
                nameOfAuthorityParameter = new ObjectParameter("NameOfAuthority", nameOfAuthority);
            }
            else
            {
                nameOfAuthorityParameter = new ObjectParameter("NameOfAuthority", typeof(global::System.String));
            }
    
            ObjectParameter createParameter;
            if (create.HasValue)
            {
                createParameter = new ObjectParameter("Create", create);
            }
            else
            {
                createParameter = new ObjectParameter("Create", typeof(global::System.Boolean));
            }
    
            ObjectParameter updateParameter;
            if (update.HasValue)
            {
                updateParameter = new ObjectParameter("Update", update);
            }
            else
            {
                updateParameter = new ObjectParameter("Update", typeof(global::System.Boolean));
            }
    
            ObjectParameter deleteParameter;
            if (delete.HasValue)
            {
                deleteParameter = new ObjectParameter("Delete", delete);
            }
            else
            {
                deleteParameter = new ObjectParameter("Delete", typeof(global::System.Boolean));
            }
    
            ObjectParameter viewParameter;
            if (view.HasValue)
            {
                viewParameter = new ObjectParameter("View", view);
            }
            else
            {
                viewParameter = new ObjectParameter("View", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction("usp_AuthorityUpdate", accountIDParameter, nameOfAuthorityParameter, createParameter, updateParameter, deleteParameter, viewParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tEXTSEARCH">No Metadata Documentation available.</param>
        public ObjectResult<PROMOTION_SEARCH_Result> PROMOTION_SEARCH(global::System.String tEXTSEARCH)
        {
            ObjectParameter tEXTSEARCHParameter;
            if (tEXTSEARCH != null)
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", tEXTSEARCH);
            }
            else
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PROMOTION_SEARCH_Result>("PROMOTION_SEARCH", tEXTSEARCHParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tEXTSEARCH">No Metadata Documentation available.</param>
        public ObjectResult<SP_SEARCH_PRODUCT_Result> SP_SEARCH_PRODUCT(global::System.String tEXTSEARCH)
        {
            ObjectParameter tEXTSEARCHParameter;
            if (tEXTSEARCH != null)
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", tEXTSEARCH);
            }
            else
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<SP_SEARCH_PRODUCT_Result>("SP_SEARCH_PRODUCT", tEXTSEARCHParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<SP_SELECTALL_PRODUCT_Result> SP_SELECTALL_PRODUCT()
        {
            return base.ExecuteFunction<SP_SELECTALL_PRODUCT_Result>("SP_SELECTALL_PRODUCT");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tEXTSEARCH">No Metadata Documentation available.</param>
        public ObjectResult<usp_CategorySearch_Result> usp_CategorySearch(global::System.String tEXTSEARCH)
        {
            ObjectParameter tEXTSEARCHParameter;
            if (tEXTSEARCH != null)
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", tEXTSEARCH);
            }
            else
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_CategorySearch_Result>("usp_CategorySearch", tEXTSEARCHParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="productID">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="effectiveDay">No Metadata Documentation available.</param>
        public int usp_PriceDelete(global::System.String productID, Nullable<global::System.Double> price, Nullable<global::System.DateTime> effectiveDay)
        {
            ObjectParameter productIDParameter;
            if (productID != null)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.String));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Double));
            }
    
            ObjectParameter effectiveDayParameter;
            if (effectiveDay.HasValue)
            {
                effectiveDayParameter = new ObjectParameter("EffectiveDay", effectiveDay);
            }
            else
            {
                effectiveDayParameter = new ObjectParameter("EffectiveDay", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("usp_PriceDelete", productIDParameter, priceParameter, effectiveDayParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="productID">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="effectiveDay">No Metadata Documentation available.</param>
        public int usp_PriceInsert(global::System.String productID, Nullable<global::System.Double> price, Nullable<global::System.DateTime> effectiveDay)
        {
            ObjectParameter productIDParameter;
            if (productID != null)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.String));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Double));
            }
    
            ObjectParameter effectiveDayParameter;
            if (effectiveDay.HasValue)
            {
                effectiveDayParameter = new ObjectParameter("EffectiveDay", effectiveDay);
            }
            else
            {
                effectiveDayParameter = new ObjectParameter("EffectiveDay", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("usp_PriceInsert", productIDParameter, priceParameter, effectiveDayParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tEXTSEARCH">No Metadata Documentation available.</param>
        public ObjectResult<usp_PriceSearch_Result> usp_PriceSearch(global::System.String tEXTSEARCH)
        {
            ObjectParameter tEXTSEARCHParameter;
            if (tEXTSEARCH != null)
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", tEXTSEARCH);
            }
            else
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_PriceSearch_Result>("usp_PriceSearch", tEXTSEARCHParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="productID">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="effectiveDay">No Metadata Documentation available.</param>
        public int usp_PriceUpdate(global::System.String productID, Nullable<global::System.Double> price, Nullable<global::System.DateTime> effectiveDay)
        {
            ObjectParameter productIDParameter;
            if (productID != null)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.String));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Double));
            }
    
            ObjectParameter effectiveDayParameter;
            if (effectiveDay.HasValue)
            {
                effectiveDayParameter = new ObjectParameter("EffectiveDay", effectiveDay);
            }
            else
            {
                effectiveDayParameter = new ObjectParameter("EffectiveDay", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("usp_PriceUpdate", productIDParameter, priceParameter, effectiveDayParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<PROMOTION_SELECT_Result> PROMOTION_SELECT()
        {
            return base.ExecuteFunction<PROMOTION_SELECT_Result>("PROMOTION_SELECT");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="promotionID">No Metadata Documentation available.</param>
        /// <param name="promotionPrice">No Metadata Documentation available.</param>
        /// <param name="startDate">No Metadata Documentation available.</param>
        /// <param name="content">No Metadata Documentation available.</param>
        /// <param name="image">No Metadata Documentation available.</param>
        /// <param name="productID">No Metadata Documentation available.</param>
        public int PROMOTION_UPDATE(global::System.String promotionID, Nullable<global::System.Double> promotionPrice, Nullable<global::System.DateTime> startDate, global::System.String content, global::System.String image, global::System.String productID)
        {
            ObjectParameter promotionIDParameter;
            if (promotionID != null)
            {
                promotionIDParameter = new ObjectParameter("PromotionID", promotionID);
            }
            else
            {
                promotionIDParameter = new ObjectParameter("PromotionID", typeof(global::System.String));
            }
    
            ObjectParameter promotionPriceParameter;
            if (promotionPrice.HasValue)
            {
                promotionPriceParameter = new ObjectParameter("PromotionPrice", promotionPrice);
            }
            else
            {
                promotionPriceParameter = new ObjectParameter("PromotionPrice", typeof(global::System.Double));
            }
    
            ObjectParameter startDateParameter;
            if (startDate.HasValue)
            {
                startDateParameter = new ObjectParameter("StartDate", startDate);
            }
            else
            {
                startDateParameter = new ObjectParameter("StartDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter contentParameter;
            if (content != null)
            {
                contentParameter = new ObjectParameter("Content", content);
            }
            else
            {
                contentParameter = new ObjectParameter("Content", typeof(global::System.String));
            }
    
            ObjectParameter imageParameter;
            if (image != null)
            {
                imageParameter = new ObjectParameter("Image", image);
            }
            else
            {
                imageParameter = new ObjectParameter("Image", typeof(global::System.String));
            }
    
            ObjectParameter productIDParameter;
            if (productID != null)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("PROMOTION_UPDATE", promotionIDParameter, promotionPriceParameter, startDateParameter, contentParameter, imageParameter, productIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="categoryID">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="quantity">No Metadata Documentation available.</param>
        public int usp_CategoryUpdate(global::System.String categoryID, global::System.String name, Nullable<global::System.Int32> quantity)
        {
            ObjectParameter categoryIDParameter;
            if (categoryID != null)
            {
                categoryIDParameter = new ObjectParameter("CategoryID", categoryID);
            }
            else
            {
                categoryIDParameter = new ObjectParameter("CategoryID", typeof(global::System.String));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("usp_CategoryUpdate", categoryIDParameter, nameParameter, quantityParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="proposeID">No Metadata Documentation available.</param>
        /// <param name="accountID">No Metadata Documentation available.</param>
        public int SP_INSERT_HEADQUATERRECEIPT(global::System.String proposeID, global::System.String accountID)
        {
            ObjectParameter proposeIDParameter;
            if (proposeID != null)
            {
                proposeIDParameter = new ObjectParameter("ProposeID", proposeID);
            }
            else
            {
                proposeIDParameter = new ObjectParameter("ProposeID", typeof(global::System.String));
            }
    
            ObjectParameter accountIDParameter;
            if (accountID != null)
            {
                accountIDParameter = new ObjectParameter("AccountID", accountID);
            }
            else
            {
                accountIDParameter = new ObjectParameter("AccountID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SP_INSERT_HEADQUATERRECEIPT", proposeIDParameter, accountIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="hEADQUATERID">No Metadata Documentation available.</param>
        /// <param name="proposeID">No Metadata Documentation available.</param>
        /// <param name="totalAmount">No Metadata Documentation available.</param>
        /// <param name="accountID">No Metadata Documentation available.</param>
        public int SP_UPDATE_HEADQUATERRECEIPT(global::System.String hEADQUATERID, global::System.String proposeID, Nullable<global::System.Double> totalAmount, global::System.String accountID)
        {
            ObjectParameter hEADQUATERIDParameter;
            if (hEADQUATERID != null)
            {
                hEADQUATERIDParameter = new ObjectParameter("HEADQUATERID", hEADQUATERID);
            }
            else
            {
                hEADQUATERIDParameter = new ObjectParameter("HEADQUATERID", typeof(global::System.String));
            }
    
            ObjectParameter proposeIDParameter;
            if (proposeID != null)
            {
                proposeIDParameter = new ObjectParameter("ProposeID", proposeID);
            }
            else
            {
                proposeIDParameter = new ObjectParameter("ProposeID", typeof(global::System.String));
            }
    
            ObjectParameter totalAmountParameter;
            if (totalAmount.HasValue)
            {
                totalAmountParameter = new ObjectParameter("TotalAmount", totalAmount);
            }
            else
            {
                totalAmountParameter = new ObjectParameter("TotalAmount", typeof(global::System.Double));
            }
    
            ObjectParameter accountIDParameter;
            if (accountID != null)
            {
                accountIDParameter = new ObjectParameter("AccountID", accountID);
            }
            else
            {
                accountIDParameter = new ObjectParameter("AccountID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SP_UPDATE_HEADQUATERRECEIPT", hEADQUATERIDParameter, proposeIDParameter, totalAmountParameter, accountIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tEXTSEARCH">No Metadata Documentation available.</param>
        public ObjectResult<usp_HEADQUATERRECEIPTSearch_Result> usp_HEADQUATERRECEIPTSearch(global::System.String tEXTSEARCH)
        {
            ObjectParameter tEXTSEARCHParameter;
            if (tEXTSEARCH != null)
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", tEXTSEARCH);
            }
            else
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_HEADQUATERRECEIPTSearch_Result>("usp_HEADQUATERRECEIPTSearch", tEXTSEARCHParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="categoryID">No Metadata Documentation available.</param>
        /// <param name="quantity">No Metadata Documentation available.</param>
        public int usp_CategoryUpdate2(global::System.String categoryID, Nullable<global::System.Int32> quantity)
        {
            ObjectParameter categoryIDParameter;
            if (categoryID != null)
            {
                categoryIDParameter = new ObjectParameter("CategoryID", categoryID);
            }
            else
            {
                categoryIDParameter = new ObjectParameter("CategoryID", typeof(global::System.String));
            }
    
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("usp_CategoryUpdate2", categoryIDParameter, quantityParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="totalAmount">No Metadata Documentation available.</param>
        /// <param name="totalQuantity">No Metadata Documentation available.</param>
        /// <param name="iM">No Metadata Documentation available.</param>
        /// <param name="oM">No Metadata Documentation available.</param>
        /// <param name="branch">No Metadata Documentation available.</param>
        /// <param name="pos">No Metadata Documentation available.</param>
        /// <param name="acc">No Metadata Documentation available.</param>
        public ObjectResult<usp_Bill_Insert_returnid_Result> usp_Bill_Insert_returnid(Nullable<global::System.Double> totalAmount, Nullable<global::System.Int32> totalQuantity, Nullable<global::System.Double> iM, Nullable<global::System.Double> oM, global::System.String branch, Nullable<global::System.Int32> pos, global::System.String acc)
        {
            ObjectParameter totalAmountParameter;
            if (totalAmount.HasValue)
            {
                totalAmountParameter = new ObjectParameter("TotalAmount", totalAmount);
            }
            else
            {
                totalAmountParameter = new ObjectParameter("TotalAmount", typeof(global::System.Double));
            }
    
            ObjectParameter totalQuantityParameter;
            if (totalQuantity.HasValue)
            {
                totalQuantityParameter = new ObjectParameter("TotalQuantity", totalQuantity);
            }
            else
            {
                totalQuantityParameter = new ObjectParameter("TotalQuantity", typeof(global::System.Int32));
            }
    
            ObjectParameter iMParameter;
            if (iM.HasValue)
            {
                iMParameter = new ObjectParameter("iM", iM);
            }
            else
            {
                iMParameter = new ObjectParameter("iM", typeof(global::System.Double));
            }
    
            ObjectParameter oMParameter;
            if (oM.HasValue)
            {
                oMParameter = new ObjectParameter("oM", oM);
            }
            else
            {
                oMParameter = new ObjectParameter("oM", typeof(global::System.Double));
            }
    
            ObjectParameter branchParameter;
            if (branch != null)
            {
                branchParameter = new ObjectParameter("branch", branch);
            }
            else
            {
                branchParameter = new ObjectParameter("branch", typeof(global::System.String));
            }
    
            ObjectParameter posParameter;
            if (pos.HasValue)
            {
                posParameter = new ObjectParameter("pos", pos);
            }
            else
            {
                posParameter = new ObjectParameter("pos", typeof(global::System.Int32));
            }
    
            ObjectParameter accParameter;
            if (acc != null)
            {
                accParameter = new ObjectParameter("acc", acc);
            }
            else
            {
                accParameter = new ObjectParameter("acc", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_Bill_Insert_returnid_Result>("usp_Bill_Insert_returnid", totalAmountParameter, totalQuantityParameter, iMParameter, oMParameter, branchParameter, posParameter, accParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="billID">No Metadata Documentation available.</param>
        /// <param name="productID">No Metadata Documentation available.</param>
        /// <param name="quantity">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        public int usp_BillDetail_Add(global::System.String billID, global::System.String productID, Nullable<global::System.Int32> quantity, Nullable<global::System.Double> price)
        {
            ObjectParameter billIDParameter;
            if (billID != null)
            {
                billIDParameter = new ObjectParameter("BillID", billID);
            }
            else
            {
                billIDParameter = new ObjectParameter("BillID", typeof(global::System.String));
            }
    
            ObjectParameter productIDParameter;
            if (productID != null)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.String));
            }
    
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("quantity", typeof(global::System.Int32));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("price", typeof(global::System.Double));
            }
    
            return base.ExecuteFunction("usp_BillDetail_Add", billIDParameter, productIDParameter, quantityParameter, priceParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="billID">No Metadata Documentation available.</param>
        /// <param name="productID">No Metadata Documentation available.</param>
        public int usp_BillDetail_Delete(global::System.String billID, global::System.String productID)
        {
            ObjectParameter billIDParameter;
            if (billID != null)
            {
                billIDParameter = new ObjectParameter("BillID", billID);
            }
            else
            {
                billIDParameter = new ObjectParameter("BillID", typeof(global::System.String));
            }
    
            ObjectParameter productIDParameter;
            if (productID != null)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_BillDetail_Delete", billIDParameter, productIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        /// <param name="pPrice">No Metadata Documentation available.</param>
        /// <param name="date">No Metadata Documentation available.</param>
        /// <param name="cont">No Metadata Documentation available.</param>
        /// <param name="img">No Metadata Documentation available.</param>
        /// <param name="proID">No Metadata Documentation available.</param>
        public int usp_PromotionUpdate(global::System.String iD, Nullable<global::System.Double> pPrice, Nullable<global::System.DateTime> date, global::System.String cont, global::System.String img, global::System.String proID)
        {
            ObjectParameter iDParameter;
            if (iD != null)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.String));
            }
    
            ObjectParameter pPriceParameter;
            if (pPrice.HasValue)
            {
                pPriceParameter = new ObjectParameter("PPrice", pPrice);
            }
            else
            {
                pPriceParameter = new ObjectParameter("PPrice", typeof(global::System.Double));
            }
    
            ObjectParameter dateParameter;
            if (date.HasValue)
            {
                dateParameter = new ObjectParameter("Date", date);
            }
            else
            {
                dateParameter = new ObjectParameter("Date", typeof(global::System.DateTime));
            }
    
            ObjectParameter contParameter;
            if (cont != null)
            {
                contParameter = new ObjectParameter("Cont", cont);
            }
            else
            {
                contParameter = new ObjectParameter("Cont", typeof(global::System.String));
            }
    
            ObjectParameter imgParameter;
            if (img != null)
            {
                imgParameter = new ObjectParameter("Img", img);
            }
            else
            {
                imgParameter = new ObjectParameter("Img", typeof(global::System.String));
            }
    
            ObjectParameter proIDParameter;
            if (proID != null)
            {
                proIDParameter = new ObjectParameter("ProID", proID);
            }
            else
            {
                proIDParameter = new ObjectParameter("ProID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_PromotionUpdate", iDParameter, pPriceParameter, dateParameter, contParameter, imgParameter, proIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        /// <param name="pPrice">No Metadata Documentation available.</param>
        /// <param name="cont">No Metadata Documentation available.</param>
        /// <param name="img">No Metadata Documentation available.</param>
        /// <param name="proID">No Metadata Documentation available.</param>
        public int usp_PromotionUpdateTest(global::System.String iD, Nullable<global::System.Double> pPrice, global::System.String cont, global::System.String img, global::System.String proID)
        {
            ObjectParameter iDParameter;
            if (iD != null)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.String));
            }
    
            ObjectParameter pPriceParameter;
            if (pPrice.HasValue)
            {
                pPriceParameter = new ObjectParameter("PPrice", pPrice);
            }
            else
            {
                pPriceParameter = new ObjectParameter("PPrice", typeof(global::System.Double));
            }
    
            ObjectParameter contParameter;
            if (cont != null)
            {
                contParameter = new ObjectParameter("Cont", cont);
            }
            else
            {
                contParameter = new ObjectParameter("Cont", typeof(global::System.String));
            }
    
            ObjectParameter imgParameter;
            if (img != null)
            {
                imgParameter = new ObjectParameter("Img", img);
            }
            else
            {
                imgParameter = new ObjectParameter("Img", typeof(global::System.String));
            }
    
            ObjectParameter proIDParameter;
            if (proID != null)
            {
                proIDParameter = new ObjectParameter("ProID", proID);
            }
            else
            {
                proIDParameter = new ObjectParameter("ProID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_PromotionUpdateTest", iDParameter, pPriceParameter, contParameter, imgParameter, proIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tEXTSEARCH">No Metadata Documentation available.</param>
        public ObjectResult<usp_SupplierSearch_Result> usp_SupplierSearch(global::System.String tEXTSEARCH)
        {
            ObjectParameter tEXTSEARCHParameter;
            if (tEXTSEARCH != null)
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", tEXTSEARCH);
            }
            else
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_SupplierSearch_Result>("usp_SupplierSearch", tEXTSEARCHParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="address">No Metadata Documentation available.</param>
        /// <param name="phoneNumber">No Metadata Documentation available.</param>
        public int usp_SupplierUpdate(global::System.String iD, global::System.String name, global::System.String address, global::System.String phoneNumber)
        {
            ObjectParameter iDParameter;
            if (iD != null)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.String));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter addressParameter;
            if (address != null)
            {
                addressParameter = new ObjectParameter("Address", address);
            }
            else
            {
                addressParameter = new ObjectParameter("Address", typeof(global::System.String));
            }
    
            ObjectParameter phoneNumberParameter;
            if (phoneNumber != null)
            {
                phoneNumberParameter = new ObjectParameter("PhoneNumber", phoneNumber);
            }
            else
            {
                phoneNumberParameter = new ObjectParameter("PhoneNumber", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_SupplierUpdate", iDParameter, nameParameter, addressParameter, phoneNumberParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="date">No Metadata Documentation available.</param>
        /// <param name="suppID">No Metadata Documentation available.</param>
        /// <param name="accID">No Metadata Documentation available.</param>
        public int sp_Proposed_Insert(Nullable<global::System.DateTime> date, global::System.String suppID, global::System.String accID)
        {
            ObjectParameter dateParameter;
            if (date.HasValue)
            {
                dateParameter = new ObjectParameter("Date", date);
            }
            else
            {
                dateParameter = new ObjectParameter("Date", typeof(global::System.DateTime));
            }
    
            ObjectParameter suppIDParameter;
            if (suppID != null)
            {
                suppIDParameter = new ObjectParameter("SuppID", suppID);
            }
            else
            {
                suppIDParameter = new ObjectParameter("SuppID", typeof(global::System.String));
            }
    
            ObjectParameter accIDParameter;
            if (accID != null)
            {
                accIDParameter = new ObjectParameter("AccID", accID);
            }
            else
            {
                accIDParameter = new ObjectParameter("AccID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_Proposed_Insert", dateParameter, suppIDParameter, accIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tEXTSEARCH">No Metadata Documentation available.</param>
        public ObjectResult<usp_ProposedSearch_Result> usp_ProposedSearch(global::System.String tEXTSEARCH)
        {
            ObjectParameter tEXTSEARCHParameter;
            if (tEXTSEARCH != null)
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", tEXTSEARCH);
            }
            else
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_ProposedSearch_Result>("usp_ProposedSearch", tEXTSEARCHParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        /// <param name="suppID">No Metadata Documentation available.</param>
        /// <param name="accID">No Metadata Documentation available.</param>
        public int usp_ProposedUpdate(global::System.String iD, global::System.String suppID, global::System.String accID)
        {
            ObjectParameter iDParameter;
            if (iD != null)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.String));
            }
    
            ObjectParameter suppIDParameter;
            if (suppID != null)
            {
                suppIDParameter = new ObjectParameter("SuppID", suppID);
            }
            else
            {
                suppIDParameter = new ObjectParameter("SuppID", typeof(global::System.String));
            }
    
            ObjectParameter accIDParameter;
            if (accID != null)
            {
                accIDParameter = new ObjectParameter("AccID", accID);
            }
            else
            {
                accIDParameter = new ObjectParameter("AccID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_ProposedUpdate", iDParameter, suppIDParameter, accIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="nGAY">No Metadata Documentation available.</param>
        /// <param name="tHANG">No Metadata Documentation available.</param>
        /// <param name="nAM">No Metadata Documentation available.</param>
        public ObjectResult<SP_THONGKEDOANHTHU_Result> SP_THONGKEDOANHTHU(Nullable<global::System.Int32> nGAY, Nullable<global::System.Int32> tHANG, Nullable<global::System.Int32> nAM)
        {
            ObjectParameter nGAYParameter;
            if (nGAY.HasValue)
            {
                nGAYParameter = new ObjectParameter("NGAY", nGAY);
            }
            else
            {
                nGAYParameter = new ObjectParameter("NGAY", typeof(global::System.Int32));
            }
    
            ObjectParameter tHANGParameter;
            if (tHANG.HasValue)
            {
                tHANGParameter = new ObjectParameter("THANG", tHANG);
            }
            else
            {
                tHANGParameter = new ObjectParameter("THANG", typeof(global::System.Int32));
            }
    
            ObjectParameter nAMParameter;
            if (nAM.HasValue)
            {
                nAMParameter = new ObjectParameter("NAM", nAM);
            }
            else
            {
                nAMParameter = new ObjectParameter("NAM", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<SP_THONGKEDOANHTHU_Result>("SP_THONGKEDOANHTHU", nGAYParameter, tHANGParameter, nAMParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fROM">No Metadata Documentation available.</param>
        /// <param name="tO">No Metadata Documentation available.</param>
        public ObjectResult<SP_THONGKEDOANHTHU_KTG_Result> SP_THONGKEDOANHTHU_KTG(Nullable<global::System.DateTime> fROM, Nullable<global::System.DateTime> tO)
        {
            ObjectParameter fROMParameter;
            if (fROM.HasValue)
            {
                fROMParameter = new ObjectParameter("FROM", fROM);
            }
            else
            {
                fROMParameter = new ObjectParameter("FROM", typeof(global::System.DateTime));
            }
    
            ObjectParameter tOParameter;
            if (tO.HasValue)
            {
                tOParameter = new ObjectParameter("TO", tO);
            }
            else
            {
                tOParameter = new ObjectParameter("TO", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<SP_THONGKEDOANHTHU_KTG_Result>("SP_THONGKEDOANHTHU_KTG", fROMParameter, tOParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fROM">No Metadata Documentation available.</param>
        /// <param name="tO">No Metadata Documentation available.</param>
        /// <param name="top">No Metadata Documentation available.</param>
        public ObjectResult<SP_THONGKEDOANHTHU_KTG_TOP10_Result> SP_THONGKEDOANHTHU_KTG_TOP10(Nullable<global::System.DateTime> fROM, Nullable<global::System.DateTime> tO, Nullable<global::System.Int32> top)
        {
            ObjectParameter fROMParameter;
            if (fROM.HasValue)
            {
                fROMParameter = new ObjectParameter("FROM", fROM);
            }
            else
            {
                fROMParameter = new ObjectParameter("FROM", typeof(global::System.DateTime));
            }
    
            ObjectParameter tOParameter;
            if (tO.HasValue)
            {
                tOParameter = new ObjectParameter("TO", tO);
            }
            else
            {
                tOParameter = new ObjectParameter("TO", typeof(global::System.DateTime));
            }
    
            ObjectParameter topParameter;
            if (top.HasValue)
            {
                topParameter = new ObjectParameter("top", top);
            }
            else
            {
                topParameter = new ObjectParameter("top", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<SP_THONGKEDOANHTHU_KTG_TOP10_Result>("SP_THONGKEDOANHTHU_KTG_TOP10", fROMParameter, tOParameter, topParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fROM">No Metadata Documentation available.</param>
        /// <param name="tO">No Metadata Documentation available.</param>
        /// <param name="top">No Metadata Documentation available.</param>
        public ObjectResult<SP_THONGKEDOANHTHU_KTG_TOP20_Result> SP_THONGKEDOANHTHU_KTG_TOP20(Nullable<global::System.DateTime> fROM, Nullable<global::System.DateTime> tO, Nullable<global::System.Int32> top)
        {
            ObjectParameter fROMParameter;
            if (fROM.HasValue)
            {
                fROMParameter = new ObjectParameter("FROM", fROM);
            }
            else
            {
                fROMParameter = new ObjectParameter("FROM", typeof(global::System.DateTime));
            }
    
            ObjectParameter tOParameter;
            if (tO.HasValue)
            {
                tOParameter = new ObjectParameter("TO", tO);
            }
            else
            {
                tOParameter = new ObjectParameter("TO", typeof(global::System.DateTime));
            }
    
            ObjectParameter topParameter;
            if (top.HasValue)
            {
                topParameter = new ObjectParameter("top", top);
            }
            else
            {
                topParameter = new ObjectParameter("top", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<SP_THONGKEDOANHTHU_KTG_TOP20_Result>("SP_THONGKEDOANHTHU_KTG_TOP20", fROMParameter, tOParameter, topParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fROM">No Metadata Documentation available.</param>
        /// <param name="tO">No Metadata Documentation available.</param>
        /// <param name="top">No Metadata Documentation available.</param>
        public ObjectResult<SP_THONGKEDOANHTHU_KTG_TOP5_Result> SP_THONGKEDOANHTHU_KTG_TOP5(Nullable<global::System.DateTime> fROM, Nullable<global::System.DateTime> tO, Nullable<global::System.Int32> top)
        {
            ObjectParameter fROMParameter;
            if (fROM.HasValue)
            {
                fROMParameter = new ObjectParameter("FROM", fROM);
            }
            else
            {
                fROMParameter = new ObjectParameter("FROM", typeof(global::System.DateTime));
            }
    
            ObjectParameter tOParameter;
            if (tO.HasValue)
            {
                tOParameter = new ObjectParameter("TO", tO);
            }
            else
            {
                tOParameter = new ObjectParameter("TO", typeof(global::System.DateTime));
            }
    
            ObjectParameter topParameter;
            if (top.HasValue)
            {
                topParameter = new ObjectParameter("top", top);
            }
            else
            {
                topParameter = new ObjectParameter("top", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<SP_THONGKEDOANHTHU_KTG_TOP5_Result>("SP_THONGKEDOANHTHU_KTG_TOP5", fROMParameter, tOParameter, topParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="nGAY">No Metadata Documentation available.</param>
        /// <param name="tHANG">No Metadata Documentation available.</param>
        /// <param name="nAM">No Metadata Documentation available.</param>
        public ObjectResult<SP_THONGKEDOANHTHU_TOP10_Result> SP_THONGKEDOANHTHU_TOP10(Nullable<global::System.Int32> nGAY, Nullable<global::System.Int32> tHANG, Nullable<global::System.Int32> nAM)
        {
            ObjectParameter nGAYParameter;
            if (nGAY.HasValue)
            {
                nGAYParameter = new ObjectParameter("NGAY", nGAY);
            }
            else
            {
                nGAYParameter = new ObjectParameter("NGAY", typeof(global::System.Int32));
            }
    
            ObjectParameter tHANGParameter;
            if (tHANG.HasValue)
            {
                tHANGParameter = new ObjectParameter("THANG", tHANG);
            }
            else
            {
                tHANGParameter = new ObjectParameter("THANG", typeof(global::System.Int32));
            }
    
            ObjectParameter nAMParameter;
            if (nAM.HasValue)
            {
                nAMParameter = new ObjectParameter("NAM", nAM);
            }
            else
            {
                nAMParameter = new ObjectParameter("NAM", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<SP_THONGKEDOANHTHU_TOP10_Result>("SP_THONGKEDOANHTHU_TOP10", nGAYParameter, tHANGParameter, nAMParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="nGAY">No Metadata Documentation available.</param>
        /// <param name="tHANG">No Metadata Documentation available.</param>
        /// <param name="nAM">No Metadata Documentation available.</param>
        public ObjectResult<SP_THONGKEDOANHTHU_TOP20_Result> SP_THONGKEDOANHTHU_TOP20(Nullable<global::System.Int32> nGAY, Nullable<global::System.Int32> tHANG, Nullable<global::System.Int32> nAM)
        {
            ObjectParameter nGAYParameter;
            if (nGAY.HasValue)
            {
                nGAYParameter = new ObjectParameter("NGAY", nGAY);
            }
            else
            {
                nGAYParameter = new ObjectParameter("NGAY", typeof(global::System.Int32));
            }
    
            ObjectParameter tHANGParameter;
            if (tHANG.HasValue)
            {
                tHANGParameter = new ObjectParameter("THANG", tHANG);
            }
            else
            {
                tHANGParameter = new ObjectParameter("THANG", typeof(global::System.Int32));
            }
    
            ObjectParameter nAMParameter;
            if (nAM.HasValue)
            {
                nAMParameter = new ObjectParameter("NAM", nAM);
            }
            else
            {
                nAMParameter = new ObjectParameter("NAM", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<SP_THONGKEDOANHTHU_TOP20_Result>("SP_THONGKEDOANHTHU_TOP20", nGAYParameter, tHANGParameter, nAMParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="nGAY">No Metadata Documentation available.</param>
        /// <param name="tHANG">No Metadata Documentation available.</param>
        /// <param name="nAM">No Metadata Documentation available.</param>
        public ObjectResult<SP_THONGKEDOANHTHU_TOP5_Result> SP_THONGKEDOANHTHU_TOP5(Nullable<global::System.Int32> nGAY, Nullable<global::System.Int32> tHANG, Nullable<global::System.Int32> nAM)
        {
            ObjectParameter nGAYParameter;
            if (nGAY.HasValue)
            {
                nGAYParameter = new ObjectParameter("NGAY", nGAY);
            }
            else
            {
                nGAYParameter = new ObjectParameter("NGAY", typeof(global::System.Int32));
            }
    
            ObjectParameter tHANGParameter;
            if (tHANG.HasValue)
            {
                tHANGParameter = new ObjectParameter("THANG", tHANG);
            }
            else
            {
                tHANGParameter = new ObjectParameter("THANG", typeof(global::System.Int32));
            }
    
            ObjectParameter nAMParameter;
            if (nAM.HasValue)
            {
                nAMParameter = new ObjectParameter("NAM", nAM);
            }
            else
            {
                nAMParameter = new ObjectParameter("NAM", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<SP_THONGKEDOANHTHU_TOP5_Result>("SP_THONGKEDOANHTHU_TOP5", nGAYParameter, tHANGParameter, nAMParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="productID">No Metadata Documentation available.</param>
        /// <param name="proposedID">No Metadata Documentation available.</param>
        /// <param name="quantity">No Metadata Documentation available.</param>
        public int sp_ProposedDetail_Insert(global::System.String productID, global::System.String proposedID, Nullable<global::System.Int32> quantity)
        {
            ObjectParameter productIDParameter;
            if (productID != null)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.String));
            }
    
            ObjectParameter proposedIDParameter;
            if (proposedID != null)
            {
                proposedIDParameter = new ObjectParameter("ProposedID", proposedID);
            }
            else
            {
                proposedIDParameter = new ObjectParameter("ProposedID", typeof(global::System.String));
            }
    
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_ProposedDetail_Insert", productIDParameter, proposedIDParameter, quantityParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="nGAY">No Metadata Documentation available.</param>
        /// <param name="tHANG">No Metadata Documentation available.</param>
        /// <param name="nAM">No Metadata Documentation available.</param>
        /// <param name="fROM">No Metadata Documentation available.</param>
        /// <param name="tO">No Metadata Documentation available.</param>
        /// <param name="pICK">No Metadata Documentation available.</param>
        /// <param name="fILL">No Metadata Documentation available.</param>
        public ObjectResult<SP_SUMREPORT_Result> SP_SUMREPORT(Nullable<global::System.Int32> nGAY, Nullable<global::System.Int32> tHANG, Nullable<global::System.Int32> nAM, Nullable<global::System.DateTime> fROM, Nullable<global::System.DateTime> tO, Nullable<global::System.Int32> pICK, Nullable<global::System.Int32> fILL)
        {
            ObjectParameter nGAYParameter;
            if (nGAY.HasValue)
            {
                nGAYParameter = new ObjectParameter("NGAY", nGAY);
            }
            else
            {
                nGAYParameter = new ObjectParameter("NGAY", typeof(global::System.Int32));
            }
    
            ObjectParameter tHANGParameter;
            if (tHANG.HasValue)
            {
                tHANGParameter = new ObjectParameter("THANG", tHANG);
            }
            else
            {
                tHANGParameter = new ObjectParameter("THANG", typeof(global::System.Int32));
            }
    
            ObjectParameter nAMParameter;
            if (nAM.HasValue)
            {
                nAMParameter = new ObjectParameter("NAM", nAM);
            }
            else
            {
                nAMParameter = new ObjectParameter("NAM", typeof(global::System.Int32));
            }
    
            ObjectParameter fROMParameter;
            if (fROM.HasValue)
            {
                fROMParameter = new ObjectParameter("FROM", fROM);
            }
            else
            {
                fROMParameter = new ObjectParameter("FROM", typeof(global::System.DateTime));
            }
    
            ObjectParameter tOParameter;
            if (tO.HasValue)
            {
                tOParameter = new ObjectParameter("TO", tO);
            }
            else
            {
                tOParameter = new ObjectParameter("TO", typeof(global::System.DateTime));
            }
    
            ObjectParameter pICKParameter;
            if (pICK.HasValue)
            {
                pICKParameter = new ObjectParameter("PICK", pICK);
            }
            else
            {
                pICKParameter = new ObjectParameter("PICK", typeof(global::System.Int32));
            }
    
            ObjectParameter fILLParameter;
            if (fILL.HasValue)
            {
                fILLParameter = new ObjectParameter("FILL", fILL);
            }
            else
            {
                fILLParameter = new ObjectParameter("FILL", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<SP_SUMREPORT_Result>("SP_SUMREPORT", nGAYParameter, tHANGParameter, nAMParameter, fROMParameter, tOParameter, pICKParameter, fILLParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tEXTSEARCH">No Metadata Documentation available.</param>
        public ObjectResult<usp_ProposedDetailSearch_Result> usp_ProposedDetailSearch(global::System.String tEXTSEARCH)
        {
            ObjectParameter tEXTSEARCHParameter;
            if (tEXTSEARCH != null)
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", tEXTSEARCH);
            }
            else
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_ProposedDetailSearch_Result>("usp_ProposedDetailSearch", tEXTSEARCHParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="productID">No Metadata Documentation available.</param>
        /// <param name="proposeID">No Metadata Documentation available.</param>
        /// <param name="quantity">No Metadata Documentation available.</param>
        public int usp_ProposedDetailUpdate(global::System.String productID, global::System.String proposeID, Nullable<global::System.Int32> quantity)
        {
            ObjectParameter productIDParameter;
            if (productID != null)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.String));
            }
    
            ObjectParameter proposeIDParameter;
            if (proposeID != null)
            {
                proposeIDParameter = new ObjectParameter("ProposeID", proposeID);
            }
            else
            {
                proposeIDParameter = new ObjectParameter("ProposeID", typeof(global::System.String));
            }
    
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("usp_ProposedDetailUpdate", productIDParameter, proposeIDParameter, quantityParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="proposedID">No Metadata Documentation available.</param>
        public int usp_ProposedDetailDeleteAll(global::System.String proposedID)
        {
            ObjectParameter proposedIDParameter;
            if (proposedID != null)
            {
                proposedIDParameter = new ObjectParameter("ProposedID", proposedID);
            }
            else
            {
                proposedIDParameter = new ObjectParameter("ProposedID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_ProposedDetailDeleteAll", proposedIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="proposedID">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> Headquarter_SelectProduct(global::System.String proposedID)
        {
            ObjectParameter proposedIDParameter;
            if (proposedID != null)
            {
                proposedIDParameter = new ObjectParameter("ProposedID", proposedID);
            }
            else
            {
                proposedIDParameter = new ObjectParameter("ProposedID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.String>("Headquarter_SelectProduct", proposedIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tEXTSEARCH">No Metadata Documentation available.</param>
        public ObjectResult<sp_BranchOfficeSearch_Result> sp_BranchOfficeSearch(global::System.String tEXTSEARCH)
        {
            ObjectParameter tEXTSEARCHParameter;
            if (tEXTSEARCH != null)
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", tEXTSEARCH);
            }
            else
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<sp_BranchOfficeSearch_Result>("sp_BranchOfficeSearch", tEXTSEARCHParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="headquarterID">No Metadata Documentation available.</param>
        /// <param name="productID">No Metadata Documentation available.</param>
        /// <param name="quantity">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        public int SP_INSERT_HEADQUATERRECEIPTDETAIL(global::System.String headquarterID, global::System.String productID, Nullable<global::System.Int32> quantity, Nullable<global::System.Double> price, global::System.String status)
        {
            ObjectParameter headquarterIDParameter;
            if (headquarterID != null)
            {
                headquarterIDParameter = new ObjectParameter("HeadquarterID", headquarterID);
            }
            else
            {
                headquarterIDParameter = new ObjectParameter("HeadquarterID", typeof(global::System.String));
            }
    
            ObjectParameter productIDParameter;
            if (productID != null)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.String));
            }
    
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Double));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("Status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("Status", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SP_INSERT_HEADQUATERRECEIPTDETAIL", headquarterIDParameter, productIDParameter, quantityParameter, priceParameter, statusParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branchOfficeID">No Metadata Documentation available.</param>
        public ObjectResult<SP_LOAD_BRANCHRECEIPTDETAIL_Result> SP_LOAD_BRANCHRECEIPTDETAIL(global::System.String branchOfficeID)
        {
            ObjectParameter branchOfficeIDParameter;
            if (branchOfficeID != null)
            {
                branchOfficeIDParameter = new ObjectParameter("BranchOfficeID", branchOfficeID);
            }
            else
            {
                branchOfficeIDParameter = new ObjectParameter("BranchOfficeID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<SP_LOAD_BRANCHRECEIPTDETAIL_Result>("SP_LOAD_BRANCHRECEIPTDETAIL", branchOfficeIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branchOfficeID">No Metadata Documentation available.</param>
        /// <param name="productID">No Metadata Documentation available.</param>
        /// <param name="quantity">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        public int SP_UPDATE_BRANCHRECEIPTDETAIL(global::System.String branchOfficeID, global::System.String productID, Nullable<global::System.Int32> quantity, global::System.String status)
        {
            ObjectParameter branchOfficeIDParameter;
            if (branchOfficeID != null)
            {
                branchOfficeIDParameter = new ObjectParameter("BranchOfficeID", branchOfficeID);
            }
            else
            {
                branchOfficeIDParameter = new ObjectParameter("BranchOfficeID", typeof(global::System.String));
            }
    
            ObjectParameter productIDParameter;
            if (productID != null)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.String));
            }
    
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("Status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("Status", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SP_UPDATE_BRANCHRECEIPTDETAIL", branchOfficeIDParameter, productIDParameter, quantityParameter, statusParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branchOfficeID">No Metadata Documentation available.</param>
        /// <param name="tEXTSEARCH">No Metadata Documentation available.</param>
        public ObjectResult<usp_BranchOfficeDetailSearch_Result> usp_BranchOfficeDetailSearch(global::System.String branchOfficeID, global::System.String tEXTSEARCH)
        {
            ObjectParameter branchOfficeIDParameter;
            if (branchOfficeID != null)
            {
                branchOfficeIDParameter = new ObjectParameter("BranchOfficeID", branchOfficeID);
            }
            else
            {
                branchOfficeIDParameter = new ObjectParameter("BranchOfficeID", typeof(global::System.String));
            }
    
            ObjectParameter tEXTSEARCHParameter;
            if (tEXTSEARCH != null)
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", tEXTSEARCH);
            }
            else
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_BranchOfficeDetailSearch_Result>("usp_BranchOfficeDetailSearch", branchOfficeIDParameter, tEXTSEARCHParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="hEADQUATERID">No Metadata Documentation available.</param>
        /// <param name="productID">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        public int SP_UPDATE_HEADQUATERRECEIPTDETAIL(global::System.String hEADQUATERID, global::System.String productID, global::System.String status)
        {
            ObjectParameter hEADQUATERIDParameter;
            if (hEADQUATERID != null)
            {
                hEADQUATERIDParameter = new ObjectParameter("HEADQUATERID", hEADQUATERID);
            }
            else
            {
                hEADQUATERIDParameter = new ObjectParameter("HEADQUATERID", typeof(global::System.String));
            }
    
            ObjectParameter productIDParameter;
            if (productID != null)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.String));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("Status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("Status", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SP_UPDATE_HEADQUATERRECEIPTDETAIL", hEADQUATERIDParameter, productIDParameter, statusParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tEXTSEARCH">No Metadata Documentation available.</param>
        public ObjectResult<usp_HeadquarterReceiptDetailSearch_Result> usp_HeadquarterReceiptDetailSearch(global::System.String tEXTSEARCH)
        {
            ObjectParameter tEXTSEARCHParameter;
            if (tEXTSEARCH != null)
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", tEXTSEARCH);
            }
            else
            {
                tEXTSEARCHParameter = new ObjectParameter("TEXTSEARCH", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<usp_HeadquarterReceiptDetailSearch_Result>("usp_HeadquarterReceiptDetailSearch", tEXTSEARCHParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="headquarterID">No Metadata Documentation available.</param>
        public int usp_HeadquarterDetailDeleteAll(global::System.String headquarterID)
        {
            ObjectParameter headquarterIDParameter;
            if (headquarterID != null)
            {
                headquarterIDParameter = new ObjectParameter("HeadquarterID", headquarterID);
            }
            else
            {
                headquarterIDParameter = new ObjectParameter("HeadquarterID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_HeadquarterDetailDeleteAll", headquarterIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="bILLID">No Metadata Documentation available.</param>
        public ObjectResult<SP_BILL_PRINT_Result> SP_BILL_PRINT(global::System.String bILLID)
        {
            ObjectParameter bILLIDParameter;
            if (bILLID != null)
            {
                bILLIDParameter = new ObjectParameter("BILLID", bILLID);
            }
            else
            {
                bILLIDParameter = new ObjectParameter("BILLID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<SP_BILL_PRINT_Result>("SP_BILL_PRINT", bILLIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="bILLID">No Metadata Documentation available.</param>
        public ObjectResult<SP_BILL_PRINTBILL_Result> SP_BILL_PRINTBILL(global::System.String bILLID)
        {
            ObjectParameter bILLIDParameter;
            if (bILLID != null)
            {
                bILLIDParameter = new ObjectParameter("BILLID", bILLID);
            }
            else
            {
                bILLIDParameter = new ObjectParameter("BILLID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<SP_BILL_PRINTBILL_Result>("SP_BILL_PRINTBILL", bILLIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="bILLID">No Metadata Documentation available.</param>
        public ObjectResult<SP_BILL_PRINTBILLDETAIL_Result> SP_BILL_PRINTBILLDETAIL(global::System.String bILLID)
        {
            ObjectParameter bILLIDParameter;
            if (bILLID != null)
            {
                bILLIDParameter = new ObjectParameter("BILLID", bILLID);
            }
            else
            {
                bILLIDParameter = new ObjectParameter("BILLID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<SP_BILL_PRINTBILLDETAIL_Result>("SP_BILL_PRINTBILLDETAIL", bILLIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="branchOfficeID">No Metadata Documentation available.</param>
        public ObjectResult<SP_PRINT_BRANCHRECEIPTDETAIL_Result> SP_PRINT_BRANCHRECEIPTDETAIL(global::System.String branchOfficeID)
        {
            ObjectParameter branchOfficeIDParameter;
            if (branchOfficeID != null)
            {
                branchOfficeIDParameter = new ObjectParameter("BranchOfficeID", branchOfficeID);
            }
            else
            {
                branchOfficeIDParameter = new ObjectParameter("BranchOfficeID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<SP_PRINT_BRANCHRECEIPTDETAIL_Result>("SP_PRINT_BRANCHRECEIPTDETAIL", branchOfficeIDParameter);
        }

        #endregion

    }
    

    #endregion

    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CMART0Model", Name="Account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Account object.
        /// </summary>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="phoneNumber">Initial value of the PhoneNumber property.</param>
        /// <param name="cMND">Initial value of the CMND property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static Account CreateAccount(global::System.String accountID, global::System.String fullName, global::System.String address, global::System.String phoneNumber, global::System.String cMND, global::System.String userName, global::System.String password)
        {
            Account account = new Account();
            account.AccountID = accountID;
            account.FullName = fullName;
            account.Address = address;
            account.PhoneNumber = phoneNumber;
            account.CMND = cMND;
            account.UserName = userName;
            account.Password = password;
            return account;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                if (_AccountID != value)
                {
                    OnAccountIDChanging(value);
                    ReportPropertyChanging("AccountID");
                    _AccountID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AccountID");
                    OnAccountIDChanged();
                }
            }
        }
        private global::System.String _AccountID;
        partial void OnAccountIDChanging(global::System.String value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CMND
        {
            get
            {
                return _CMND;
            }
            set
            {
                OnCMNDChanging(value);
                ReportPropertyChanging("CMND");
                _CMND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CMND");
                OnCMNDChanged();
            }
        }
        private global::System.String _CMND;
        partial void OnCMNDChanging(global::System.String value);
        partial void OnCMNDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_Authority_Account", "Authority")]
        public EntityCollection<Authority> Authorities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Authority>("CMART0Model.FK_Authority_Account", "Authority");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Authority>("CMART0Model.FK_Authority_Account", "Authority", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_BranchOfficeReceipt_Account", "BranchOfficeReceipt")]
        public EntityCollection<BranchOfficeReceipt> BranchOfficeReceipts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BranchOfficeReceipt>("CMART0Model.FK_BranchOfficeReceipt_Account", "BranchOfficeReceipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BranchOfficeReceipt>("CMART0Model.FK_BranchOfficeReceipt_Account", "BranchOfficeReceipt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_HoaDon_TaiKhoan", "Bill")]
        public EntityCollection<Bill> Bills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Bill>("CMART0Model.FK_HoaDon_TaiKhoan", "Bill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Bill>("CMART0Model.FK_HoaDon_TaiKhoan", "Bill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_PhieuDeXuatNhapHang_TaiKhoan", "ProposeReceipt")]
        public EntityCollection<ProposeReceipt> ProposeReceipts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProposeReceipt>("CMART0Model.FK_PhieuDeXuatNhapHang_TaiKhoan", "ProposeReceipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProposeReceipt>("CMART0Model.FK_PhieuDeXuatNhapHang_TaiKhoan", "ProposeReceipt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_PhieuNhapHangTruSo_TaiKhoan", "HeadquaterReceipt")]
        public EntityCollection<HeadquaterReceipt> HeadquaterReceipts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HeadquaterReceipt>("CMART0Model.FK_PhieuNhapHangTruSo_TaiKhoan", "HeadquaterReceipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HeadquaterReceipt>("CMART0Model.FK_PhieuNhapHangTruSo_TaiKhoan", "HeadquaterReceipt", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CMART0Model", Name="Authority")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Authority : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Authority object.
        /// </summary>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="nameOfAuthority">Initial value of the NameOfAuthority property.</param>
        /// <param name="create">Initial value of the Create property.</param>
        /// <param name="update">Initial value of the Update property.</param>
        /// <param name="delete">Initial value of the Delete property.</param>
        /// <param name="view">Initial value of the View property.</param>
        public static Authority CreateAuthority(global::System.String accountID, global::System.String nameOfAuthority, global::System.Boolean create, global::System.Boolean update, global::System.Boolean delete, global::System.Boolean view)
        {
            Authority authority = new Authority();
            authority.AccountID = accountID;
            authority.NameOfAuthority = nameOfAuthority;
            authority.Create = create;
            authority.Update = update;
            authority.Delete = delete;
            authority.View = view;
            return authority;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                if (_AccountID != value)
                {
                    OnAccountIDChanging(value);
                    ReportPropertyChanging("AccountID");
                    _AccountID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AccountID");
                    OnAccountIDChanged();
                }
            }
        }
        private global::System.String _AccountID;
        partial void OnAccountIDChanging(global::System.String value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameOfAuthority
        {
            get
            {
                return _NameOfAuthority;
            }
            set
            {
                if (_NameOfAuthority != value)
                {
                    OnNameOfAuthorityChanging(value);
                    ReportPropertyChanging("NameOfAuthority");
                    _NameOfAuthority = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("NameOfAuthority");
                    OnNameOfAuthorityChanged();
                }
            }
        }
        private global::System.String _NameOfAuthority;
        partial void OnNameOfAuthorityChanging(global::System.String value);
        partial void OnNameOfAuthorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Create
        {
            get
            {
                return _Create;
            }
            set
            {
                OnCreateChanging(value);
                ReportPropertyChanging("Create");
                _Create = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Create");
                OnCreateChanged();
            }
        }
        private global::System.Boolean _Create;
        partial void OnCreateChanging(global::System.Boolean value);
        partial void OnCreateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Update
        {
            get
            {
                return _Update;
            }
            set
            {
                OnUpdateChanging(value);
                ReportPropertyChanging("Update");
                _Update = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Update");
                OnUpdateChanged();
            }
        }
        private global::System.Boolean _Update;
        partial void OnUpdateChanging(global::System.Boolean value);
        partial void OnUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Delete
        {
            get
            {
                return _Delete;
            }
            set
            {
                OnDeleteChanging(value);
                ReportPropertyChanging("Delete");
                _Delete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Delete");
                OnDeleteChanged();
            }
        }
        private global::System.Boolean _Delete;
        partial void OnDeleteChanging(global::System.Boolean value);
        partial void OnDeleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean View
        {
            get
            {
                return _View;
            }
            set
            {
                OnViewChanging(value);
                ReportPropertyChanging("View");
                _View = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("View");
                OnViewChanged();
            }
        }
        private global::System.Boolean _View;
        partial void OnViewChanging(global::System.Boolean value);
        partial void OnViewChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_Authority_Account", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CMART0Model.FK_Authority_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CMART0Model.FK_Authority_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CMART0Model.FK_Authority_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("CMART0Model.FK_Authority_Account", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_Authority_AuthorityName", "AuthorityName")]
        public AuthorityName AuthorityName
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AuthorityName>("CMART0Model.FK_Authority_AuthorityName", "AuthorityName").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AuthorityName>("CMART0Model.FK_Authority_AuthorityName", "AuthorityName").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AuthorityName> AuthorityNameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AuthorityName>("CMART0Model.FK_Authority_AuthorityName", "AuthorityName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AuthorityName>("CMART0Model.FK_Authority_AuthorityName", "AuthorityName", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CMART0Model", Name="AuthorityName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuthorityName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuthorityName object.
        /// </summary>
        /// <param name="nameOfAuthority">Initial value of the NameOfAuthority property.</param>
        public static AuthorityName CreateAuthorityName(global::System.String nameOfAuthority)
        {
            AuthorityName authorityName = new AuthorityName();
            authorityName.NameOfAuthority = nameOfAuthority;
            return authorityName;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameOfAuthority
        {
            get
            {
                return _NameOfAuthority;
            }
            set
            {
                if (_NameOfAuthority != value)
                {
                    OnNameOfAuthorityChanging(value);
                    ReportPropertyChanging("NameOfAuthority");
                    _NameOfAuthority = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("NameOfAuthority");
                    OnNameOfAuthorityChanged();
                }
            }
        }
        private global::System.String _NameOfAuthority;
        partial void OnNameOfAuthorityChanging(global::System.String value);
        partial void OnNameOfAuthorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_Authority_AuthorityName", "Authority")]
        public EntityCollection<Authority> Authorities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Authority>("CMART0Model.FK_Authority_AuthorityName", "Authority");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Authority>("CMART0Model.FK_Authority_AuthorityName", "Authority", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CMART0Model", Name="Bill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Bill object.
        /// </summary>
        /// <param name="billID">Initial value of the BillID property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        /// <param name="pOS">Initial value of the POS property.</param>
        /// <param name="totalAmount">Initial value of the TotalAmount property.</param>
        /// <param name="totalQuantity">Initial value of the TotalQuantity property.</param>
        /// <param name="inputMoney">Initial value of the InputMoney property.</param>
        /// <param name="outputMoney">Initial value of the OutputMoney property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        public static Bill CreateBill(global::System.String billID, global::System.DateTime saleDate, global::System.Int32 pOS, global::System.Double totalAmount, global::System.Int32 totalQuantity, global::System.Double inputMoney, global::System.Double outputMoney, global::System.String accountID)
        {
            Bill bill = new Bill();
            bill.BillID = billID;
            bill.SaleDate = saleDate;
            bill.POS = pOS;
            bill.TotalAmount = totalAmount;
            bill.TotalQuantity = totalQuantity;
            bill.InputMoney = inputMoney;
            bill.OutputMoney = outputMoney;
            bill.AccountID = accountID;
            return bill;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BillID
        {
            get
            {
                return _BillID;
            }
            set
            {
                if (_BillID != value)
                {
                    OnBillIDChanging(value);
                    ReportPropertyChanging("BillID");
                    _BillID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BillID");
                    OnBillIDChanged();
                }
            }
        }
        private global::System.String _BillID;
        partial void OnBillIDChanging(global::System.String value);
        partial void OnBillIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 POS
        {
            get
            {
                return _POS;
            }
            set
            {
                OnPOSChanging(value);
                ReportPropertyChanging("POS");
                _POS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POS");
                OnPOSChanged();
            }
        }
        private global::System.Int32 _POS;
        partial void OnPOSChanging(global::System.Int32 value);
        partial void OnPOSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private global::System.Double _TotalAmount;
        partial void OnTotalAmountChanging(global::System.Double value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalQuantity
        {
            get
            {
                return _TotalQuantity;
            }
            set
            {
                OnTotalQuantityChanging(value);
                ReportPropertyChanging("TotalQuantity");
                _TotalQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalQuantity");
                OnTotalQuantityChanged();
            }
        }
        private global::System.Int32 _TotalQuantity;
        partial void OnTotalQuantityChanging(global::System.Int32 value);
        partial void OnTotalQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double InputMoney
        {
            get
            {
                return _InputMoney;
            }
            set
            {
                OnInputMoneyChanging(value);
                ReportPropertyChanging("InputMoney");
                _InputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InputMoney");
                OnInputMoneyChanged();
            }
        }
        private global::System.Double _InputMoney;
        partial void OnInputMoneyChanging(global::System.Double value);
        partial void OnInputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OutputMoney
        {
            get
            {
                return _OutputMoney;
            }
            set
            {
                OnOutputMoneyChanging(value);
                ReportPropertyChanging("OutputMoney");
                _OutputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutputMoney");
                OnOutputMoneyChanged();
            }
        }
        private global::System.Double _OutputMoney;
        partial void OnOutputMoneyChanging(global::System.Double value);
        partial void OnOutputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.String _AccountID;
        partial void OnAccountIDChanging(global::System.String value);
        partial void OnAccountIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_HoaDon_TaiKhoan", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CMART0Model.FK_HoaDon_TaiKhoan", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CMART0Model.FK_HoaDon_TaiKhoan", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CMART0Model.FK_HoaDon_TaiKhoan", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("CMART0Model.FK_HoaDon_TaiKhoan", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_ChiTietHoaDon_HoaDon", "BillDetail")]
        public EntityCollection<BillDetail> BillDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BillDetail>("CMART0Model.FK_ChiTietHoaDon_HoaDon", "BillDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BillDetail>("CMART0Model.FK_ChiTietHoaDon_HoaDon", "BillDetail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CMART0Model", Name="BillDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BillDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BillDetail object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="billID">Initial value of the BillID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static BillDetail CreateBillDetail(global::System.String productID, global::System.String billID, global::System.Int32 quantity, global::System.Double price)
        {
            BillDetail billDetail = new BillDetail();
            billDetail.ProductID = productID;
            billDetail.BillID = billID;
            billDetail.Quantity = quantity;
            billDetail.Price = price;
            return billDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BillID
        {
            get
            {
                return _BillID;
            }
            set
            {
                if (_BillID != value)
                {
                    OnBillIDChanging(value);
                    ReportPropertyChanging("BillID");
                    _BillID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BillID");
                    OnBillIDChanged();
                }
            }
        }
        private global::System.String _BillID;
        partial void OnBillIDChanging(global::System.String value);
        partial void OnBillIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_ChiTietHoaDon_HoaDon", "Bill")]
        public Bill Bill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("CMART0Model.FK_ChiTietHoaDon_HoaDon", "Bill").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("CMART0Model.FK_ChiTietHoaDon_HoaDon", "Bill").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bill> BillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("CMART0Model.FK_ChiTietHoaDon_HoaDon", "Bill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bill>("CMART0Model.FK_ChiTietHoaDon_HoaDon", "Bill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_ChiTietHoaDon_SanPham", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CMART0Model.FK_ChiTietHoaDon_SanPham", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CMART0Model.FK_ChiTietHoaDon_SanPham", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CMART0Model.FK_ChiTietHoaDon_SanPham", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CMART0Model.FK_ChiTietHoaDon_SanPham", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CMART0Model", Name="BranchOfficeReceipt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BranchOfficeReceipt : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BranchOfficeReceipt object.
        /// </summary>
        /// <param name="branchOfficeID">Initial value of the BranchOfficeID property.</param>
        /// <param name="headquaterID">Initial value of the HeadquaterID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="branch">Initial value of the Branch property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        public static BranchOfficeReceipt CreateBranchOfficeReceipt(global::System.String branchOfficeID, global::System.String headquaterID, global::System.DateTime date, global::System.String branch, global::System.String accountID)
        {
            BranchOfficeReceipt branchOfficeReceipt = new BranchOfficeReceipt();
            branchOfficeReceipt.BranchOfficeID = branchOfficeID;
            branchOfficeReceipt.HeadquaterID = headquaterID;
            branchOfficeReceipt.Date = date;
            branchOfficeReceipt.Branch = branch;
            branchOfficeReceipt.AccountID = accountID;
            return branchOfficeReceipt;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BranchOfficeID
        {
            get
            {
                return _BranchOfficeID;
            }
            set
            {
                if (_BranchOfficeID != value)
                {
                    OnBranchOfficeIDChanging(value);
                    ReportPropertyChanging("BranchOfficeID");
                    _BranchOfficeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BranchOfficeID");
                    OnBranchOfficeIDChanged();
                }
            }
        }
        private global::System.String _BranchOfficeID;
        partial void OnBranchOfficeIDChanging(global::System.String value);
        partial void OnBranchOfficeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HeadquaterID
        {
            get
            {
                return _HeadquaterID;
            }
            set
            {
                OnHeadquaterIDChanging(value);
                ReportPropertyChanging("HeadquaterID");
                _HeadquaterID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HeadquaterID");
                OnHeadquaterIDChanged();
            }
        }
        private global::System.String _HeadquaterID;
        partial void OnHeadquaterIDChanging(global::System.String value);
        partial void OnHeadquaterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Branch
        {
            get
            {
                return _Branch;
            }
            set
            {
                OnBranchChanging(value);
                ReportPropertyChanging("Branch");
                _Branch = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Branch");
                OnBranchChanged();
            }
        }
        private global::System.String _Branch;
        partial void OnBranchChanging(global::System.String value);
        partial void OnBranchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.String _AccountID;
        partial void OnAccountIDChanging(global::System.String value);
        partial void OnAccountIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_BranchOfficeReceipt_Account", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CMART0Model.FK_BranchOfficeReceipt_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CMART0Model.FK_BranchOfficeReceipt_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CMART0Model.FK_BranchOfficeReceipt_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("CMART0Model.FK_BranchOfficeReceipt_Account", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_BranchOfficeReceipt_HeadquaterReceipt", "HeadquaterReceipt")]
        public HeadquaterReceipt HeadquaterReceipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HeadquaterReceipt>("CMART0Model.FK_BranchOfficeReceipt_HeadquaterReceipt", "HeadquaterReceipt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HeadquaterReceipt>("CMART0Model.FK_BranchOfficeReceipt_HeadquaterReceipt", "HeadquaterReceipt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HeadquaterReceipt> HeadquaterReceiptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HeadquaterReceipt>("CMART0Model.FK_BranchOfficeReceipt_HeadquaterReceipt", "HeadquaterReceipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HeadquaterReceipt>("CMART0Model.FK_BranchOfficeReceipt_HeadquaterReceipt", "HeadquaterReceipt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_BranchOfficeReceiptDetail_BranchOfficeReceipt", "BranchOfficeReceiptDetail")]
        public EntityCollection<BranchOfficeReceiptDetail> BranchOfficeReceiptDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BranchOfficeReceiptDetail>("CMART0Model.FK_BranchOfficeReceiptDetail_BranchOfficeReceipt", "BranchOfficeReceiptDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BranchOfficeReceiptDetail>("CMART0Model.FK_BranchOfficeReceiptDetail_BranchOfficeReceipt", "BranchOfficeReceiptDetail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CMART0Model", Name="BranchOfficeReceiptDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BranchOfficeReceiptDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BranchOfficeReceiptDetail object.
        /// </summary>
        /// <param name="branchOfficeID">Initial value of the BranchOfficeID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static BranchOfficeReceiptDetail CreateBranchOfficeReceiptDetail(global::System.String branchOfficeID, global::System.String productID, global::System.Int32 quantity, global::System.String status)
        {
            BranchOfficeReceiptDetail branchOfficeReceiptDetail = new BranchOfficeReceiptDetail();
            branchOfficeReceiptDetail.BranchOfficeID = branchOfficeID;
            branchOfficeReceiptDetail.ProductID = productID;
            branchOfficeReceiptDetail.Quantity = quantity;
            branchOfficeReceiptDetail.Status = status;
            return branchOfficeReceiptDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BranchOfficeID
        {
            get
            {
                return _BranchOfficeID;
            }
            set
            {
                if (_BranchOfficeID != value)
                {
                    OnBranchOfficeIDChanging(value);
                    ReportPropertyChanging("BranchOfficeID");
                    _BranchOfficeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BranchOfficeID");
                    OnBranchOfficeIDChanged();
                }
            }
        }
        private global::System.String _BranchOfficeID;
        partial void OnBranchOfficeIDChanging(global::System.String value);
        partial void OnBranchOfficeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_BranchOfficeReceiptDetail_BranchOfficeReceipt", "BranchOfficeReceipt")]
        public BranchOfficeReceipt BranchOfficeReceipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BranchOfficeReceipt>("CMART0Model.FK_BranchOfficeReceiptDetail_BranchOfficeReceipt", "BranchOfficeReceipt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BranchOfficeReceipt>("CMART0Model.FK_BranchOfficeReceiptDetail_BranchOfficeReceipt", "BranchOfficeReceipt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BranchOfficeReceipt> BranchOfficeReceiptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BranchOfficeReceipt>("CMART0Model.FK_BranchOfficeReceiptDetail_BranchOfficeReceipt", "BranchOfficeReceipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BranchOfficeReceipt>("CMART0Model.FK_BranchOfficeReceiptDetail_BranchOfficeReceipt", "BranchOfficeReceipt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_BranchOfficeReceiptDetail_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CMART0Model.FK_BranchOfficeReceiptDetail_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CMART0Model.FK_BranchOfficeReceiptDetail_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CMART0Model.FK_BranchOfficeReceiptDetail_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CMART0Model.FK_BranchOfficeReceiptDetail_Product", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CMART0Model", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Category CreateCategory(global::System.String categoryID, global::System.String name)
        {
            Category category = new Category();
            category.CategoryID = categoryID;
            category.Name = name;
            return category;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.String _CategoryID;
        partial void OnCategoryIDChanging(global::System.String value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_SanPham_LoaiSanPham", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("CMART0Model.FK_SanPham_LoaiSanPham", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("CMART0Model.FK_SanPham_LoaiSanPham", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CMART0Model", Name="HeadquaterReceipt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HeadquaterReceipt : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HeadquaterReceipt object.
        /// </summary>
        /// <param name="headquaterID">Initial value of the HeadquaterID property.</param>
        /// <param name="proposeID">Initial value of the ProposeID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="totalAmount">Initial value of the TotalAmount property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        public static HeadquaterReceipt CreateHeadquaterReceipt(global::System.String headquaterID, global::System.String proposeID, global::System.DateTime date, global::System.Double totalAmount, global::System.String accountID)
        {
            HeadquaterReceipt headquaterReceipt = new HeadquaterReceipt();
            headquaterReceipt.HeadquaterID = headquaterID;
            headquaterReceipt.ProposeID = proposeID;
            headquaterReceipt.Date = date;
            headquaterReceipt.TotalAmount = totalAmount;
            headquaterReceipt.AccountID = accountID;
            return headquaterReceipt;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HeadquaterID
        {
            get
            {
                return _HeadquaterID;
            }
            set
            {
                if (_HeadquaterID != value)
                {
                    OnHeadquaterIDChanging(value);
                    ReportPropertyChanging("HeadquaterID");
                    _HeadquaterID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("HeadquaterID");
                    OnHeadquaterIDChanged();
                }
            }
        }
        private global::System.String _HeadquaterID;
        partial void OnHeadquaterIDChanging(global::System.String value);
        partial void OnHeadquaterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProposeID
        {
            get
            {
                return _ProposeID;
            }
            set
            {
                OnProposeIDChanging(value);
                ReportPropertyChanging("ProposeID");
                _ProposeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProposeID");
                OnProposeIDChanged();
            }
        }
        private global::System.String _ProposeID;
        partial void OnProposeIDChanging(global::System.String value);
        partial void OnProposeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private global::System.Double _TotalAmount;
        partial void OnTotalAmountChanging(global::System.Double value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.String _AccountID;
        partial void OnAccountIDChanging(global::System.String value);
        partial void OnAccountIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_PhieuNhapHangTruSo_TaiKhoan", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CMART0Model.FK_PhieuNhapHangTruSo_TaiKhoan", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CMART0Model.FK_PhieuNhapHangTruSo_TaiKhoan", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CMART0Model.FK_PhieuNhapHangTruSo_TaiKhoan", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("CMART0Model.FK_PhieuNhapHangTruSo_TaiKhoan", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_BranchOfficeReceipt_HeadquaterReceipt", "BranchOfficeReceipt")]
        public EntityCollection<BranchOfficeReceipt> BranchOfficeReceipts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BranchOfficeReceipt>("CMART0Model.FK_BranchOfficeReceipt_HeadquaterReceipt", "BranchOfficeReceipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BranchOfficeReceipt>("CMART0Model.FK_BranchOfficeReceipt_HeadquaterReceipt", "BranchOfficeReceipt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_ChiTietPhieuNhapHangTruSo_PhieuNhapHangTruSo", "HeadquaterReceiptDetail")]
        public EntityCollection<HeadquaterReceiptDetail> HeadquaterReceiptDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HeadquaterReceiptDetail>("CMART0Model.FK_ChiTietPhieuNhapHangTruSo_PhieuNhapHangTruSo", "HeadquaterReceiptDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HeadquaterReceiptDetail>("CMART0Model.FK_ChiTietPhieuNhapHangTruSo_PhieuNhapHangTruSo", "HeadquaterReceiptDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_PhieuNhapHangTruSo_PhieuDeXuatNhapHang", "ProposeReceipt")]
        public ProposeReceipt ProposeReceipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProposeReceipt>("CMART0Model.FK_PhieuNhapHangTruSo_PhieuDeXuatNhapHang", "ProposeReceipt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProposeReceipt>("CMART0Model.FK_PhieuNhapHangTruSo_PhieuDeXuatNhapHang", "ProposeReceipt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProposeReceipt> ProposeReceiptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProposeReceipt>("CMART0Model.FK_PhieuNhapHangTruSo_PhieuDeXuatNhapHang", "ProposeReceipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProposeReceipt>("CMART0Model.FK_PhieuNhapHangTruSo_PhieuDeXuatNhapHang", "ProposeReceipt", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CMART0Model", Name="HeadquaterReceiptDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HeadquaterReceiptDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HeadquaterReceiptDetail object.
        /// </summary>
        /// <param name="headquaterID">Initial value of the HeadquaterID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static HeadquaterReceiptDetail CreateHeadquaterReceiptDetail(global::System.String headquaterID, global::System.String productID, global::System.Int32 quantity, global::System.Double price, global::System.String status)
        {
            HeadquaterReceiptDetail headquaterReceiptDetail = new HeadquaterReceiptDetail();
            headquaterReceiptDetail.HeadquaterID = headquaterID;
            headquaterReceiptDetail.ProductID = productID;
            headquaterReceiptDetail.Quantity = quantity;
            headquaterReceiptDetail.Price = price;
            headquaterReceiptDetail.Status = status;
            return headquaterReceiptDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HeadquaterID
        {
            get
            {
                return _HeadquaterID;
            }
            set
            {
                if (_HeadquaterID != value)
                {
                    OnHeadquaterIDChanging(value);
                    ReportPropertyChanging("HeadquaterID");
                    _HeadquaterID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("HeadquaterID");
                    OnHeadquaterIDChanged();
                }
            }
        }
        private global::System.String _HeadquaterID;
        partial void OnHeadquaterIDChanging(global::System.String value);
        partial void OnHeadquaterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpiryDate
        {
            get
            {
                return _ExpiryDate;
            }
            set
            {
                OnExpiryDateChanging(value);
                ReportPropertyChanging("ExpiryDate");
                _ExpiryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpiryDate");
                OnExpiryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpiryDate;
        partial void OnExpiryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpiryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_ChiTietPhieuNhapHangTruSo_PhieuNhapHangTruSo", "HeadquaterReceipt")]
        public HeadquaterReceipt HeadquaterReceipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HeadquaterReceipt>("CMART0Model.FK_ChiTietPhieuNhapHangTruSo_PhieuNhapHangTruSo", "HeadquaterReceipt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HeadquaterReceipt>("CMART0Model.FK_ChiTietPhieuNhapHangTruSo_PhieuNhapHangTruSo", "HeadquaterReceipt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HeadquaterReceipt> HeadquaterReceiptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HeadquaterReceipt>("CMART0Model.FK_ChiTietPhieuNhapHangTruSo_PhieuNhapHangTruSo", "HeadquaterReceipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HeadquaterReceipt>("CMART0Model.FK_ChiTietPhieuNhapHangTruSo_PhieuNhapHangTruSo", "HeadquaterReceipt", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CMART0Model", Name="Price")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Price : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Price object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="price1">Initial value of the Price1 property.</param>
        /// <param name="effectiveDay">Initial value of the EffectiveDay property.</param>
        public static Price CreatePrice(global::System.String productID, global::System.Double price1, global::System.DateTime effectiveDay)
        {
            Price price = new Price();
            price.ProductID = productID;
            price.Price1 = price1;
            price.EffectiveDay = effectiveDay;
            return price;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price1
        {
            get
            {
                return _Price1;
            }
            set
            {
                if (_Price1 != value)
                {
                    OnPrice1Changing(value);
                    ReportPropertyChanging("Price1");
                    _Price1 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Price1");
                    OnPrice1Changed();
                }
            }
        }
        private global::System.Double _Price1;
        partial void OnPrice1Changing(global::System.Double value);
        partial void OnPrice1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDay
        {
            get
            {
                return _EffectiveDay;
            }
            set
            {
                if (_EffectiveDay != value)
                {
                    OnEffectiveDayChanging(value);
                    ReportPropertyChanging("EffectiveDay");
                    _EffectiveDay = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EffectiveDay");
                    OnEffectiveDayChanged();
                }
            }
        }
        private global::System.DateTime _EffectiveDay;
        partial void OnEffectiveDayChanging(global::System.DateTime value);
        partial void OnEffectiveDayChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_Gia_SanPham", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CMART0Model.FK_Gia_SanPham", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CMART0Model.FK_Gia_SanPham", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CMART0Model.FK_Gia_SanPham", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CMART0Model.FK_Gia_SanPham", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CMART0Model", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="image">Initial value of the Image property.</param>
        /// <param name="supplierID">Initial value of the SupplierID property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        public static Product CreateProduct(global::System.String productID, global::System.String name, global::System.String image, global::System.String supplierID, global::System.String categoryID)
        {
            Product product = new Product();
            product.ProductID = productID;
            product.Name = name;
            product.Image = image;
            product.SupplierID = supplierID;
            product.CategoryID = categoryID;
            return product;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Image
        {
            get
            {
                return _Image;
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.String _Image;
        partial void OnImageChanging(global::System.String value);
        partial void OnImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private global::System.String _SupplierID;
        partial void OnSupplierIDChanging(global::System.String value);
        partial void OnSupplierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.String _CategoryID;
        partial void OnCategoryIDChanging(global::System.String value);
        partial void OnCategoryIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_ChiTietHoaDon_SanPham", "BillDetail")]
        public EntityCollection<BillDetail> BillDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BillDetail>("CMART0Model.FK_ChiTietHoaDon_SanPham", "BillDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BillDetail>("CMART0Model.FK_ChiTietHoaDon_SanPham", "BillDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_BranchOfficeReceiptDetail_Product", "BranchOfficeReceiptDetail")]
        public EntityCollection<BranchOfficeReceiptDetail> BranchOfficeReceiptDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BranchOfficeReceiptDetail>("CMART0Model.FK_BranchOfficeReceiptDetail_Product", "BranchOfficeReceiptDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BranchOfficeReceiptDetail>("CMART0Model.FK_BranchOfficeReceiptDetail_Product", "BranchOfficeReceiptDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_SanPham_LoaiSanPham", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("CMART0Model.FK_SanPham_LoaiSanPham", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("CMART0Model.FK_SanPham_LoaiSanPham", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("CMART0Model.FK_SanPham_LoaiSanPham", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("CMART0Model.FK_SanPham_LoaiSanPham", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_Gia_SanPham", "Price")]
        public EntityCollection<Price> Prices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Price>("CMART0Model.FK_Gia_SanPham", "Price");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Price>("CMART0Model.FK_Gia_SanPham", "Price", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_ChiTietPhieuDeXuatNhapHang_SanPham", "ProposeReceiptDetail")]
        public EntityCollection<ProposeReceiptDetail> ProposeReceiptDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProposeReceiptDetail>("CMART0Model.FK_ChiTietPhieuDeXuatNhapHang_SanPham", "ProposeReceiptDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProposeReceiptDetail>("CMART0Model.FK_ChiTietPhieuDeXuatNhapHang_SanPham", "ProposeReceiptDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_SanPham_NhaCungCap", "Supplier")]
        public Supplier Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("CMART0Model.FK_SanPham_NhaCungCap", "Supplier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("CMART0Model.FK_SanPham_NhaCungCap", "Supplier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> SupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("CMART0Model.FK_SanPham_NhaCungCap", "Supplier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("CMART0Model.FK_SanPham_NhaCungCap", "Supplier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_ThongTinKhuyenMai_SanPham", "Promotion")]
        public EntityCollection<Promotion> Promotions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Promotion>("CMART0Model.FK_ThongTinKhuyenMai_SanPham", "Promotion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Promotion>("CMART0Model.FK_ThongTinKhuyenMai_SanPham", "Promotion", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CMART0Model", Name="Promotion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Promotion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Promotion object.
        /// </summary>
        /// <param name="promotionID">Initial value of the PromotionID property.</param>
        /// <param name="promotionPrice">Initial value of the PromotionPrice property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="image">Initial value of the Image property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        public static Promotion CreatePromotion(global::System.String promotionID, global::System.Double promotionPrice, global::System.DateTime startDate, global::System.String content, global::System.String image, global::System.String productID)
        {
            Promotion promotion = new Promotion();
            promotion.PromotionID = promotionID;
            promotion.PromotionPrice = promotionPrice;
            promotion.StartDate = startDate;
            promotion.Content = content;
            promotion.Image = image;
            promotion.ProductID = productID;
            return promotion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PromotionID
        {
            get
            {
                return _PromotionID;
            }
            set
            {
                if (_PromotionID != value)
                {
                    OnPromotionIDChanging(value);
                    ReportPropertyChanging("PromotionID");
                    _PromotionID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PromotionID");
                    OnPromotionIDChanged();
                }
            }
        }
        private global::System.String _PromotionID;
        partial void OnPromotionIDChanging(global::System.String value);
        partial void OnPromotionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PromotionPrice
        {
            get
            {
                return _PromotionPrice;
            }
            set
            {
                OnPromotionPriceChanging(value);
                ReportPropertyChanging("PromotionPrice");
                _PromotionPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PromotionPrice");
                OnPromotionPriceChanged();
            }
        }
        private global::System.Double _PromotionPrice;
        partial void OnPromotionPriceChanging(global::System.Double value);
        partial void OnPromotionPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Image
        {
            get
            {
                return _Image;
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.String _Image;
        partial void OnImageChanging(global::System.String value);
        partial void OnImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_ThongTinKhuyenMai_SanPham", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CMART0Model.FK_ThongTinKhuyenMai_SanPham", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CMART0Model.FK_ThongTinKhuyenMai_SanPham", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CMART0Model.FK_ThongTinKhuyenMai_SanPham", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CMART0Model.FK_ThongTinKhuyenMai_SanPham", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CMART0Model", Name="ProposeReceipt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProposeReceipt : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProposeReceipt object.
        /// </summary>
        /// <param name="proposeID">Initial value of the ProposeID property.</param>
        /// <param name="proposeDate">Initial value of the ProposeDate property.</param>
        /// <param name="supplierID">Initial value of the SupplierID property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        public static ProposeReceipt CreateProposeReceipt(global::System.String proposeID, global::System.DateTime proposeDate, global::System.String supplierID, global::System.String accountID)
        {
            ProposeReceipt proposeReceipt = new ProposeReceipt();
            proposeReceipt.ProposeID = proposeID;
            proposeReceipt.ProposeDate = proposeDate;
            proposeReceipt.SupplierID = supplierID;
            proposeReceipt.AccountID = accountID;
            return proposeReceipt;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProposeID
        {
            get
            {
                return _ProposeID;
            }
            set
            {
                if (_ProposeID != value)
                {
                    OnProposeIDChanging(value);
                    ReportPropertyChanging("ProposeID");
                    _ProposeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProposeID");
                    OnProposeIDChanged();
                }
            }
        }
        private global::System.String _ProposeID;
        partial void OnProposeIDChanging(global::System.String value);
        partial void OnProposeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ProposeDate
        {
            get
            {
                return _ProposeDate;
            }
            set
            {
                OnProposeDateChanging(value);
                ReportPropertyChanging("ProposeDate");
                _ProposeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProposeDate");
                OnProposeDateChanged();
            }
        }
        private global::System.DateTime _ProposeDate;
        partial void OnProposeDateChanging(global::System.DateTime value);
        partial void OnProposeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private global::System.String _SupplierID;
        partial void OnSupplierIDChanging(global::System.String value);
        partial void OnSupplierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.String _AccountID;
        partial void OnAccountIDChanging(global::System.String value);
        partial void OnAccountIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_PhieuDeXuatNhapHang_TaiKhoan", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CMART0Model.FK_PhieuDeXuatNhapHang_TaiKhoan", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CMART0Model.FK_PhieuDeXuatNhapHang_TaiKhoan", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CMART0Model.FK_PhieuDeXuatNhapHang_TaiKhoan", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("CMART0Model.FK_PhieuDeXuatNhapHang_TaiKhoan", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_PhieuNhapHangTruSo_PhieuDeXuatNhapHang", "HeadquaterReceipt")]
        public EntityCollection<HeadquaterReceipt> HeadquaterReceipts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HeadquaterReceipt>("CMART0Model.FK_PhieuNhapHangTruSo_PhieuDeXuatNhapHang", "HeadquaterReceipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HeadquaterReceipt>("CMART0Model.FK_PhieuNhapHangTruSo_PhieuDeXuatNhapHang", "HeadquaterReceipt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_ChiTietPhieuDeXuatNhapHang_PhieuDeXuatNhapHang", "ProposeReceiptDetail")]
        public EntityCollection<ProposeReceiptDetail> ProposeReceiptDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProposeReceiptDetail>("CMART0Model.FK_ChiTietPhieuDeXuatNhapHang_PhieuDeXuatNhapHang", "ProposeReceiptDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProposeReceiptDetail>("CMART0Model.FK_ChiTietPhieuDeXuatNhapHang_PhieuDeXuatNhapHang", "ProposeReceiptDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_PhieuDeXuatNhapHang_NhaCungCap", "Supplier")]
        public Supplier Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("CMART0Model.FK_PhieuDeXuatNhapHang_NhaCungCap", "Supplier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("CMART0Model.FK_PhieuDeXuatNhapHang_NhaCungCap", "Supplier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> SupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("CMART0Model.FK_PhieuDeXuatNhapHang_NhaCungCap", "Supplier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("CMART0Model.FK_PhieuDeXuatNhapHang_NhaCungCap", "Supplier", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CMART0Model", Name="ProposeReceiptDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProposeReceiptDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProposeReceiptDetail object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="proposeID">Initial value of the ProposeID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static ProposeReceiptDetail CreateProposeReceiptDetail(global::System.String productID, global::System.String proposeID, global::System.Int32 quantity)
        {
            ProposeReceiptDetail proposeReceiptDetail = new ProposeReceiptDetail();
            proposeReceiptDetail.ProductID = productID;
            proposeReceiptDetail.ProposeID = proposeID;
            proposeReceiptDetail.Quantity = quantity;
            return proposeReceiptDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProposeID
        {
            get
            {
                return _ProposeID;
            }
            set
            {
                if (_ProposeID != value)
                {
                    OnProposeIDChanging(value);
                    ReportPropertyChanging("ProposeID");
                    _ProposeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProposeID");
                    OnProposeIDChanged();
                }
            }
        }
        private global::System.String _ProposeID;
        partial void OnProposeIDChanging(global::System.String value);
        partial void OnProposeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_ChiTietPhieuDeXuatNhapHang_SanPham", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CMART0Model.FK_ChiTietPhieuDeXuatNhapHang_SanPham", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CMART0Model.FK_ChiTietPhieuDeXuatNhapHang_SanPham", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CMART0Model.FK_ChiTietPhieuDeXuatNhapHang_SanPham", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CMART0Model.FK_ChiTietPhieuDeXuatNhapHang_SanPham", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_ChiTietPhieuDeXuatNhapHang_PhieuDeXuatNhapHang", "ProposeReceipt")]
        public ProposeReceipt ProposeReceipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProposeReceipt>("CMART0Model.FK_ChiTietPhieuDeXuatNhapHang_PhieuDeXuatNhapHang", "ProposeReceipt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProposeReceipt>("CMART0Model.FK_ChiTietPhieuDeXuatNhapHang_PhieuDeXuatNhapHang", "ProposeReceipt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProposeReceipt> ProposeReceiptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProposeReceipt>("CMART0Model.FK_ChiTietPhieuDeXuatNhapHang_PhieuDeXuatNhapHang", "ProposeReceipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProposeReceipt>("CMART0Model.FK_ChiTietPhieuDeXuatNhapHang_PhieuDeXuatNhapHang", "ProposeReceipt", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CMART0Model", Name="Supplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Supplier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Supplier object.
        /// </summary>
        /// <param name="supplierID">Initial value of the SupplierID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="phoneNumber">Initial value of the PhoneNumber property.</param>
        public static Supplier CreateSupplier(global::System.String supplierID, global::System.String name, global::System.String address, global::System.String phoneNumber)
        {
            Supplier supplier = new Supplier();
            supplier.SupplierID = supplierID;
            supplier.Name = name;
            supplier.Address = address;
            supplier.PhoneNumber = phoneNumber;
            return supplier;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                if (_SupplierID != value)
                {
                    OnSupplierIDChanging(value);
                    ReportPropertyChanging("SupplierID");
                    _SupplierID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SupplierID");
                    OnSupplierIDChanged();
                }
            }
        }
        private global::System.String _SupplierID;
        partial void OnSupplierIDChanging(global::System.String value);
        partial void OnSupplierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_SanPham_NhaCungCap", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("CMART0Model.FK_SanPham_NhaCungCap", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("CMART0Model.FK_SanPham_NhaCungCap", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CMART0Model", "FK_PhieuDeXuatNhapHang_NhaCungCap", "ProposeReceipt")]
        public EntityCollection<ProposeReceipt> ProposeReceipts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProposeReceipt>("CMART0Model.FK_PhieuDeXuatNhapHang_NhaCungCap", "ProposeReceipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProposeReceipt>("CMART0Model.FK_PhieuDeXuatNhapHang_NhaCungCap", "ProposeReceipt", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CMART0Model", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="PROMOTION_SEARCH_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PROMOTION_SEARCH_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PROMOTION_SEARCH_Result object.
        /// </summary>
        /// <param name="promotionID">Initial value of the PromotionID property.</param>
        /// <param name="promotionPrice">Initial value of the PromotionPrice property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="image">Initial value of the Image property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        public static PROMOTION_SEARCH_Result CreatePROMOTION_SEARCH_Result(global::System.String promotionID, global::System.Double promotionPrice, global::System.DateTime startDate, global::System.String content, global::System.String image, global::System.String productID)
        {
            PROMOTION_SEARCH_Result pROMOTION_SEARCH_Result = new PROMOTION_SEARCH_Result();
            pROMOTION_SEARCH_Result.PromotionID = promotionID;
            pROMOTION_SEARCH_Result.PromotionPrice = promotionPrice;
            pROMOTION_SEARCH_Result.StartDate = startDate;
            pROMOTION_SEARCH_Result.Content = content;
            pROMOTION_SEARCH_Result.Image = image;
            pROMOTION_SEARCH_Result.ProductID = productID;
            return pROMOTION_SEARCH_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PromotionID
        {
            get
            {
                return _PromotionID;
            }
            set
            {
                OnPromotionIDChanging(value);
                ReportPropertyChanging("PromotionID");
                _PromotionID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PromotionID");
                OnPromotionIDChanged();
            }
        }
        private global::System.String _PromotionID;
        partial void OnPromotionIDChanging(global::System.String value);
        partial void OnPromotionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PromotionPrice
        {
            get
            {
                return _PromotionPrice;
            }
            set
            {
                OnPromotionPriceChanging(value);
                ReportPropertyChanging("PromotionPrice");
                _PromotionPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PromotionPrice");
                OnPromotionPriceChanged();
            }
        }
        private global::System.Double _PromotionPrice;
        partial void OnPromotionPriceChanging(global::System.Double value);
        partial void OnPromotionPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Image
        {
            get
            {
                return _Image;
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.String _Image;
        partial void OnImageChanging(global::System.String value);
        partial void OnImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="PROMOTION_SELECT_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PROMOTION_SELECT_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PROMOTION_SELECT_Result object.
        /// </summary>
        /// <param name="promotionID">Initial value of the PromotionID property.</param>
        /// <param name="promotionPrice">Initial value of the PromotionPrice property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="image">Initial value of the Image property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static PROMOTION_SELECT_Result CreatePROMOTION_SELECT_Result(global::System.String promotionID, global::System.Double promotionPrice, global::System.DateTime startDate, global::System.String content, global::System.String image, global::System.String name)
        {
            PROMOTION_SELECT_Result pROMOTION_SELECT_Result = new PROMOTION_SELECT_Result();
            pROMOTION_SELECT_Result.PromotionID = promotionID;
            pROMOTION_SELECT_Result.PromotionPrice = promotionPrice;
            pROMOTION_SELECT_Result.StartDate = startDate;
            pROMOTION_SELECT_Result.Content = content;
            pROMOTION_SELECT_Result.Image = image;
            pROMOTION_SELECT_Result.Name = name;
            return pROMOTION_SELECT_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PromotionID
        {
            get
            {
                return _PromotionID;
            }
            set
            {
                OnPromotionIDChanging(value);
                ReportPropertyChanging("PromotionID");
                _PromotionID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PromotionID");
                OnPromotionIDChanged();
            }
        }
        private global::System.String _PromotionID;
        partial void OnPromotionIDChanging(global::System.String value);
        partial void OnPromotionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PromotionPrice
        {
            get
            {
                return _PromotionPrice;
            }
            set
            {
                OnPromotionPriceChanging(value);
                ReportPropertyChanging("PromotionPrice");
                _PromotionPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PromotionPrice");
                OnPromotionPriceChanged();
            }
        }
        private global::System.Double _PromotionPrice;
        partial void OnPromotionPriceChanging(global::System.Double value);
        partial void OnPromotionPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Image
        {
            get
            {
                return _Image;
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.String _Image;
        partial void OnImageChanging(global::System.String value);
        partial void OnImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="SP_BILL_PRINT_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SP_BILL_PRINT_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SP_BILL_PRINT_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static SP_BILL_PRINT_Result CreateSP_BILL_PRINT_Result(global::System.String name, global::System.Int32 quantity, global::System.Double price)
        {
            SP_BILL_PRINT_Result sP_BILL_PRINT_Result = new SP_BILL_PRINT_Result();
            sP_BILL_PRINT_Result.Name = name;
            sP_BILL_PRINT_Result.Quantity = quantity;
            sP_BILL_PRINT_Result.Price = price;
            return sP_BILL_PRINT_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TOTAL
        {
            get
            {
                return _TOTAL;
            }
            set
            {
                OnTOTALChanging(value);
                ReportPropertyChanging("TOTAL");
                _TOTAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TOTAL");
                OnTOTALChanged();
            }
        }
        private Nullable<global::System.Double> _TOTAL;
        partial void OnTOTALChanging(Nullable<global::System.Double> value);
        partial void OnTOTALChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="SP_BILL_PRINTBILL_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SP_BILL_PRINTBILL_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SP_BILL_PRINTBILL_Result object.
        /// </summary>
        /// <param name="billID">Initial value of the BillID property.</param>
        /// <param name="pOS">Initial value of the POS property.</param>
        /// <param name="inputMoney">Initial value of the InputMoney property.</param>
        /// <param name="outputMoney">Initial value of the OutputMoney property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        /// <param name="totalAmount">Initial value of the TotalAmount property.</param>
        /// <param name="totalQuantity">Initial value of the TotalQuantity property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        public static SP_BILL_PRINTBILL_Result CreateSP_BILL_PRINTBILL_Result(global::System.String billID, global::System.Int32 pOS, global::System.Double inputMoney, global::System.Double outputMoney, global::System.DateTime saleDate, global::System.Double totalAmount, global::System.Int32 totalQuantity, global::System.String fullName)
        {
            SP_BILL_PRINTBILL_Result sP_BILL_PRINTBILL_Result = new SP_BILL_PRINTBILL_Result();
            sP_BILL_PRINTBILL_Result.BillID = billID;
            sP_BILL_PRINTBILL_Result.POS = pOS;
            sP_BILL_PRINTBILL_Result.InputMoney = inputMoney;
            sP_BILL_PRINTBILL_Result.OutputMoney = outputMoney;
            sP_BILL_PRINTBILL_Result.SaleDate = saleDate;
            sP_BILL_PRINTBILL_Result.TotalAmount = totalAmount;
            sP_BILL_PRINTBILL_Result.TotalQuantity = totalQuantity;
            sP_BILL_PRINTBILL_Result.FullName = fullName;
            return sP_BILL_PRINTBILL_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BillID
        {
            get
            {
                return _BillID;
            }
            set
            {
                OnBillIDChanging(value);
                ReportPropertyChanging("BillID");
                _BillID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BillID");
                OnBillIDChanged();
            }
        }
        private global::System.String _BillID;
        partial void OnBillIDChanging(global::System.String value);
        partial void OnBillIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BRANCH
        {
            get
            {
                return _BRANCH;
            }
            set
            {
                OnBRANCHChanging(value);
                ReportPropertyChanging("BRANCH");
                _BRANCH = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BRANCH");
                OnBRANCHChanged();
            }
        }
        private global::System.String _BRANCH;
        partial void OnBRANCHChanging(global::System.String value);
        partial void OnBRANCHChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 POS
        {
            get
            {
                return _POS;
            }
            set
            {
                OnPOSChanging(value);
                ReportPropertyChanging("POS");
                _POS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POS");
                OnPOSChanged();
            }
        }
        private global::System.Int32 _POS;
        partial void OnPOSChanging(global::System.Int32 value);
        partial void OnPOSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double InputMoney
        {
            get
            {
                return _InputMoney;
            }
            set
            {
                OnInputMoneyChanging(value);
                ReportPropertyChanging("InputMoney");
                _InputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InputMoney");
                OnInputMoneyChanged();
            }
        }
        private global::System.Double _InputMoney;
        partial void OnInputMoneyChanging(global::System.Double value);
        partial void OnInputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OutputMoney
        {
            get
            {
                return _OutputMoney;
            }
            set
            {
                OnOutputMoneyChanging(value);
                ReportPropertyChanging("OutputMoney");
                _OutputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutputMoney");
                OnOutputMoneyChanged();
            }
        }
        private global::System.Double _OutputMoney;
        partial void OnOutputMoneyChanging(global::System.Double value);
        partial void OnOutputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private global::System.Double _TotalAmount;
        partial void OnTotalAmountChanging(global::System.Double value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalQuantity
        {
            get
            {
                return _TotalQuantity;
            }
            set
            {
                OnTotalQuantityChanging(value);
                ReportPropertyChanging("TotalQuantity");
                _TotalQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalQuantity");
                OnTotalQuantityChanged();
            }
        }
        private global::System.Int32 _TotalQuantity;
        partial void OnTotalQuantityChanging(global::System.Int32 value);
        partial void OnTotalQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="SP_BILL_PRINTBILLDETAIL_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SP_BILL_PRINTBILLDETAIL_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SP_BILL_PRINTBILLDETAIL_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static SP_BILL_PRINTBILLDETAIL_Result CreateSP_BILL_PRINTBILLDETAIL_Result(global::System.String name, global::System.Int32 quantity, global::System.Double price)
        {
            SP_BILL_PRINTBILLDETAIL_Result sP_BILL_PRINTBILLDETAIL_Result = new SP_BILL_PRINTBILLDETAIL_Result();
            sP_BILL_PRINTBILLDETAIL_Result.Name = name;
            sP_BILL_PRINTBILLDETAIL_Result.Quantity = quantity;
            sP_BILL_PRINTBILLDETAIL_Result.Price = price;
            return sP_BILL_PRINTBILLDETAIL_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TOTAL
        {
            get
            {
                return _TOTAL;
            }
            set
            {
                OnTOTALChanging(value);
                ReportPropertyChanging("TOTAL");
                _TOTAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TOTAL");
                OnTOTALChanged();
            }
        }
        private Nullable<global::System.Double> _TOTAL;
        partial void OnTOTALChanging(Nullable<global::System.Double> value);
        partial void OnTOTALChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="sp_BranchOfficeSearch_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_BranchOfficeSearch_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_BranchOfficeSearch_Result object.
        /// </summary>
        /// <param name="branchOfficeID">Initial value of the BranchOfficeID property.</param>
        /// <param name="headquaterID">Initial value of the HeadquaterID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="branch">Initial value of the Branch property.</param>
        public static sp_BranchOfficeSearch_Result Createsp_BranchOfficeSearch_Result(global::System.String branchOfficeID, global::System.String headquaterID, global::System.DateTime date, global::System.String branch)
        {
            sp_BranchOfficeSearch_Result sp_BranchOfficeSearch_Result = new sp_BranchOfficeSearch_Result();
            sp_BranchOfficeSearch_Result.BranchOfficeID = branchOfficeID;
            sp_BranchOfficeSearch_Result.HeadquaterID = headquaterID;
            sp_BranchOfficeSearch_Result.Date = date;
            sp_BranchOfficeSearch_Result.Branch = branch;
            return sp_BranchOfficeSearch_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BranchOfficeID
        {
            get
            {
                return _BranchOfficeID;
            }
            set
            {
                OnBranchOfficeIDChanging(value);
                ReportPropertyChanging("BranchOfficeID");
                _BranchOfficeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BranchOfficeID");
                OnBranchOfficeIDChanged();
            }
        }
        private global::System.String _BranchOfficeID;
        partial void OnBranchOfficeIDChanging(global::System.String value);
        partial void OnBranchOfficeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HeadquaterID
        {
            get
            {
                return _HeadquaterID;
            }
            set
            {
                OnHeadquaterIDChanging(value);
                ReportPropertyChanging("HeadquaterID");
                _HeadquaterID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HeadquaterID");
                OnHeadquaterIDChanged();
            }
        }
        private global::System.String _HeadquaterID;
        partial void OnHeadquaterIDChanging(global::System.String value);
        partial void OnHeadquaterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Branch
        {
            get
            {
                return _Branch;
            }
            set
            {
                OnBranchChanging(value);
                ReportPropertyChanging("Branch");
                _Branch = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Branch");
                OnBranchChanged();
            }
        }
        private global::System.String _Branch;
        partial void OnBranchChanging(global::System.String value);
        partial void OnBranchChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="sp_helpdiagramdefinition_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_helpdiagramdefinition_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="sp_helpdiagrams_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_helpdiagrams_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_helpdiagrams_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="ownerID">Initial value of the OwnerID property.</param>
        public static sp_helpdiagrams_Result Createsp_helpdiagrams_Result(global::System.String name, global::System.Int32 id, global::System.Int32 ownerID)
        {
            sp_helpdiagrams_Result sp_helpdiagrams_Result = new sp_helpdiagrams_Result();
            sp_helpdiagrams_Result.Name = name;
            sp_helpdiagrams_Result.ID = id;
            sp_helpdiagrams_Result.OwnerID = ownerID;
            return sp_helpdiagrams_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Database
        {
            get
            {
                return _Database;
            }
            set
            {
                OnDatabaseChanging(value);
                ReportPropertyChanging("Database");
                _Database = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Database");
                OnDatabaseChanged();
            }
        }
        private global::System.String _Database;
        partial void OnDatabaseChanging(global::System.String value);
        partial void OnDatabaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerID
        {
            get
            {
                return _OwnerID;
            }
            set
            {
                OnOwnerIDChanging(value);
                ReportPropertyChanging("OwnerID");
                _OwnerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerID");
                OnOwnerIDChanged();
            }
        }
        private global::System.Int32 _OwnerID;
        partial void OnOwnerIDChanging(global::System.Int32 value);
        partial void OnOwnerIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="SP_LOAD_BRANCHRECEIPTDETAIL_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SP_LOAD_BRANCHRECEIPTDETAIL_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SP_LOAD_BRANCHRECEIPTDETAIL_Result object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static SP_LOAD_BRANCHRECEIPTDETAIL_Result CreateSP_LOAD_BRANCHRECEIPTDETAIL_Result(global::System.String productID, global::System.String name, global::System.Int32 quantity, global::System.String status)
        {
            SP_LOAD_BRANCHRECEIPTDETAIL_Result sP_LOAD_BRANCHRECEIPTDETAIL_Result = new SP_LOAD_BRANCHRECEIPTDETAIL_Result();
            sP_LOAD_BRANCHRECEIPTDETAIL_Result.ProductID = productID;
            sP_LOAD_BRANCHRECEIPTDETAIL_Result.Name = name;
            sP_LOAD_BRANCHRECEIPTDETAIL_Result.Quantity = quantity;
            sP_LOAD_BRANCHRECEIPTDETAIL_Result.Status = status;
            return sP_LOAD_BRANCHRECEIPTDETAIL_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="SP_PRINT_BRANCHRECEIPTDETAIL_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SP_PRINT_BRANCHRECEIPTDETAIL_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SP_PRINT_BRANCHRECEIPTDETAIL_Result object.
        /// </summary>
        /// <param name="branchOfficeID">Initial value of the BranchOfficeID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="branch">Initial value of the Branch property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static SP_PRINT_BRANCHRECEIPTDETAIL_Result CreateSP_PRINT_BRANCHRECEIPTDETAIL_Result(global::System.String branchOfficeID, global::System.DateTime date, global::System.String branch, global::System.String fullName, global::System.String productID, global::System.String name, global::System.Int32 quantity, global::System.String status)
        {
            SP_PRINT_BRANCHRECEIPTDETAIL_Result sP_PRINT_BRANCHRECEIPTDETAIL_Result = new SP_PRINT_BRANCHRECEIPTDETAIL_Result();
            sP_PRINT_BRANCHRECEIPTDETAIL_Result.BranchOfficeID = branchOfficeID;
            sP_PRINT_BRANCHRECEIPTDETAIL_Result.Date = date;
            sP_PRINT_BRANCHRECEIPTDETAIL_Result.Branch = branch;
            sP_PRINT_BRANCHRECEIPTDETAIL_Result.FullName = fullName;
            sP_PRINT_BRANCHRECEIPTDETAIL_Result.ProductID = productID;
            sP_PRINT_BRANCHRECEIPTDETAIL_Result.Name = name;
            sP_PRINT_BRANCHRECEIPTDETAIL_Result.Quantity = quantity;
            sP_PRINT_BRANCHRECEIPTDETAIL_Result.Status = status;
            return sP_PRINT_BRANCHRECEIPTDETAIL_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Column1
        {
            get
            {
                return _Column1;
            }
            set
            {
                OnColumn1Changing(value);
                ReportPropertyChanging("Column1");
                _Column1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Column1");
                OnColumn1Changed();
            }
        }
        private global::System.String _Column1;
        partial void OnColumn1Changing(global::System.String value);
        partial void OnColumn1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BranchOfficeID
        {
            get
            {
                return _BranchOfficeID;
            }
            set
            {
                OnBranchOfficeIDChanging(value);
                ReportPropertyChanging("BranchOfficeID");
                _BranchOfficeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BranchOfficeID");
                OnBranchOfficeIDChanged();
            }
        }
        private global::System.String _BranchOfficeID;
        partial void OnBranchOfficeIDChanging(global::System.String value);
        partial void OnBranchOfficeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Branch
        {
            get
            {
                return _Branch;
            }
            set
            {
                OnBranchChanging(value);
                ReportPropertyChanging("Branch");
                _Branch = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Branch");
                OnBranchChanged();
            }
        }
        private global::System.String _Branch;
        partial void OnBranchChanging(global::System.String value);
        partial void OnBranchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="SP_SEARCH_PRODUCT_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SP_SEARCH_PRODUCT_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SP_SEARCH_PRODUCT_Result object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="image">Initial value of the Image property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        /// <param name="supplierName">Initial value of the SupplierName property.</param>
        public static SP_SEARCH_PRODUCT_Result CreateSP_SEARCH_PRODUCT_Result(global::System.String productID, global::System.String name, global::System.String image, global::System.String categoryName, global::System.String supplierName)
        {
            SP_SEARCH_PRODUCT_Result sP_SEARCH_PRODUCT_Result = new SP_SEARCH_PRODUCT_Result();
            sP_SEARCH_PRODUCT_Result.ProductID = productID;
            sP_SEARCH_PRODUCT_Result.Name = name;
            sP_SEARCH_PRODUCT_Result.Image = image;
            sP_SEARCH_PRODUCT_Result.CategoryName = categoryName;
            sP_SEARCH_PRODUCT_Result.SupplierName = supplierName;
            return sP_SEARCH_PRODUCT_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Image
        {
            get
            {
                return _Image;
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.String _Image;
        partial void OnImageChanging(global::System.String value);
        partial void OnImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SupplierName
        {
            get
            {
                return _SupplierName;
            }
            set
            {
                OnSupplierNameChanging(value);
                ReportPropertyChanging("SupplierName");
                _SupplierName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SupplierName");
                OnSupplierNameChanged();
            }
        }
        private global::System.String _SupplierName;
        partial void OnSupplierNameChanging(global::System.String value);
        partial void OnSupplierNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="SP_SELECTALL_PRODUCT_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SP_SELECTALL_PRODUCT_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SP_SELECTALL_PRODUCT_Result object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="image">Initial value of the Image property.</param>
        /// <param name="supplierName">Initial value of the SupplierName property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        public static SP_SELECTALL_PRODUCT_Result CreateSP_SELECTALL_PRODUCT_Result(global::System.String productID, global::System.String name, global::System.String image, global::System.String supplierName, global::System.String categoryName)
        {
            SP_SELECTALL_PRODUCT_Result sP_SELECTALL_PRODUCT_Result = new SP_SELECTALL_PRODUCT_Result();
            sP_SELECTALL_PRODUCT_Result.ProductID = productID;
            sP_SELECTALL_PRODUCT_Result.Name = name;
            sP_SELECTALL_PRODUCT_Result.Image = image;
            sP_SELECTALL_PRODUCT_Result.SupplierName = supplierName;
            sP_SELECTALL_PRODUCT_Result.CategoryName = categoryName;
            return sP_SELECTALL_PRODUCT_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Image
        {
            get
            {
                return _Image;
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.String _Image;
        partial void OnImageChanging(global::System.String value);
        partial void OnImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SupplierName
        {
            get
            {
                return _SupplierName;
            }
            set
            {
                OnSupplierNameChanging(value);
                ReportPropertyChanging("SupplierName");
                _SupplierName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SupplierName");
                OnSupplierNameChanged();
            }
        }
        private global::System.String _SupplierName;
        partial void OnSupplierNameChanging(global::System.String value);
        partial void OnSupplierNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="SP_SUMREPORT_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SP_SUMREPORT_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SP_SUMREPORT_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        public static SP_SUMREPORT_Result CreateSP_SUMREPORT_Result(global::System.String name, global::System.Int32 quantity, global::System.Double price, global::System.DateTime saleDate)
        {
            SP_SUMREPORT_Result sP_SUMREPORT_Result = new SP_SUMREPORT_Result();
            sP_SUMREPORT_Result.Name = name;
            sP_SUMREPORT_Result.Quantity = quantity;
            sP_SUMREPORT_Result.Price = price;
            sP_SUMREPORT_Result.SaleDate = saleDate;
            return sP_SUMREPORT_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TOTAL
        {
            get
            {
                return _TOTAL;
            }
            set
            {
                OnTOTALChanging(value);
                ReportPropertyChanging("TOTAL");
                _TOTAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TOTAL");
                OnTOTALChanged();
            }
        }
        private Nullable<global::System.Double> _TOTAL;
        partial void OnTOTALChanging(Nullable<global::System.Double> value);
        partial void OnTOTALChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="SP_THONGKEDOANHTHU_KTG_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SP_THONGKEDOANHTHU_KTG_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SP_THONGKEDOANHTHU_KTG_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        public static SP_THONGKEDOANHTHU_KTG_Result CreateSP_THONGKEDOANHTHU_KTG_Result(global::System.String name, global::System.Int32 quantity, global::System.Double price, global::System.DateTime saleDate)
        {
            SP_THONGKEDOANHTHU_KTG_Result sP_THONGKEDOANHTHU_KTG_Result = new SP_THONGKEDOANHTHU_KTG_Result();
            sP_THONGKEDOANHTHU_KTG_Result.Name = name;
            sP_THONGKEDOANHTHU_KTG_Result.Quantity = quantity;
            sP_THONGKEDOANHTHU_KTG_Result.Price = price;
            sP_THONGKEDOANHTHU_KTG_Result.SaleDate = saleDate;
            return sP_THONGKEDOANHTHU_KTG_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TOTAL
        {
            get
            {
                return _TOTAL;
            }
            set
            {
                OnTOTALChanging(value);
                ReportPropertyChanging("TOTAL");
                _TOTAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TOTAL");
                OnTOTALChanged();
            }
        }
        private Nullable<global::System.Double> _TOTAL;
        partial void OnTOTALChanging(Nullable<global::System.Double> value);
        partial void OnTOTALChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="SP_THONGKEDOANHTHU_KTG_TOP10_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SP_THONGKEDOANHTHU_KTG_TOP10_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SP_THONGKEDOANHTHU_KTG_TOP10_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        public static SP_THONGKEDOANHTHU_KTG_TOP10_Result CreateSP_THONGKEDOANHTHU_KTG_TOP10_Result(global::System.String name, global::System.Int32 quantity, global::System.Double price, global::System.DateTime saleDate)
        {
            SP_THONGKEDOANHTHU_KTG_TOP10_Result sP_THONGKEDOANHTHU_KTG_TOP10_Result = new SP_THONGKEDOANHTHU_KTG_TOP10_Result();
            sP_THONGKEDOANHTHU_KTG_TOP10_Result.Name = name;
            sP_THONGKEDOANHTHU_KTG_TOP10_Result.Quantity = quantity;
            sP_THONGKEDOANHTHU_KTG_TOP10_Result.Price = price;
            sP_THONGKEDOANHTHU_KTG_TOP10_Result.SaleDate = saleDate;
            return sP_THONGKEDOANHTHU_KTG_TOP10_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TOTAL
        {
            get
            {
                return _TOTAL;
            }
            set
            {
                OnTOTALChanging(value);
                ReportPropertyChanging("TOTAL");
                _TOTAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TOTAL");
                OnTOTALChanged();
            }
        }
        private Nullable<global::System.Double> _TOTAL;
        partial void OnTOTALChanging(Nullable<global::System.Double> value);
        partial void OnTOTALChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="SP_THONGKEDOANHTHU_KTG_TOP20_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SP_THONGKEDOANHTHU_KTG_TOP20_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SP_THONGKEDOANHTHU_KTG_TOP20_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        public static SP_THONGKEDOANHTHU_KTG_TOP20_Result CreateSP_THONGKEDOANHTHU_KTG_TOP20_Result(global::System.String name, global::System.Int32 quantity, global::System.Double price, global::System.DateTime saleDate)
        {
            SP_THONGKEDOANHTHU_KTG_TOP20_Result sP_THONGKEDOANHTHU_KTG_TOP20_Result = new SP_THONGKEDOANHTHU_KTG_TOP20_Result();
            sP_THONGKEDOANHTHU_KTG_TOP20_Result.Name = name;
            sP_THONGKEDOANHTHU_KTG_TOP20_Result.Quantity = quantity;
            sP_THONGKEDOANHTHU_KTG_TOP20_Result.Price = price;
            sP_THONGKEDOANHTHU_KTG_TOP20_Result.SaleDate = saleDate;
            return sP_THONGKEDOANHTHU_KTG_TOP20_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TOTAL
        {
            get
            {
                return _TOTAL;
            }
            set
            {
                OnTOTALChanging(value);
                ReportPropertyChanging("TOTAL");
                _TOTAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TOTAL");
                OnTOTALChanged();
            }
        }
        private Nullable<global::System.Double> _TOTAL;
        partial void OnTOTALChanging(Nullable<global::System.Double> value);
        partial void OnTOTALChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="SP_THONGKEDOANHTHU_KTG_TOP5_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SP_THONGKEDOANHTHU_KTG_TOP5_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SP_THONGKEDOANHTHU_KTG_TOP5_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        public static SP_THONGKEDOANHTHU_KTG_TOP5_Result CreateSP_THONGKEDOANHTHU_KTG_TOP5_Result(global::System.String name, global::System.Int32 quantity, global::System.Double price, global::System.DateTime saleDate)
        {
            SP_THONGKEDOANHTHU_KTG_TOP5_Result sP_THONGKEDOANHTHU_KTG_TOP5_Result = new SP_THONGKEDOANHTHU_KTG_TOP5_Result();
            sP_THONGKEDOANHTHU_KTG_TOP5_Result.Name = name;
            sP_THONGKEDOANHTHU_KTG_TOP5_Result.Quantity = quantity;
            sP_THONGKEDOANHTHU_KTG_TOP5_Result.Price = price;
            sP_THONGKEDOANHTHU_KTG_TOP5_Result.SaleDate = saleDate;
            return sP_THONGKEDOANHTHU_KTG_TOP5_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TOTAL
        {
            get
            {
                return _TOTAL;
            }
            set
            {
                OnTOTALChanging(value);
                ReportPropertyChanging("TOTAL");
                _TOTAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TOTAL");
                OnTOTALChanged();
            }
        }
        private Nullable<global::System.Double> _TOTAL;
        partial void OnTOTALChanging(Nullable<global::System.Double> value);
        partial void OnTOTALChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="SP_THONGKEDOANHTHU_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SP_THONGKEDOANHTHU_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SP_THONGKEDOANHTHU_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        public static SP_THONGKEDOANHTHU_Result CreateSP_THONGKEDOANHTHU_Result(global::System.String name, global::System.Int32 quantity, global::System.Double price, global::System.DateTime saleDate)
        {
            SP_THONGKEDOANHTHU_Result sP_THONGKEDOANHTHU_Result = new SP_THONGKEDOANHTHU_Result();
            sP_THONGKEDOANHTHU_Result.Name = name;
            sP_THONGKEDOANHTHU_Result.Quantity = quantity;
            sP_THONGKEDOANHTHU_Result.Price = price;
            sP_THONGKEDOANHTHU_Result.SaleDate = saleDate;
            return sP_THONGKEDOANHTHU_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TOTAL
        {
            get
            {
                return _TOTAL;
            }
            set
            {
                OnTOTALChanging(value);
                ReportPropertyChanging("TOTAL");
                _TOTAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TOTAL");
                OnTOTALChanged();
            }
        }
        private Nullable<global::System.Double> _TOTAL;
        partial void OnTOTALChanging(Nullable<global::System.Double> value);
        partial void OnTOTALChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="SP_THONGKEDOANHTHU_TOP10_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SP_THONGKEDOANHTHU_TOP10_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SP_THONGKEDOANHTHU_TOP10_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        public static SP_THONGKEDOANHTHU_TOP10_Result CreateSP_THONGKEDOANHTHU_TOP10_Result(global::System.String name, global::System.Int32 quantity, global::System.Double price, global::System.DateTime saleDate)
        {
            SP_THONGKEDOANHTHU_TOP10_Result sP_THONGKEDOANHTHU_TOP10_Result = new SP_THONGKEDOANHTHU_TOP10_Result();
            sP_THONGKEDOANHTHU_TOP10_Result.Name = name;
            sP_THONGKEDOANHTHU_TOP10_Result.Quantity = quantity;
            sP_THONGKEDOANHTHU_TOP10_Result.Price = price;
            sP_THONGKEDOANHTHU_TOP10_Result.SaleDate = saleDate;
            return sP_THONGKEDOANHTHU_TOP10_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TOTAL
        {
            get
            {
                return _TOTAL;
            }
            set
            {
                OnTOTALChanging(value);
                ReportPropertyChanging("TOTAL");
                _TOTAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TOTAL");
                OnTOTALChanged();
            }
        }
        private Nullable<global::System.Double> _TOTAL;
        partial void OnTOTALChanging(Nullable<global::System.Double> value);
        partial void OnTOTALChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="SP_THONGKEDOANHTHU_TOP20_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SP_THONGKEDOANHTHU_TOP20_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SP_THONGKEDOANHTHU_TOP20_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        public static SP_THONGKEDOANHTHU_TOP20_Result CreateSP_THONGKEDOANHTHU_TOP20_Result(global::System.String name, global::System.Int32 quantity, global::System.Double price, global::System.DateTime saleDate)
        {
            SP_THONGKEDOANHTHU_TOP20_Result sP_THONGKEDOANHTHU_TOP20_Result = new SP_THONGKEDOANHTHU_TOP20_Result();
            sP_THONGKEDOANHTHU_TOP20_Result.Name = name;
            sP_THONGKEDOANHTHU_TOP20_Result.Quantity = quantity;
            sP_THONGKEDOANHTHU_TOP20_Result.Price = price;
            sP_THONGKEDOANHTHU_TOP20_Result.SaleDate = saleDate;
            return sP_THONGKEDOANHTHU_TOP20_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TOTAL
        {
            get
            {
                return _TOTAL;
            }
            set
            {
                OnTOTALChanging(value);
                ReportPropertyChanging("TOTAL");
                _TOTAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TOTAL");
                OnTOTALChanged();
            }
        }
        private Nullable<global::System.Double> _TOTAL;
        partial void OnTOTALChanging(Nullable<global::System.Double> value);
        partial void OnTOTALChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="SP_THONGKEDOANHTHU_TOP5_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SP_THONGKEDOANHTHU_TOP5_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SP_THONGKEDOANHTHU_TOP5_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        public static SP_THONGKEDOANHTHU_TOP5_Result CreateSP_THONGKEDOANHTHU_TOP5_Result(global::System.String name, global::System.Int32 quantity, global::System.Double price, global::System.DateTime saleDate)
        {
            SP_THONGKEDOANHTHU_TOP5_Result sP_THONGKEDOANHTHU_TOP5_Result = new SP_THONGKEDOANHTHU_TOP5_Result();
            sP_THONGKEDOANHTHU_TOP5_Result.Name = name;
            sP_THONGKEDOANHTHU_TOP5_Result.Quantity = quantity;
            sP_THONGKEDOANHTHU_TOP5_Result.Price = price;
            sP_THONGKEDOANHTHU_TOP5_Result.SaleDate = saleDate;
            return sP_THONGKEDOANHTHU_TOP5_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TOTAL
        {
            get
            {
                return _TOTAL;
            }
            set
            {
                OnTOTALChanging(value);
                ReportPropertyChanging("TOTAL");
                _TOTAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TOTAL");
                OnTOTALChanged();
            }
        }
        private Nullable<global::System.Double> _TOTAL;
        partial void OnTOTALChanging(Nullable<global::System.Double> value);
        partial void OnTOTALChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="usp_AccountSearch_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_AccountSearch_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_AccountSearch_Result object.
        /// </summary>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="phoneNumber">Initial value of the PhoneNumber property.</param>
        /// <param name="cMND">Initial value of the CMND property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="authority">Initial value of the Authority property.</param>
        public static usp_AccountSearch_Result Createusp_AccountSearch_Result(global::System.String accountID, global::System.String fullName, global::System.String address, global::System.String phoneNumber, global::System.String cMND, global::System.String userName, global::System.String password, global::System.String authority)
        {
            usp_AccountSearch_Result usp_AccountSearch_Result = new usp_AccountSearch_Result();
            usp_AccountSearch_Result.AccountID = accountID;
            usp_AccountSearch_Result.FullName = fullName;
            usp_AccountSearch_Result.Address = address;
            usp_AccountSearch_Result.PhoneNumber = phoneNumber;
            usp_AccountSearch_Result.CMND = cMND;
            usp_AccountSearch_Result.UserName = userName;
            usp_AccountSearch_Result.Password = password;
            usp_AccountSearch_Result.Authority = authority;
            return usp_AccountSearch_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.String _AccountID;
        partial void OnAccountIDChanging(global::System.String value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CMND
        {
            get
            {
                return _CMND;
            }
            set
            {
                OnCMNDChanging(value);
                ReportPropertyChanging("CMND");
                _CMND = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CMND");
                OnCMNDChanged();
            }
        }
        private global::System.String _CMND;
        partial void OnCMNDChanging(global::System.String value);
        partial void OnCMNDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Authority
        {
            get
            {
                return _Authority;
            }
            set
            {
                OnAuthorityChanging(value);
                ReportPropertyChanging("Authority");
                _Authority = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Authority");
                OnAuthorityChanged();
            }
        }
        private global::System.String _Authority;
        partial void OnAuthorityChanging(global::System.String value);
        partial void OnAuthorityChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="usp_Bill_Insert_returnid_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_Bill_Insert_returnid_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_Bill_Insert_returnid_Result object.
        /// </summary>
        /// <param name="billID">Initial value of the BillID property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        /// <param name="pOS">Initial value of the POS property.</param>
        /// <param name="totalAmount">Initial value of the TotalAmount property.</param>
        /// <param name="totalQuantity">Initial value of the TotalQuantity property.</param>
        /// <param name="inputMoney">Initial value of the InputMoney property.</param>
        /// <param name="outputMoney">Initial value of the OutputMoney property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        public static usp_Bill_Insert_returnid_Result Createusp_Bill_Insert_returnid_Result(global::System.String billID, global::System.DateTime saleDate, global::System.Int32 pOS, global::System.Double totalAmount, global::System.Int32 totalQuantity, global::System.Double inputMoney, global::System.Double outputMoney, global::System.String accountID)
        {
            usp_Bill_Insert_returnid_Result usp_Bill_Insert_returnid_Result = new usp_Bill_Insert_returnid_Result();
            usp_Bill_Insert_returnid_Result.BillID = billID;
            usp_Bill_Insert_returnid_Result.SaleDate = saleDate;
            usp_Bill_Insert_returnid_Result.POS = pOS;
            usp_Bill_Insert_returnid_Result.TotalAmount = totalAmount;
            usp_Bill_Insert_returnid_Result.TotalQuantity = totalQuantity;
            usp_Bill_Insert_returnid_Result.InputMoney = inputMoney;
            usp_Bill_Insert_returnid_Result.OutputMoney = outputMoney;
            usp_Bill_Insert_returnid_Result.AccountID = accountID;
            return usp_Bill_Insert_returnid_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BillID
        {
            get
            {
                return _BillID;
            }
            set
            {
                OnBillIDChanging(value);
                ReportPropertyChanging("BillID");
                _BillID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BillID");
                OnBillIDChanged();
            }
        }
        private global::System.String _BillID;
        partial void OnBillIDChanging(global::System.String value);
        partial void OnBillIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 POS
        {
            get
            {
                return _POS;
            }
            set
            {
                OnPOSChanging(value);
                ReportPropertyChanging("POS");
                _POS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POS");
                OnPOSChanged();
            }
        }
        private global::System.Int32 _POS;
        partial void OnPOSChanging(global::System.Int32 value);
        partial void OnPOSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private global::System.Double _TotalAmount;
        partial void OnTotalAmountChanging(global::System.Double value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalQuantity
        {
            get
            {
                return _TotalQuantity;
            }
            set
            {
                OnTotalQuantityChanging(value);
                ReportPropertyChanging("TotalQuantity");
                _TotalQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalQuantity");
                OnTotalQuantityChanged();
            }
        }
        private global::System.Int32 _TotalQuantity;
        partial void OnTotalQuantityChanging(global::System.Int32 value);
        partial void OnTotalQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double InputMoney
        {
            get
            {
                return _InputMoney;
            }
            set
            {
                OnInputMoneyChanging(value);
                ReportPropertyChanging("InputMoney");
                _InputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InputMoney");
                OnInputMoneyChanged();
            }
        }
        private global::System.Double _InputMoney;
        partial void OnInputMoneyChanging(global::System.Double value);
        partial void OnInputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OutputMoney
        {
            get
            {
                return _OutputMoney;
            }
            set
            {
                OnOutputMoneyChanging(value);
                ReportPropertyChanging("OutputMoney");
                _OutputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutputMoney");
                OnOutputMoneyChanged();
            }
        }
        private global::System.Double _OutputMoney;
        partial void OnOutputMoneyChanging(global::System.Double value);
        partial void OnOutputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.String _AccountID;
        partial void OnAccountIDChanging(global::System.String value);
        partial void OnAccountIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="usp_Bill_Search_BillId_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_Bill_Search_BillId_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_Bill_Search_BillId_Result object.
        /// </summary>
        /// <param name="billID">Initial value of the BillID property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        /// <param name="pOS">Initial value of the POS property.</param>
        /// <param name="totalAmount">Initial value of the TotalAmount property.</param>
        /// <param name="totalQuantity">Initial value of the TotalQuantity property.</param>
        /// <param name="inputMoney">Initial value of the InputMoney property.</param>
        /// <param name="outputMoney">Initial value of the OutputMoney property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        public static usp_Bill_Search_BillId_Result Createusp_Bill_Search_BillId_Result(global::System.String billID, global::System.DateTime saleDate, global::System.Int32 pOS, global::System.Double totalAmount, global::System.Int32 totalQuantity, global::System.Double inputMoney, global::System.Double outputMoney, global::System.String fullName)
        {
            usp_Bill_Search_BillId_Result usp_Bill_Search_BillId_Result = new usp_Bill_Search_BillId_Result();
            usp_Bill_Search_BillId_Result.BillID = billID;
            usp_Bill_Search_BillId_Result.SaleDate = saleDate;
            usp_Bill_Search_BillId_Result.POS = pOS;
            usp_Bill_Search_BillId_Result.TotalAmount = totalAmount;
            usp_Bill_Search_BillId_Result.TotalQuantity = totalQuantity;
            usp_Bill_Search_BillId_Result.InputMoney = inputMoney;
            usp_Bill_Search_BillId_Result.OutputMoney = outputMoney;
            usp_Bill_Search_BillId_Result.FullName = fullName;
            return usp_Bill_Search_BillId_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BillID
        {
            get
            {
                return _BillID;
            }
            set
            {
                OnBillIDChanging(value);
                ReportPropertyChanging("BillID");
                _BillID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BillID");
                OnBillIDChanged();
            }
        }
        private global::System.String _BillID;
        partial void OnBillIDChanging(global::System.String value);
        partial void OnBillIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 POS
        {
            get
            {
                return _POS;
            }
            set
            {
                OnPOSChanging(value);
                ReportPropertyChanging("POS");
                _POS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POS");
                OnPOSChanged();
            }
        }
        private global::System.Int32 _POS;
        partial void OnPOSChanging(global::System.Int32 value);
        partial void OnPOSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private global::System.Double _TotalAmount;
        partial void OnTotalAmountChanging(global::System.Double value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalQuantity
        {
            get
            {
                return _TotalQuantity;
            }
            set
            {
                OnTotalQuantityChanging(value);
                ReportPropertyChanging("TotalQuantity");
                _TotalQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalQuantity");
                OnTotalQuantityChanged();
            }
        }
        private global::System.Int32 _TotalQuantity;
        partial void OnTotalQuantityChanging(global::System.Int32 value);
        partial void OnTotalQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double InputMoney
        {
            get
            {
                return _InputMoney;
            }
            set
            {
                OnInputMoneyChanging(value);
                ReportPropertyChanging("InputMoney");
                _InputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InputMoney");
                OnInputMoneyChanged();
            }
        }
        private global::System.Double _InputMoney;
        partial void OnInputMoneyChanging(global::System.Double value);
        partial void OnInputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OutputMoney
        {
            get
            {
                return _OutputMoney;
            }
            set
            {
                OnOutputMoneyChanging(value);
                ReportPropertyChanging("OutputMoney");
                _OutputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutputMoney");
                OnOutputMoneyChanged();
            }
        }
        private global::System.Double _OutputMoney;
        partial void OnOutputMoneyChanging(global::System.Double value);
        partial void OnOutputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="usp_Bill_Search_FullName_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_Bill_Search_FullName_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_Bill_Search_FullName_Result object.
        /// </summary>
        /// <param name="billID">Initial value of the BillID property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        /// <param name="pOS">Initial value of the POS property.</param>
        /// <param name="totalAmount">Initial value of the TotalAmount property.</param>
        /// <param name="totalQuantity">Initial value of the TotalQuantity property.</param>
        /// <param name="inputMoney">Initial value of the InputMoney property.</param>
        /// <param name="outputMoney">Initial value of the OutputMoney property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        public static usp_Bill_Search_FullName_Result Createusp_Bill_Search_FullName_Result(global::System.String billID, global::System.DateTime saleDate, global::System.Int32 pOS, global::System.Double totalAmount, global::System.Int32 totalQuantity, global::System.Double inputMoney, global::System.Double outputMoney, global::System.String fullName)
        {
            usp_Bill_Search_FullName_Result usp_Bill_Search_FullName_Result = new usp_Bill_Search_FullName_Result();
            usp_Bill_Search_FullName_Result.BillID = billID;
            usp_Bill_Search_FullName_Result.SaleDate = saleDate;
            usp_Bill_Search_FullName_Result.POS = pOS;
            usp_Bill_Search_FullName_Result.TotalAmount = totalAmount;
            usp_Bill_Search_FullName_Result.TotalQuantity = totalQuantity;
            usp_Bill_Search_FullName_Result.InputMoney = inputMoney;
            usp_Bill_Search_FullName_Result.OutputMoney = outputMoney;
            usp_Bill_Search_FullName_Result.FullName = fullName;
            return usp_Bill_Search_FullName_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BillID
        {
            get
            {
                return _BillID;
            }
            set
            {
                OnBillIDChanging(value);
                ReportPropertyChanging("BillID");
                _BillID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BillID");
                OnBillIDChanged();
            }
        }
        private global::System.String _BillID;
        partial void OnBillIDChanging(global::System.String value);
        partial void OnBillIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 POS
        {
            get
            {
                return _POS;
            }
            set
            {
                OnPOSChanging(value);
                ReportPropertyChanging("POS");
                _POS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POS");
                OnPOSChanged();
            }
        }
        private global::System.Int32 _POS;
        partial void OnPOSChanging(global::System.Int32 value);
        partial void OnPOSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private global::System.Double _TotalAmount;
        partial void OnTotalAmountChanging(global::System.Double value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalQuantity
        {
            get
            {
                return _TotalQuantity;
            }
            set
            {
                OnTotalQuantityChanging(value);
                ReportPropertyChanging("TotalQuantity");
                _TotalQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalQuantity");
                OnTotalQuantityChanged();
            }
        }
        private global::System.Int32 _TotalQuantity;
        partial void OnTotalQuantityChanging(global::System.Int32 value);
        partial void OnTotalQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double InputMoney
        {
            get
            {
                return _InputMoney;
            }
            set
            {
                OnInputMoneyChanging(value);
                ReportPropertyChanging("InputMoney");
                _InputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InputMoney");
                OnInputMoneyChanged();
            }
        }
        private global::System.Double _InputMoney;
        partial void OnInputMoneyChanging(global::System.Double value);
        partial void OnInputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OutputMoney
        {
            get
            {
                return _OutputMoney;
            }
            set
            {
                OnOutputMoneyChanging(value);
                ReportPropertyChanging("OutputMoney");
                _OutputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutputMoney");
                OnOutputMoneyChanged();
            }
        }
        private global::System.Double _OutputMoney;
        partial void OnOutputMoneyChanging(global::System.Double value);
        partial void OnOutputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="usp_Bill_Search_Inputmoney_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_Bill_Search_Inputmoney_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_Bill_Search_Inputmoney_Result object.
        /// </summary>
        /// <param name="billID">Initial value of the BillID property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        /// <param name="pOS">Initial value of the POS property.</param>
        /// <param name="totalAmount">Initial value of the TotalAmount property.</param>
        /// <param name="totalQuantity">Initial value of the TotalQuantity property.</param>
        /// <param name="inputMoney">Initial value of the InputMoney property.</param>
        /// <param name="outputMoney">Initial value of the OutputMoney property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        public static usp_Bill_Search_Inputmoney_Result Createusp_Bill_Search_Inputmoney_Result(global::System.String billID, global::System.DateTime saleDate, global::System.Int32 pOS, global::System.Double totalAmount, global::System.Int32 totalQuantity, global::System.Double inputMoney, global::System.Double outputMoney, global::System.String fullName)
        {
            usp_Bill_Search_Inputmoney_Result usp_Bill_Search_Inputmoney_Result = new usp_Bill_Search_Inputmoney_Result();
            usp_Bill_Search_Inputmoney_Result.BillID = billID;
            usp_Bill_Search_Inputmoney_Result.SaleDate = saleDate;
            usp_Bill_Search_Inputmoney_Result.POS = pOS;
            usp_Bill_Search_Inputmoney_Result.TotalAmount = totalAmount;
            usp_Bill_Search_Inputmoney_Result.TotalQuantity = totalQuantity;
            usp_Bill_Search_Inputmoney_Result.InputMoney = inputMoney;
            usp_Bill_Search_Inputmoney_Result.OutputMoney = outputMoney;
            usp_Bill_Search_Inputmoney_Result.FullName = fullName;
            return usp_Bill_Search_Inputmoney_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BillID
        {
            get
            {
                return _BillID;
            }
            set
            {
                OnBillIDChanging(value);
                ReportPropertyChanging("BillID");
                _BillID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BillID");
                OnBillIDChanged();
            }
        }
        private global::System.String _BillID;
        partial void OnBillIDChanging(global::System.String value);
        partial void OnBillIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 POS
        {
            get
            {
                return _POS;
            }
            set
            {
                OnPOSChanging(value);
                ReportPropertyChanging("POS");
                _POS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POS");
                OnPOSChanged();
            }
        }
        private global::System.Int32 _POS;
        partial void OnPOSChanging(global::System.Int32 value);
        partial void OnPOSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private global::System.Double _TotalAmount;
        partial void OnTotalAmountChanging(global::System.Double value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalQuantity
        {
            get
            {
                return _TotalQuantity;
            }
            set
            {
                OnTotalQuantityChanging(value);
                ReportPropertyChanging("TotalQuantity");
                _TotalQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalQuantity");
                OnTotalQuantityChanged();
            }
        }
        private global::System.Int32 _TotalQuantity;
        partial void OnTotalQuantityChanging(global::System.Int32 value);
        partial void OnTotalQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double InputMoney
        {
            get
            {
                return _InputMoney;
            }
            set
            {
                OnInputMoneyChanging(value);
                ReportPropertyChanging("InputMoney");
                _InputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InputMoney");
                OnInputMoneyChanged();
            }
        }
        private global::System.Double _InputMoney;
        partial void OnInputMoneyChanging(global::System.Double value);
        partial void OnInputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OutputMoney
        {
            get
            {
                return _OutputMoney;
            }
            set
            {
                OnOutputMoneyChanging(value);
                ReportPropertyChanging("OutputMoney");
                _OutputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutputMoney");
                OnOutputMoneyChanged();
            }
        }
        private global::System.Double _OutputMoney;
        partial void OnOutputMoneyChanging(global::System.Double value);
        partial void OnOutputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="usp_Bill_Search_POS_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_Bill_Search_POS_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_Bill_Search_POS_Result object.
        /// </summary>
        /// <param name="billID">Initial value of the BillID property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        /// <param name="pOS">Initial value of the POS property.</param>
        /// <param name="totalAmount">Initial value of the TotalAmount property.</param>
        /// <param name="totalQuantity">Initial value of the TotalQuantity property.</param>
        /// <param name="inputMoney">Initial value of the InputMoney property.</param>
        /// <param name="outputMoney">Initial value of the OutputMoney property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        public static usp_Bill_Search_POS_Result Createusp_Bill_Search_POS_Result(global::System.String billID, global::System.DateTime saleDate, global::System.Int32 pOS, global::System.Double totalAmount, global::System.Int32 totalQuantity, global::System.Double inputMoney, global::System.Double outputMoney, global::System.String fullName)
        {
            usp_Bill_Search_POS_Result usp_Bill_Search_POS_Result = new usp_Bill_Search_POS_Result();
            usp_Bill_Search_POS_Result.BillID = billID;
            usp_Bill_Search_POS_Result.SaleDate = saleDate;
            usp_Bill_Search_POS_Result.POS = pOS;
            usp_Bill_Search_POS_Result.TotalAmount = totalAmount;
            usp_Bill_Search_POS_Result.TotalQuantity = totalQuantity;
            usp_Bill_Search_POS_Result.InputMoney = inputMoney;
            usp_Bill_Search_POS_Result.OutputMoney = outputMoney;
            usp_Bill_Search_POS_Result.FullName = fullName;
            return usp_Bill_Search_POS_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BillID
        {
            get
            {
                return _BillID;
            }
            set
            {
                OnBillIDChanging(value);
                ReportPropertyChanging("BillID");
                _BillID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BillID");
                OnBillIDChanged();
            }
        }
        private global::System.String _BillID;
        partial void OnBillIDChanging(global::System.String value);
        partial void OnBillIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 POS
        {
            get
            {
                return _POS;
            }
            set
            {
                OnPOSChanging(value);
                ReportPropertyChanging("POS");
                _POS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POS");
                OnPOSChanged();
            }
        }
        private global::System.Int32 _POS;
        partial void OnPOSChanging(global::System.Int32 value);
        partial void OnPOSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private global::System.Double _TotalAmount;
        partial void OnTotalAmountChanging(global::System.Double value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalQuantity
        {
            get
            {
                return _TotalQuantity;
            }
            set
            {
                OnTotalQuantityChanging(value);
                ReportPropertyChanging("TotalQuantity");
                _TotalQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalQuantity");
                OnTotalQuantityChanged();
            }
        }
        private global::System.Int32 _TotalQuantity;
        partial void OnTotalQuantityChanging(global::System.Int32 value);
        partial void OnTotalQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double InputMoney
        {
            get
            {
                return _InputMoney;
            }
            set
            {
                OnInputMoneyChanging(value);
                ReportPropertyChanging("InputMoney");
                _InputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InputMoney");
                OnInputMoneyChanged();
            }
        }
        private global::System.Double _InputMoney;
        partial void OnInputMoneyChanging(global::System.Double value);
        partial void OnInputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OutputMoney
        {
            get
            {
                return _OutputMoney;
            }
            set
            {
                OnOutputMoneyChanging(value);
                ReportPropertyChanging("OutputMoney");
                _OutputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutputMoney");
                OnOutputMoneyChanged();
            }
        }
        private global::System.Double _OutputMoney;
        partial void OnOutputMoneyChanging(global::System.Double value);
        partial void OnOutputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="usp_Bill_Search_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_Bill_Search_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_Bill_Search_Result object.
        /// </summary>
        /// <param name="billID">Initial value of the BillID property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        /// <param name="pOS">Initial value of the POS property.</param>
        /// <param name="totalAmount">Initial value of the TotalAmount property.</param>
        /// <param name="totalQuantity">Initial value of the TotalQuantity property.</param>
        /// <param name="inputMoney">Initial value of the InputMoney property.</param>
        /// <param name="outputMoney">Initial value of the OutputMoney property.</param>
        /// <param name="outputMoney1">Initial value of the OutputMoney1 property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        public static usp_Bill_Search_Result Createusp_Bill_Search_Result(global::System.String billID, global::System.DateTime saleDate, global::System.Int32 pOS, global::System.Double totalAmount, global::System.Int32 totalQuantity, global::System.Double inputMoney, global::System.Double outputMoney, global::System.Double outputMoney1, global::System.String fullName)
        {
            usp_Bill_Search_Result usp_Bill_Search_Result = new usp_Bill_Search_Result();
            usp_Bill_Search_Result.BillID = billID;
            usp_Bill_Search_Result.SaleDate = saleDate;
            usp_Bill_Search_Result.POS = pOS;
            usp_Bill_Search_Result.TotalAmount = totalAmount;
            usp_Bill_Search_Result.TotalQuantity = totalQuantity;
            usp_Bill_Search_Result.InputMoney = inputMoney;
            usp_Bill_Search_Result.OutputMoney = outputMoney;
            usp_Bill_Search_Result.OutputMoney1 = outputMoney1;
            usp_Bill_Search_Result.FullName = fullName;
            return usp_Bill_Search_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BillID
        {
            get
            {
                return _BillID;
            }
            set
            {
                OnBillIDChanging(value);
                ReportPropertyChanging("BillID");
                _BillID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BillID");
                OnBillIDChanged();
            }
        }
        private global::System.String _BillID;
        partial void OnBillIDChanging(global::System.String value);
        partial void OnBillIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 POS
        {
            get
            {
                return _POS;
            }
            set
            {
                OnPOSChanging(value);
                ReportPropertyChanging("POS");
                _POS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POS");
                OnPOSChanged();
            }
        }
        private global::System.Int32 _POS;
        partial void OnPOSChanging(global::System.Int32 value);
        partial void OnPOSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private global::System.Double _TotalAmount;
        partial void OnTotalAmountChanging(global::System.Double value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalQuantity
        {
            get
            {
                return _TotalQuantity;
            }
            set
            {
                OnTotalQuantityChanging(value);
                ReportPropertyChanging("TotalQuantity");
                _TotalQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalQuantity");
                OnTotalQuantityChanged();
            }
        }
        private global::System.Int32 _TotalQuantity;
        partial void OnTotalQuantityChanging(global::System.Int32 value);
        partial void OnTotalQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double InputMoney
        {
            get
            {
                return _InputMoney;
            }
            set
            {
                OnInputMoneyChanging(value);
                ReportPropertyChanging("InputMoney");
                _InputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InputMoney");
                OnInputMoneyChanged();
            }
        }
        private global::System.Double _InputMoney;
        partial void OnInputMoneyChanging(global::System.Double value);
        partial void OnInputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OutputMoney
        {
            get
            {
                return _OutputMoney;
            }
            set
            {
                OnOutputMoneyChanging(value);
                ReportPropertyChanging("OutputMoney");
                _OutputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutputMoney");
                OnOutputMoneyChanged();
            }
        }
        private global::System.Double _OutputMoney;
        partial void OnOutputMoneyChanging(global::System.Double value);
        partial void OnOutputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OutputMoney1
        {
            get
            {
                return _OutputMoney1;
            }
            set
            {
                OnOutputMoney1Changing(value);
                ReportPropertyChanging("OutputMoney1");
                _OutputMoney1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutputMoney1");
                OnOutputMoney1Changed();
            }
        }
        private global::System.Double _OutputMoney1;
        partial void OnOutputMoney1Changing(global::System.Double value);
        partial void OnOutputMoney1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="usp_Bill_Search_SaleDate_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_Bill_Search_SaleDate_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_Bill_Search_SaleDate_Result object.
        /// </summary>
        /// <param name="billID">Initial value of the BillID property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        /// <param name="pOS">Initial value of the POS property.</param>
        /// <param name="totalAmount">Initial value of the TotalAmount property.</param>
        /// <param name="totalQuantity">Initial value of the TotalQuantity property.</param>
        /// <param name="inputMoney">Initial value of the InputMoney property.</param>
        /// <param name="outputMoney">Initial value of the OutputMoney property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        public static usp_Bill_Search_SaleDate_Result Createusp_Bill_Search_SaleDate_Result(global::System.String billID, global::System.DateTime saleDate, global::System.Int32 pOS, global::System.Double totalAmount, global::System.Int32 totalQuantity, global::System.Double inputMoney, global::System.Double outputMoney, global::System.String fullName)
        {
            usp_Bill_Search_SaleDate_Result usp_Bill_Search_SaleDate_Result = new usp_Bill_Search_SaleDate_Result();
            usp_Bill_Search_SaleDate_Result.BillID = billID;
            usp_Bill_Search_SaleDate_Result.SaleDate = saleDate;
            usp_Bill_Search_SaleDate_Result.POS = pOS;
            usp_Bill_Search_SaleDate_Result.TotalAmount = totalAmount;
            usp_Bill_Search_SaleDate_Result.TotalQuantity = totalQuantity;
            usp_Bill_Search_SaleDate_Result.InputMoney = inputMoney;
            usp_Bill_Search_SaleDate_Result.OutputMoney = outputMoney;
            usp_Bill_Search_SaleDate_Result.FullName = fullName;
            return usp_Bill_Search_SaleDate_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BillID
        {
            get
            {
                return _BillID;
            }
            set
            {
                OnBillIDChanging(value);
                ReportPropertyChanging("BillID");
                _BillID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BillID");
                OnBillIDChanged();
            }
        }
        private global::System.String _BillID;
        partial void OnBillIDChanging(global::System.String value);
        partial void OnBillIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 POS
        {
            get
            {
                return _POS;
            }
            set
            {
                OnPOSChanging(value);
                ReportPropertyChanging("POS");
                _POS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POS");
                OnPOSChanged();
            }
        }
        private global::System.Int32 _POS;
        partial void OnPOSChanging(global::System.Int32 value);
        partial void OnPOSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private global::System.Double _TotalAmount;
        partial void OnTotalAmountChanging(global::System.Double value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalQuantity
        {
            get
            {
                return _TotalQuantity;
            }
            set
            {
                OnTotalQuantityChanging(value);
                ReportPropertyChanging("TotalQuantity");
                _TotalQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalQuantity");
                OnTotalQuantityChanged();
            }
        }
        private global::System.Int32 _TotalQuantity;
        partial void OnTotalQuantityChanging(global::System.Int32 value);
        partial void OnTotalQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double InputMoney
        {
            get
            {
                return _InputMoney;
            }
            set
            {
                OnInputMoneyChanging(value);
                ReportPropertyChanging("InputMoney");
                _InputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InputMoney");
                OnInputMoneyChanged();
            }
        }
        private global::System.Double _InputMoney;
        partial void OnInputMoneyChanging(global::System.Double value);
        partial void OnInputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OutputMoney
        {
            get
            {
                return _OutputMoney;
            }
            set
            {
                OnOutputMoneyChanging(value);
                ReportPropertyChanging("OutputMoney");
                _OutputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutputMoney");
                OnOutputMoneyChanged();
            }
        }
        private global::System.Double _OutputMoney;
        partial void OnOutputMoneyChanging(global::System.Double value);
        partial void OnOutputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="usp_Bill_Search_TotalAmount_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_Bill_Search_TotalAmount_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_Bill_Search_TotalAmount_Result object.
        /// </summary>
        /// <param name="billID">Initial value of the BillID property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        /// <param name="pOS">Initial value of the POS property.</param>
        /// <param name="totalAmount">Initial value of the TotalAmount property.</param>
        /// <param name="totalQuantity">Initial value of the TotalQuantity property.</param>
        /// <param name="inputMoney">Initial value of the InputMoney property.</param>
        /// <param name="outputMoney">Initial value of the OutputMoney property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        public static usp_Bill_Search_TotalAmount_Result Createusp_Bill_Search_TotalAmount_Result(global::System.String billID, global::System.DateTime saleDate, global::System.Int32 pOS, global::System.Double totalAmount, global::System.Int32 totalQuantity, global::System.Double inputMoney, global::System.Double outputMoney, global::System.String fullName)
        {
            usp_Bill_Search_TotalAmount_Result usp_Bill_Search_TotalAmount_Result = new usp_Bill_Search_TotalAmount_Result();
            usp_Bill_Search_TotalAmount_Result.BillID = billID;
            usp_Bill_Search_TotalAmount_Result.SaleDate = saleDate;
            usp_Bill_Search_TotalAmount_Result.POS = pOS;
            usp_Bill_Search_TotalAmount_Result.TotalAmount = totalAmount;
            usp_Bill_Search_TotalAmount_Result.TotalQuantity = totalQuantity;
            usp_Bill_Search_TotalAmount_Result.InputMoney = inputMoney;
            usp_Bill_Search_TotalAmount_Result.OutputMoney = outputMoney;
            usp_Bill_Search_TotalAmount_Result.FullName = fullName;
            return usp_Bill_Search_TotalAmount_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BillID
        {
            get
            {
                return _BillID;
            }
            set
            {
                OnBillIDChanging(value);
                ReportPropertyChanging("BillID");
                _BillID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BillID");
                OnBillIDChanged();
            }
        }
        private global::System.String _BillID;
        partial void OnBillIDChanging(global::System.String value);
        partial void OnBillIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 POS
        {
            get
            {
                return _POS;
            }
            set
            {
                OnPOSChanging(value);
                ReportPropertyChanging("POS");
                _POS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POS");
                OnPOSChanged();
            }
        }
        private global::System.Int32 _POS;
        partial void OnPOSChanging(global::System.Int32 value);
        partial void OnPOSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private global::System.Double _TotalAmount;
        partial void OnTotalAmountChanging(global::System.Double value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalQuantity
        {
            get
            {
                return _TotalQuantity;
            }
            set
            {
                OnTotalQuantityChanging(value);
                ReportPropertyChanging("TotalQuantity");
                _TotalQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalQuantity");
                OnTotalQuantityChanged();
            }
        }
        private global::System.Int32 _TotalQuantity;
        partial void OnTotalQuantityChanging(global::System.Int32 value);
        partial void OnTotalQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double InputMoney
        {
            get
            {
                return _InputMoney;
            }
            set
            {
                OnInputMoneyChanging(value);
                ReportPropertyChanging("InputMoney");
                _InputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InputMoney");
                OnInputMoneyChanged();
            }
        }
        private global::System.Double _InputMoney;
        partial void OnInputMoneyChanging(global::System.Double value);
        partial void OnInputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OutputMoney
        {
            get
            {
                return _OutputMoney;
            }
            set
            {
                OnOutputMoneyChanging(value);
                ReportPropertyChanging("OutputMoney");
                _OutputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutputMoney");
                OnOutputMoneyChanged();
            }
        }
        private global::System.Double _OutputMoney;
        partial void OnOutputMoneyChanging(global::System.Double value);
        partial void OnOutputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="usp_Bill_Search_TotalQuantity_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_Bill_Search_TotalQuantity_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_Bill_Search_TotalQuantity_Result object.
        /// </summary>
        /// <param name="billID">Initial value of the BillID property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        /// <param name="pOS">Initial value of the POS property.</param>
        /// <param name="totalAmount">Initial value of the TotalAmount property.</param>
        /// <param name="totalQuantity">Initial value of the TotalQuantity property.</param>
        /// <param name="inputMoney">Initial value of the InputMoney property.</param>
        /// <param name="outputMoney">Initial value of the OutputMoney property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        public static usp_Bill_Search_TotalQuantity_Result Createusp_Bill_Search_TotalQuantity_Result(global::System.String billID, global::System.DateTime saleDate, global::System.Int32 pOS, global::System.Double totalAmount, global::System.Int32 totalQuantity, global::System.Double inputMoney, global::System.Double outputMoney, global::System.String fullName)
        {
            usp_Bill_Search_TotalQuantity_Result usp_Bill_Search_TotalQuantity_Result = new usp_Bill_Search_TotalQuantity_Result();
            usp_Bill_Search_TotalQuantity_Result.BillID = billID;
            usp_Bill_Search_TotalQuantity_Result.SaleDate = saleDate;
            usp_Bill_Search_TotalQuantity_Result.POS = pOS;
            usp_Bill_Search_TotalQuantity_Result.TotalAmount = totalAmount;
            usp_Bill_Search_TotalQuantity_Result.TotalQuantity = totalQuantity;
            usp_Bill_Search_TotalQuantity_Result.InputMoney = inputMoney;
            usp_Bill_Search_TotalQuantity_Result.OutputMoney = outputMoney;
            usp_Bill_Search_TotalQuantity_Result.FullName = fullName;
            return usp_Bill_Search_TotalQuantity_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BillID
        {
            get
            {
                return _BillID;
            }
            set
            {
                OnBillIDChanging(value);
                ReportPropertyChanging("BillID");
                _BillID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BillID");
                OnBillIDChanged();
            }
        }
        private global::System.String _BillID;
        partial void OnBillIDChanging(global::System.String value);
        partial void OnBillIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 POS
        {
            get
            {
                return _POS;
            }
            set
            {
                OnPOSChanging(value);
                ReportPropertyChanging("POS");
                _POS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POS");
                OnPOSChanged();
            }
        }
        private global::System.Int32 _POS;
        partial void OnPOSChanging(global::System.Int32 value);
        partial void OnPOSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private global::System.Double _TotalAmount;
        partial void OnTotalAmountChanging(global::System.Double value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalQuantity
        {
            get
            {
                return _TotalQuantity;
            }
            set
            {
                OnTotalQuantityChanging(value);
                ReportPropertyChanging("TotalQuantity");
                _TotalQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalQuantity");
                OnTotalQuantityChanged();
            }
        }
        private global::System.Int32 _TotalQuantity;
        partial void OnTotalQuantityChanging(global::System.Int32 value);
        partial void OnTotalQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double InputMoney
        {
            get
            {
                return _InputMoney;
            }
            set
            {
                OnInputMoneyChanging(value);
                ReportPropertyChanging("InputMoney");
                _InputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InputMoney");
                OnInputMoneyChanged();
            }
        }
        private global::System.Double _InputMoney;
        partial void OnInputMoneyChanging(global::System.Double value);
        partial void OnInputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OutputMoney
        {
            get
            {
                return _OutputMoney;
            }
            set
            {
                OnOutputMoneyChanging(value);
                ReportPropertyChanging("OutputMoney");
                _OutputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutputMoney");
                OnOutputMoneyChanged();
            }
        }
        private global::System.Double _OutputMoney;
        partial void OnOutputMoneyChanging(global::System.Double value);
        partial void OnOutputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="usp_Bill_SelectAll_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_Bill_SelectAll_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_Bill_SelectAll_Result object.
        /// </summary>
        /// <param name="billID">Initial value of the BillID property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        /// <param name="pOS">Initial value of the POS property.</param>
        /// <param name="totalAmount">Initial value of the TotalAmount property.</param>
        /// <param name="totalQuantity">Initial value of the TotalQuantity property.</param>
        /// <param name="inputMoney">Initial value of the InputMoney property.</param>
        /// <param name="outputMoney">Initial value of the OutputMoney property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        public static usp_Bill_SelectAll_Result Createusp_Bill_SelectAll_Result(global::System.String billID, global::System.DateTime saleDate, global::System.Int32 pOS, global::System.Double totalAmount, global::System.Int32 totalQuantity, global::System.Double inputMoney, global::System.Double outputMoney, global::System.String fullName)
        {
            usp_Bill_SelectAll_Result usp_Bill_SelectAll_Result = new usp_Bill_SelectAll_Result();
            usp_Bill_SelectAll_Result.BillID = billID;
            usp_Bill_SelectAll_Result.SaleDate = saleDate;
            usp_Bill_SelectAll_Result.POS = pOS;
            usp_Bill_SelectAll_Result.TotalAmount = totalAmount;
            usp_Bill_SelectAll_Result.TotalQuantity = totalQuantity;
            usp_Bill_SelectAll_Result.InputMoney = inputMoney;
            usp_Bill_SelectAll_Result.OutputMoney = outputMoney;
            usp_Bill_SelectAll_Result.FullName = fullName;
            return usp_Bill_SelectAll_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BillID
        {
            get
            {
                return _BillID;
            }
            set
            {
                OnBillIDChanging(value);
                ReportPropertyChanging("BillID");
                _BillID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BillID");
                OnBillIDChanged();
            }
        }
        private global::System.String _BillID;
        partial void OnBillIDChanging(global::System.String value);
        partial void OnBillIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 POS
        {
            get
            {
                return _POS;
            }
            set
            {
                OnPOSChanging(value);
                ReportPropertyChanging("POS");
                _POS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("POS");
                OnPOSChanged();
            }
        }
        private global::System.Int32 _POS;
        partial void OnPOSChanging(global::System.Int32 value);
        partial void OnPOSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private global::System.Double _TotalAmount;
        partial void OnTotalAmountChanging(global::System.Double value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalQuantity
        {
            get
            {
                return _TotalQuantity;
            }
            set
            {
                OnTotalQuantityChanging(value);
                ReportPropertyChanging("TotalQuantity");
                _TotalQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalQuantity");
                OnTotalQuantityChanged();
            }
        }
        private global::System.Int32 _TotalQuantity;
        partial void OnTotalQuantityChanging(global::System.Int32 value);
        partial void OnTotalQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double InputMoney
        {
            get
            {
                return _InputMoney;
            }
            set
            {
                OnInputMoneyChanging(value);
                ReportPropertyChanging("InputMoney");
                _InputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InputMoney");
                OnInputMoneyChanged();
            }
        }
        private global::System.Double _InputMoney;
        partial void OnInputMoneyChanging(global::System.Double value);
        partial void OnInputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OutputMoney
        {
            get
            {
                return _OutputMoney;
            }
            set
            {
                OnOutputMoneyChanging(value);
                ReportPropertyChanging("OutputMoney");
                _OutputMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutputMoney");
                OnOutputMoneyChanged();
            }
        }
        private global::System.Double _OutputMoney;
        partial void OnOutputMoneyChanging(global::System.Double value);
        partial void OnOutputMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="usp_BranchOfficeDetailSearch_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_BranchOfficeDetailSearch_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_BranchOfficeDetailSearch_Result object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static usp_BranchOfficeDetailSearch_Result Createusp_BranchOfficeDetailSearch_Result(global::System.String productID, global::System.String name, global::System.Int32 quantity, global::System.String status)
        {
            usp_BranchOfficeDetailSearch_Result usp_BranchOfficeDetailSearch_Result = new usp_BranchOfficeDetailSearch_Result();
            usp_BranchOfficeDetailSearch_Result.ProductID = productID;
            usp_BranchOfficeDetailSearch_Result.Name = name;
            usp_BranchOfficeDetailSearch_Result.Quantity = quantity;
            usp_BranchOfficeDetailSearch_Result.Status = status;
            return usp_BranchOfficeDetailSearch_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="usp_BranchOfficeSearch_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_BranchOfficeSearch_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_BranchOfficeSearch_Result object.
        /// </summary>
        /// <param name="branchOfficeID">Initial value of the BranchOfficeID property.</param>
        /// <param name="headquaterID">Initial value of the HeadquaterID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="branch">Initial value of the Branch property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        public static usp_BranchOfficeSearch_Result Createusp_BranchOfficeSearch_Result(global::System.String branchOfficeID, global::System.String headquaterID, global::System.DateTime date, global::System.String branch, global::System.String accountID)
        {
            usp_BranchOfficeSearch_Result usp_BranchOfficeSearch_Result = new usp_BranchOfficeSearch_Result();
            usp_BranchOfficeSearch_Result.BranchOfficeID = branchOfficeID;
            usp_BranchOfficeSearch_Result.HeadquaterID = headquaterID;
            usp_BranchOfficeSearch_Result.Date = date;
            usp_BranchOfficeSearch_Result.Branch = branch;
            usp_BranchOfficeSearch_Result.AccountID = accountID;
            return usp_BranchOfficeSearch_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BranchOfficeID
        {
            get
            {
                return _BranchOfficeID;
            }
            set
            {
                OnBranchOfficeIDChanging(value);
                ReportPropertyChanging("BranchOfficeID");
                _BranchOfficeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BranchOfficeID");
                OnBranchOfficeIDChanged();
            }
        }
        private global::System.String _BranchOfficeID;
        partial void OnBranchOfficeIDChanging(global::System.String value);
        partial void OnBranchOfficeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HeadquaterID
        {
            get
            {
                return _HeadquaterID;
            }
            set
            {
                OnHeadquaterIDChanging(value);
                ReportPropertyChanging("HeadquaterID");
                _HeadquaterID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HeadquaterID");
                OnHeadquaterIDChanged();
            }
        }
        private global::System.String _HeadquaterID;
        partial void OnHeadquaterIDChanging(global::System.String value);
        partial void OnHeadquaterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Branch
        {
            get
            {
                return _Branch;
            }
            set
            {
                OnBranchChanging(value);
                ReportPropertyChanging("Branch");
                _Branch = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Branch");
                OnBranchChanged();
            }
        }
        private global::System.String _Branch;
        partial void OnBranchChanging(global::System.String value);
        partial void OnBranchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.String _AccountID;
        partial void OnAccountIDChanging(global::System.String value);
        partial void OnAccountIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="usp_CategorySearch_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_CategorySearch_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_CategorySearch_Result object.
        /// </summary>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static usp_CategorySearch_Result Createusp_CategorySearch_Result(global::System.String categoryID, global::System.String name, global::System.Int32 quantity)
        {
            usp_CategorySearch_Result usp_CategorySearch_Result = new usp_CategorySearch_Result();
            usp_CategorySearch_Result.CategoryID = categoryID;
            usp_CategorySearch_Result.Name = name;
            usp_CategorySearch_Result.Quantity = quantity;
            return usp_CategorySearch_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.String _CategoryID;
        partial void OnCategoryIDChanging(global::System.String value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="usp_HeadquarterReceiptDetailSearch_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_HeadquarterReceiptDetailSearch_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_HeadquarterReceiptDetailSearch_Result object.
        /// </summary>
        /// <param name="headquaterID">Initial value of the HeadquaterID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static usp_HeadquarterReceiptDetailSearch_Result Createusp_HeadquarterReceiptDetailSearch_Result(global::System.String headquaterID, global::System.String productID, global::System.Int32 quantity, global::System.Double price, global::System.String status)
        {
            usp_HeadquarterReceiptDetailSearch_Result usp_HeadquarterReceiptDetailSearch_Result = new usp_HeadquarterReceiptDetailSearch_Result();
            usp_HeadquarterReceiptDetailSearch_Result.HeadquaterID = headquaterID;
            usp_HeadquarterReceiptDetailSearch_Result.ProductID = productID;
            usp_HeadquarterReceiptDetailSearch_Result.Quantity = quantity;
            usp_HeadquarterReceiptDetailSearch_Result.Price = price;
            usp_HeadquarterReceiptDetailSearch_Result.Status = status;
            return usp_HeadquarterReceiptDetailSearch_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HeadquaterID
        {
            get
            {
                return _HeadquaterID;
            }
            set
            {
                OnHeadquaterIDChanging(value);
                ReportPropertyChanging("HeadquaterID");
                _HeadquaterID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HeadquaterID");
                OnHeadquaterIDChanged();
            }
        }
        private global::System.String _HeadquaterID;
        partial void OnHeadquaterIDChanging(global::System.String value);
        partial void OnHeadquaterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpiryDate
        {
            get
            {
                return _ExpiryDate;
            }
            set
            {
                OnExpiryDateChanging(value);
                ReportPropertyChanging("ExpiryDate");
                _ExpiryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpiryDate");
                OnExpiryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpiryDate;
        partial void OnExpiryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpiryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="usp_HEADQUATERRECEIPTSearch_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_HEADQUATERRECEIPTSearch_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_HEADQUATERRECEIPTSearch_Result object.
        /// </summary>
        /// <param name="headquaterID">Initial value of the HeadquaterID property.</param>
        /// <param name="proposeID">Initial value of the ProposeID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="totalAmount">Initial value of the TotalAmount property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        public static usp_HEADQUATERRECEIPTSearch_Result Createusp_HEADQUATERRECEIPTSearch_Result(global::System.String headquaterID, global::System.String proposeID, global::System.DateTime date, global::System.Double totalAmount, global::System.String accountID)
        {
            usp_HEADQUATERRECEIPTSearch_Result usp_HEADQUATERRECEIPTSearch_Result = new usp_HEADQUATERRECEIPTSearch_Result();
            usp_HEADQUATERRECEIPTSearch_Result.HeadquaterID = headquaterID;
            usp_HEADQUATERRECEIPTSearch_Result.ProposeID = proposeID;
            usp_HEADQUATERRECEIPTSearch_Result.Date = date;
            usp_HEADQUATERRECEIPTSearch_Result.TotalAmount = totalAmount;
            usp_HEADQUATERRECEIPTSearch_Result.AccountID = accountID;
            return usp_HEADQUATERRECEIPTSearch_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HeadquaterID
        {
            get
            {
                return _HeadquaterID;
            }
            set
            {
                OnHeadquaterIDChanging(value);
                ReportPropertyChanging("HeadquaterID");
                _HeadquaterID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HeadquaterID");
                OnHeadquaterIDChanged();
            }
        }
        private global::System.String _HeadquaterID;
        partial void OnHeadquaterIDChanging(global::System.String value);
        partial void OnHeadquaterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProposeID
        {
            get
            {
                return _ProposeID;
            }
            set
            {
                OnProposeIDChanging(value);
                ReportPropertyChanging("ProposeID");
                _ProposeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProposeID");
                OnProposeIDChanged();
            }
        }
        private global::System.String _ProposeID;
        partial void OnProposeIDChanging(global::System.String value);
        partial void OnProposeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private global::System.Double _TotalAmount;
        partial void OnTotalAmountChanging(global::System.Double value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.String _AccountID;
        partial void OnAccountIDChanging(global::System.String value);
        partial void OnAccountIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="usp_PriceSearch_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_PriceSearch_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_PriceSearch_Result object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="effectiveDay">Initial value of the EffectiveDay property.</param>
        public static usp_PriceSearch_Result Createusp_PriceSearch_Result(global::System.String productID, global::System.Double price, global::System.DateTime effectiveDay)
        {
            usp_PriceSearch_Result usp_PriceSearch_Result = new usp_PriceSearch_Result();
            usp_PriceSearch_Result.ProductID = productID;
            usp_PriceSearch_Result.Price = price;
            usp_PriceSearch_Result.EffectiveDay = effectiveDay;
            return usp_PriceSearch_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDay
        {
            get
            {
                return _EffectiveDay;
            }
            set
            {
                OnEffectiveDayChanging(value);
                ReportPropertyChanging("EffectiveDay");
                _EffectiveDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDay");
                OnEffectiveDayChanged();
            }
        }
        private global::System.DateTime _EffectiveDay;
        partial void OnEffectiveDayChanging(global::System.DateTime value);
        partial void OnEffectiveDayChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="usp_ProposedDetailSearch_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_ProposedDetailSearch_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_ProposedDetailSearch_Result object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="proposeID">Initial value of the ProposeID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static usp_ProposedDetailSearch_Result Createusp_ProposedDetailSearch_Result(global::System.String productID, global::System.String proposeID, global::System.Int32 quantity)
        {
            usp_ProposedDetailSearch_Result usp_ProposedDetailSearch_Result = new usp_ProposedDetailSearch_Result();
            usp_ProposedDetailSearch_Result.ProductID = productID;
            usp_ProposedDetailSearch_Result.ProposeID = proposeID;
            usp_ProposedDetailSearch_Result.Quantity = quantity;
            return usp_ProposedDetailSearch_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProposeID
        {
            get
            {
                return _ProposeID;
            }
            set
            {
                OnProposeIDChanging(value);
                ReportPropertyChanging("ProposeID");
                _ProposeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProposeID");
                OnProposeIDChanged();
            }
        }
        private global::System.String _ProposeID;
        partial void OnProposeIDChanging(global::System.String value);
        partial void OnProposeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="usp_ProposedSearch_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_ProposedSearch_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_ProposedSearch_Result object.
        /// </summary>
        /// <param name="proposeID">Initial value of the ProposeID property.</param>
        /// <param name="proposeDate">Initial value of the ProposeDate property.</param>
        /// <param name="supplierID">Initial value of the SupplierID property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        public static usp_ProposedSearch_Result Createusp_ProposedSearch_Result(global::System.String proposeID, global::System.DateTime proposeDate, global::System.String supplierID, global::System.String accountID)
        {
            usp_ProposedSearch_Result usp_ProposedSearch_Result = new usp_ProposedSearch_Result();
            usp_ProposedSearch_Result.ProposeID = proposeID;
            usp_ProposedSearch_Result.ProposeDate = proposeDate;
            usp_ProposedSearch_Result.SupplierID = supplierID;
            usp_ProposedSearch_Result.AccountID = accountID;
            return usp_ProposedSearch_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProposeID
        {
            get
            {
                return _ProposeID;
            }
            set
            {
                OnProposeIDChanging(value);
                ReportPropertyChanging("ProposeID");
                _ProposeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProposeID");
                OnProposeIDChanged();
            }
        }
        private global::System.String _ProposeID;
        partial void OnProposeIDChanging(global::System.String value);
        partial void OnProposeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ProposeDate
        {
            get
            {
                return _ProposeDate;
            }
            set
            {
                OnProposeDateChanging(value);
                ReportPropertyChanging("ProposeDate");
                _ProposeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProposeDate");
                OnProposeDateChanged();
            }
        }
        private global::System.DateTime _ProposeDate;
        partial void OnProposeDateChanging(global::System.DateTime value);
        partial void OnProposeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private global::System.String _SupplierID;
        partial void OnSupplierIDChanging(global::System.String value);
        partial void OnSupplierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.String _AccountID;
        partial void OnAccountIDChanging(global::System.String value);
        partial void OnAccountIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CMART0Model", Name="usp_SupplierSearch_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_SupplierSearch_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usp_SupplierSearch_Result object.
        /// </summary>
        /// <param name="supplierID">Initial value of the SupplierID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="phoneNumber">Initial value of the PhoneNumber property.</param>
        public static usp_SupplierSearch_Result Createusp_SupplierSearch_Result(global::System.String supplierID, global::System.String name, global::System.String address, global::System.String phoneNumber)
        {
            usp_SupplierSearch_Result usp_SupplierSearch_Result = new usp_SupplierSearch_Result();
            usp_SupplierSearch_Result.SupplierID = supplierID;
            usp_SupplierSearch_Result.Name = name;
            usp_SupplierSearch_Result.Address = address;
            usp_SupplierSearch_Result.PhoneNumber = phoneNumber;
            return usp_SupplierSearch_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private global::System.String _SupplierID;
        partial void OnSupplierIDChanging(global::System.String value);
        partial void OnSupplierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();

        #endregion

    }

    #endregion

    
}
